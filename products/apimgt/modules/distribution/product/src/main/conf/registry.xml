<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ~ Copyright 2005-2011 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<wso2registry>

    <!--
    For details on configuring different config & governance registries see;
    http://wso2.org/library/tutorials/2010/04/sharing-registry-space-across-multiple-product-instances
    -->

    <currentDBConfig>wso2registry</currentDBConfig>
    <readOnly>false</readOnly>
    <enableCache>true</enableCache>
    <registryRoot>/</registryRoot>

    <dbConfig name="wso2registry">
        <url>jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE</url>
        <userName>wso2carbon</userName>
        <password>wso2carbon</password>
        <driverName>org.h2.Driver</driverName>
        <maxActive>50</maxActive>
        <maxWait>60000</maxWait>
        <minIdle>5</minIdle>
    </dbConfig>

   <!--<handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.synapse</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.esb</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.axis2</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.wsas</property>
        </filter>
    </handler>-->


<!-- This handler process the uploaded  WSDL files -->

    <handler class="org.wso2.carbon.registry.extensions.handlers.WSDLMediaTypeHandler">
        <!--property name="createService">false</property>
        <property name="disableWSDLValidation">true</property-->
        <property name="schemaLocationConfiguration" type="xml">
            <location>/trunk/schemas/</location>
        </property>
        <property name="wsdlLocationConfiguration" type="xml">
            <location>/trunk/wsdls/</location>
        </property>
        <property name="policyLocationConfiguration" type="xml">
            <location>/trunk/policies/</location>
        </property>

        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/wsdl+xml</property>
        </filter>
    </handler>

<!-- This handler processes the services being added to the registry -->

    <handler class="org.wso2.carbon.registry.extensions.handlers.ServiceMediaTypeHandler">
        <!--property name="disableWSDLValidation">true</property-->
        <property name="smartLifecycleLinks" type="xml">
            <key>dev</key>
            <key>qa</key>
            <key>live</key>
        </property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.wso2-service+xml</property>
        </filter>
    </handler>

<!-- This handler processes the policy files of the given media type defined by the filter -->

    <handler class="org.wso2.carbon.registry.extensions.handlers.PolicyMediaTypeHandler">
        <property name="policyLocationConfiguration" type="xml">
            <location>/trunk/policies/</location>
        </property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/policy+xml</property>
        </filter>
    </handler>

    <!-- This handler processes the schema types which are defined by the filter  -->

    <handler class="org.wso2.carbon.registry.extensions.handlers.XSDMediaTypeHandler">
        <!--property name="disableSchemaValidation">true</property-->
        <property name="locationConfiguration" type="xml">
            <location>/trunk/schemas/</location>
        </property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/x-xsd+xml</property>
        </filter>
    </handler>

<!-- This handler processes service end-points defined in the WSDL files being uploaded to the registry -->

    <handler class="org.wso2.carbon.registry.extensions.handlers.EndpointMediaTypeHandler">
        <property name="endpointMediaType">application/vnd.wso2.endpoint</property>
        <property name="endpointLocationConfiguration" type="xml">
            <location>/trunk/endpoints/</location>
        </property>
        <filter class="org.wso2.carbon.registry.extensions.filters.EndpointMediaTypeMatcher">
        </filter>
    </handler>

    <!--remoteInstance url="https://localhost:9443/registry">
        <id>instanceid</id>
        <username>username</username>
        <password>password</password>
    </remoteInstance-->

    <!--remoteInstance url="https://localhost:9443/registry">
        <id>instanceid</id>
        <dbConfig>wso2registry</dbConfig>
        <readOnly>false</readOnly>
        <enableCache>true</enableCache>
        <registryRoot>/</registryRoot>
    </remoteInstance-->

    <!--mount path="/_system/config" overwrite="true|false|virtual">
        <instanceId>instanceid</instanceId>
        <targetPath>/_system/nodes</targetPath>
    </mount-->

    
    <versionResourcesOnChange>true</versionResourcesOnChange>

    <!-- NOTE: You can edit the options under "StaticConfiguration" only before the
     startup. -->
    <staticConfiguration>
        <versioningProperties>true</versioningProperties>
        <versioningComments>true</versioningComments>
        <versioningTags>true</versioningTags>
        <versioningRatings>true</versioningRatings>
    </staticConfiguration>
</wso2registry>
