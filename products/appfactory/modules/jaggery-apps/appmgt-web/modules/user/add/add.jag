<%
  include('../config_reader.jag');
  include('../constants.jag');

  // used for logging
  var log = new Log();
// creating a user
function createUser(newUserName, password, email, firstName, lastName) {
    var ws = require('ws');
    var request = new ws.WSRequest();
    var options = [];
    options.useSOAP = 1.1;
    options.timeout = 1000000;
    options.action = "urn:process";

    var payload = '<p:UserCreationProcessRequest xmlns:p="http://wso2.org"><userName xmlns="http://wso2.org">' + newUserName + '</userName><password xmlns="http://wso2.org">' + password + '</password><email xmlns="http://wso2.org">' + email + '</email><firstName xmlns="http://wso2.org">' + firstName + '</firstName><lastName xmlns="http://wso2.org">' + lastName + '</lastName></p:UserCreationProcessRequest>';
    var result;
    try {
        var endPoint = getProperty(WS_CREATE_USER);
        request.open(options, endPoint, false);
        request.send(payload);
        result = request.responseE4X;
        if (log.isDebugEnabled()) {
            log.debug("Invoking service endpoint:" + endPoint + " returned result:" + result);
        }
    } catch (e) {
        log.error("Error while creating the user account \n" + e.message);
        throw "Error while creating the user account";
    }
    return result;
}

//
function getConfirmationObject(secreteKey) {
    var ws = require("ws");
    var EmailVerificationService = new ws.WSRequest();
    var options = [];
    options.useSOAP = 1.2;
    options.action = "urn:ConfirmationBean";
    options.username = getProperty(ADMIN_USERNAME);
    options.password = getProperty(ADMIN_PASSWORD);

    var payload = <ser:confirmUser xmlns:ser="http://services.verification.email.carbon.wso2.org"></ser:confirmUser>;
    var ser = new Namespace("http://services.verification.email.carbon.wso2.org");
    payload.ser::secretKey = secreteKey;
    var result;
    try {
        var endPoint = getProperty(WS_EMAIL_VERIFICATION);
        EmailVerificationService.open(options, endPoint, false);
        EmailVerificationService.send(payload);
        result = EmailVerificationService.responseE4X;
        if (log.isDebugEnabled()) {
            log.debug("Invoking service endpoint:" + endPoint + " returned result:" + result);
        }
        return result;
    } catch (e) {
        log.error("Email varification failed \n" + e.message);
        throw "Email varification failed";
    }
}

function invokeUserActivationProcess(userName, email, confirmationKey) {
    var ws = require('ws');
    var UserActivationProcess = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.1;
    options.action = "urn:process";
    var payload = '<UserActivationProcessRequest xmlns="http://wso2.org"><userName xmlns="http://wso2.org">' + userName + '</userName><email xmlns="http://wso2.org">' + email + '</email><confirmationKey xmlns="http://wso2.org">' + confirmationKey + '</confirmationKey></UserActivationProcessRequest>';
    var result;

    try {
        var endPoint = getProperty(WS_ACTIVATE_USER);
        UserActivationProcess.open(options, endPoint, false);
        UserActivationProcess.send(payload);
        result = UserActivationProcess.responseE4X;
        if (log.isDebugEnabled()) {
            log.debug("Invoking service endpoint:" + endPoint + " returned result:" + result);
        }
        return result;
    } catch (e) {
        log.error("Error while activating user \n" + e.message);
        throw "Error while activating user";
    }
}
%>
