<% jagg.template("administration/rssmanager/edit", function (inputs, outputs, jagg) { %>
<%
var applicationName = request.getParameter("applicationName");
var applicationKey = request.getParameter("applicationKey");

%>


<script type="text/javascript">

    var dbName,environment='',
        applicationKey='',
        dbUser='',
        selectedUser='',
        selectedTemplate='',
        selectedTemplateForAttachuser='',
        applicationKey='<%=request.getParameter("applicationKey")%>',
        dbName='<%=request.getParameter("dbName") %>',
        environment='<%=request.getParameter("environment") %>';

$(document).ready(function(){

    $('#dbNameConatiner').html('<h2>'+dbName+'</hs2>') ;
    $('#addNew_permission').click(function(){
        var newEntry = $('#permission_entry').clone().show();
        newEntry.appendTo('#permission_listing');
    });
     getDatabaseUsers();
    //getDatabases();
    getattachedeUsers();
    getDbUserTemplateInfoForStages();
    $('select#dbUsersDD').change(function(){
        selectedUser=$(this).val();
        getUserPrivileges(selectedUser);
    });
    $('select#templateDD').change(function(){
        selectedTemplate=$(this).val();
        selectedTemplateForAttachuser= selectedTemplate+'@'+environment;

         if(selectedTemplate.length>0){
             getTemplate(selectedTemplate);
         }
    });
    $('#btn_save').click(function(){
        detachUser(dbUser);
    });

    $('#btn_delete_db').click(function(event){
        event.preventDefault();
        jagg.popMessage({type:'confirm',title:'Delete Database',content:'Are you sure you want to delete the database '+dbName+' ?',okCallback:function(){ deleteDatabase();},cancelCallback:function(){}});
    });
    $('#btn_cancel').click(function(event){
        event.preventDefault();
        callPreviousPage();
    });


});

var removeElement = function(clickedElem){
    $(clickedElem).parent().parent().parent().parent().remove();
}


function getDatabaseUsers(){
    jagg.post("../blocks/rssmanager/users/ajax/list.jag", {
                action:"getAvailableUsersToAttachToDatabase",
                applicationKey:applicationKey,
                databaseName:dbName,
                dbServerInstanceName:environment
            },

            function (result) {

                 var users=jQuery.parseJSON(result);
                if(result != undefined || result==true){
                    var options='';
                    for(var u in users){
                       options+='<option value="'+users[u]+'">'+users[u]+'</option>';
                    }

                  $('#dbUsersDD').append(options);

                } else if(result==false){


                }
            },
            function (jqXHR, textStatus, errorThrown) {
                // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

            });

}
    function getattachedeUsers(){
        jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
                    action:"getAttachedUsers",
                    applicationKey:applicationKey,
                    dbname:dbName,
                    rssInstance:environment
                },

                function (result) {
                    var users=jQuery.parseJSON(result);
                    if(result != undefined || result==true){
                 //       var options='';
                   //     for(var u in users){
                  //          options+='<option value="'+users[u].name+'">'+users[u].name+'</option>';
                  //      }

                        if(users.length>0){
                            var username= users[0].name;
                            dbUser=username;
                            $('#dbUsersDD').append('<option value="'+username+'">'+username+'</option>');
                            $('#dbUsersDD').select2('val',username);
                        }
                        getUserPrivileges(username);



                    }else if(result==false){


                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                });

    }

    function getUserPrivileges(userName){
        jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
                    action:"getUserPrivileges",
                    applicationKey:applicationKey,
                    dbname:dbName,
                    rssInstanceName:environment,
                    username:userName
                },

                function (result) {
                    var privilages=jQuery.parseJSON(result)[0];
                    if(result != undefined || result==true){
                       for(var p in privilages){
                           if(privilages[p]=="Y"){
                               $('#'+p).prop('checked', true);


                           } else{
                               $('#'+p).prop('checked', false);
                           }
                           $('#'+p).prop('disabled', 'disabled');

                       }

                    }else if(result==false){


                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                });

    }

    function getDatabases(){
        jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
                    action:"getDatabases",
                    applicationKey:applicationKey

                },

                function (result) {
                    var users=jQuery.parseJSON(result);
                    if(result != undefined || result==true){


                    }else if(result==false){


                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                });

    }
    function getDbUserTemplateInfoForStages(){
        jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
                    action:"getDbUserTemplateInfoForStages",
                    applicationKey:applicationKey

                },

                function (result) {
                    var info=jQuery.parseJSON(result);
                    if(result != undefined || result==true){
                        var templateArray=getTemplatesForStage(info,environment);
                        var options='';
                        for(var t in templateArray){
                            var name=templateArray[t].name.split('@')[0];
                            options+='<option value="'+name+'">'+templateArray[t].name+'</option>';
                        }
                     //   options+='<option value="default">Select Template...</option>';
                        $('#templateDD').append(options);
                       // $('#templateDD').val('default');
                    }else if(result==false){


                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                });

    }

    function getTemplatesForStage(result,stage){
        for(var s in result){
            if(result[s].stage===stage){
                return result[s].templates; //returns an array
            }
        }

    }
    function selectAllOptions() {
        var selectAll = document.getElementById('selectAll');
        var c = new Array();
        c = document.getElementsByTagName('input');
        if (selectAll.checked) {
            for (var i = 0; i < c.length; i++) {
                if (c[i].type == 'checkbox') {
                    c[i].checked = true;
                }
            }
        } else {
            for (var j = 0; j < c.length; j++) {
                if (c[j].type == 'checkbox') {
                    c[j].checked = false;
                }
            }
        }
    }

    function getTemplate(templateName){
        jagg.post("../blocks/rssmanager/templates/ajax/list.jag", {
            action:"getDetailedTemplate",
            applicationKey:applicationKey,
            templateName:templateName,
            environment:environment
        }, function (result) {
            if(result != undefined){
                var privilages = jQuery.parseJSON(result)[0];
                for(var p in privilages){
                    if(privilages[p]=="Y"){
                        $('#'+p).prop('checked', true);


                    } else if(privilages[p]=="N"){
                        $('#'+p).removeAttr("checked");
                    }
                    $('#'+p).prop('disabled', 'disabled');

                }

            }

        }, function (jqXHR, textStatus, errorThrown) {
            jagg.message({content:'Get detailed tempated',type:'error', id:'tempalte_edit' });
        });
    }

    function detachUser(userName) {
    	var isValid=true;
    	jagg.removeMessage();
	
        selectedTemplateForAttachuser = $('select#templateDD').val()+'@'+environment;
        selectedUser = $('select#dbUsersDD').val();
        if($('select#templateDD').val()==''){
        	isValid=false;
        	jagg.message({type:'error',content:'Select valid Permission Template!', id:'tempalte_edit'});
        }

		if($('select#dbUsersDD').val()==''){
			isValid=false;
			jagg.message({type:'error',content:'Select valid User!', id:'tempalte_edit'});
		}
	
		if(isValid){
			jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
			        action: "detachUser",
			        applicationKey: applicationKey,
			        databaseName: dbName,
			        dbServerInstanceName: environment,
			        username: userName
			    },
			    function (result) {
			        // var users=jQuery.parseJSON(result);
			        console.info('detachUser response handling...result => '+result);
			        console.info('detachUser response handling...(result == "true") => '+(result == true));
			        if (result !== undefined && result == "true") {
			            if (selectedUser == undefined || selectedUser.length === 0) {
			                attachNewUser(userName, selectedTemplateForAttachuser);
			            } else {
			                attachNewUser(selectedUser, selectedTemplateForAttachuser);
			            }
			            
			        }
			        
			    },
			    function (jqXHR, textStatus, errorThrown) {
			        // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
			        //console.error('detachUser response handling failed');
			    });
		}
    }

    function attachNewUser(userName,template){
        console.info('attachNewUser userName '+userName+" template "+template);
        jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
                    action:"attachNewUser",
                    applicationKey:applicationKey,
                    databaseName:dbName,
                    dbServerInstanceName:environment,
                    users:userName,
                    templates:template
                },

                function (result) {

                    //var users=jQuery.parseJSON(result);
                    if(result !== undefined && result=='success'){
                         callPreviousPage();
                    }else{
                        jagg.message({type:'error',content:'Database Configurations not modified!', id:'tempalte_edit'});
                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
                    jagg.message({type:'error',content:'Database Configurations not modified!', id:'tempalte_edit'});
                });



    }
    function deleteDatabase(){
        jagg.post("../blocks/rssmanager/drop/ajax/drop.jag", {
                    action:"dropDatabase",
                    applicationKey:applicationKey,
                    databaseName:dbName,
                    rssInstanceName:environment
                },

                function (result) {


                    if(result != undefined || result==true){
                        window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/configureenvironment.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>");
                    }else if(result==false){


                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                });



    }
    
    // call previous page
    function callPreviousPage(){
		var oldURL = document.referrer;
		window.location.replace(oldURL);			
    }
    
</script>
 <div class="container">
				<article class="main">
				        
                        <header><div><% jagg.includeBlock("page/messages", null); %></div>
                        	<div class="content">
                                <h1>Resources</h1>
                             </div>
                        </header>
                        <% jagg.includeBlock("resources/menu", {page:'database_config',applicationName:applicationName,applicationKey:applicationKey}); %>

                        <section class="separator">
                            <div class="page_nav">
                                <div class="content clear">
                                    <ol class="breadcrumb left">
                                        <li class="breadcrumb_item"><a href="javascript:callPreviousPage();" class="breadcrumb_link">Database Configurations</a></li>
                                        <li id="dbNameConatiner"class="breadcrumb_item"></li>
                                    </ol>
                                    <div class="right btn_list_box">
                                        <ul class="inline_box inline_list btn_list">
                                            <li class="inline_item"><a id="btn_delete_db" href="#" class="btn main btn_list_first">Delete DB</a>
                                            </li>
                                        </ul>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>

                        </section>


                        <div class="content well" style="display:none" id="permission_entry">
                            <div class="left pw_50">
                                <ul class="list big push_bottom">
                                    <li>

                                        <label >DB User</label>
                                        <select class="half big"  name="permission_template">
                                            <option value="db_user_1">db_1</option>
                                        </select>
                                    </li>
                                </ul>
                            </div>
                            <div class="right pw_50">
                                <ul class="list big push_bottom">
                                    <li><label>Permission Template</label>
                                        <select class="half big select_list" name="permission_template">
                                            <option value="template1">template1</option>
                                            <option value="template1">template2</option>
                                        </select>
                                        <input type="button" value="Remove" onclick="removeElement(this)" />
                                    </li>
                                </ul>
                            </div>
                            <div class="clearfix"></div>
                        </div>

                        <section class="separator clear" id="permission_listing">
                            <div class="content well">
                                <div class="left pw_50">
                                    <h2>DB User</h2>
                                    <ul class="list big push_bottom">
                                        <li>
                                            <label>User Name</label>

                                            <select id="dbUsersDD" class="select_list half big" name="permission_template">
                                            </select>
                                        </li>
                                    </ul>
                                </div>
                                <div class="right pw_50">
                                    <h2>Template</h2>
                                    <ul class="list big push_bottom">
                                        <li><label>Permission Template</label>
                                            <select id="templateDD" class="select_list half big" name="permission_template" placeholder="Select Template...">
                                                <option value="">Select your option</option>

                                            </select>
                                        </li>
                                    </ul>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </section>
                    <div class="content clear well">
                        <div class="form-container">

                            <form class="hold right_label" method="post" action="#">
                                <fieldset>

                                    <div class="controlset">
                                        <div class="input_row">
                                            <label><input type="checkbox" name="permission" id="selectPriv" checked="checked"> SELECT</label><br>
                                            <label><input type="checkbox" name="permission" id="insertPriv" checked="checked"> INSERT</label><br>
                                            <label><input type="checkbox" name="permission" id="updatePriv" checked="checked"> UPDATE</label><br>
                                            <label><input type="checkbox" name="permission" id="deletePriv" checked="checked"> DELETE</label><br>
                                            <label><input type="checkbox" name="permission" id="createPriv" checked="checked"> CREATE</label><br>
                                            <label><input type="checkbox" name="permission" id="dropPriv" checked="checked"> DROP</label><br>
                                            <label><input type="checkbox" name="permission" id="grantPriv" checked="checked"> GRANT</label><br>
                                            <label><input type="checkbox" name="permission" id="referencesPriv" checked="checked"> REFERENCES</label><br>
                                            <label><input type="checkbox" name="permission" id="indexPriv" checked="checked"> INDEX</label><br>
                                            <label><input type="checkbox" name="permission" id="alterPriv" checked="checked"> ALTER</label><br>
                                            <label><input type="checkbox" name="permission" id="createTmpTablePriv" checked="checked"> CREATE_TEMP_TABLE</label><br>
                                            <label><input type="checkbox" name="permission" id="lockTablesPriv" checked="checked"> LOCK_TABLES</label><br>
                                            <label><input type="checkbox" name="permission" id="createViewPriv" checked="checked"> CREATE_VIEW</label><br>
                                            <label><input type="checkbox" name="permission" id="showViewPriv" checked="checked"> SHOW_VIEW</label><br>
                                            <label><input type="checkbox" name="permission" id="createRoutinePriv" checked="checked"> CREATE_ROUTINE</label><br>
                                            <label><input type="checkbox" name="permission" id="alterRoutinePriv" checked="checked"> ALTER_ROUTINE</label><br>
                                            <label><input type="checkbox" name="permission" id="executePriv" checked="checked"> EXECUTE</label><br>
                                            <label><input type="checkbox" name="permission" id="eventPriv" checked="checked"> EVENT</label><br>
                                            <label><input type="checkbox" name="permission" id="triggerPriv" checked="checked"> TRIGGER</label><br>
                                        </div>
                                    </div>
                                </fieldset>
                                <input type="hidden" value="app_105" id="applicationKey">

                                <div class="buttonrow">
                                    <input type="button" class="btn main" id="btn_save" value="Save Changes" name="Submit">
                                    <a id="btn_cancel" href="#">Cancel</a>
                                    <span style="margin-left: 10px; display:none;" class="icon-spinner icon-spin icon-large" id="saveSpin"></span>
                                </div>


                            </form>

                        </div>
                    </div>
                        <section class="separator clear" >
                            <div class="content well">
                                <!--div class="left pw_50">
                                    <input type="button" value="Add New" id="addNew_permission" class="btn main" />
                                </div-->
                                <div class="right pw_50">

                                </div>
                                <div class="clearfix"></div>
                            </div>

                        </section>


                        <div class="clearfix"></div>
                 </article>
            </div><!-- /container -->
<%
}); %>



