<%
var appFactoryConfigReaderModule = require("appFactoryConfigReaderModule");
var appFactoryConfigReader = new appFactoryConfigReaderModule.AppFactoryConfigurationReader();

function getPropertyTemp(expression) {
    switch (expression) {
        case "sso.name":
            return appFactoryConfigReader.getSsoRelyingPartyName();
        case "sso.identityProviderURL":
            return appFactoryConfigReader.getSsoIdentityProviderEpr();
        case "sso.keyStorePassword":
          return appFactoryConfigReader.getSsoKeyStorePassword();
        case "sso.identityAlias":
           return appFactoryConfigReader.getSsoIdentityAlias();
        case "sso.keyStoreName":
          return appFactoryConfigReader.getSsoKeyStoreName();
        case "webService.addUserToProject":
           return appFactoryConfigReader.getWebServiceEPRAddUserToProject();
        case "webService.createProject":
           return appFactoryConfigReader.getWebServiceEPRCreateProject();
        case "webService.createRepo":
          return appFactoryConfigReader.getWebServiceEPRCreateRepo();
        case "webService.getRolesOfUserForProject":
           return appFactoryConfigReader.getWebServiceEPRGetRolesOfUserForProject();
        case "webService.getUsersOfProject":
           return appFactoryConfigReader.getWebServiceEPRGetUsersOfProject();
        case "bpel.createUser":
          return appFactoryConfigReader.getWebServiceEPRCreateUser();
        case "webService.emailVarificationService":
           return appFactoryConfigReader.getWebServiceEPREmailVerificationService();
        case "bpel.activateUser":
           return appFactoryConfigReader.getWebServiceEPRActivateUser();
        case "adminUserName":
           return appFactoryConfigReader.getAdminUserName();
        case "adminPassword":
           return appFactoryConfigReader.getAdminPassword();
        case "webService.getAllApps":
           return appFactoryConfigReader.getWebServiceEPRGetAllApps();
        case "webService.getAuthCookie":
           return appFactoryConfigReader.getWebServiceEPRGetAuthCookie();
        default:
            return;
    }
}
 function getProperty(expression){
    return ""+getPropertyTemp(expression);
 }

%>