<!-- SampleEventHandlerProcess BPEL Process [Generated by the Eclipse BPEL Designer] -->
<bpel:process name="SampleEventHandlerProcess"
         targetNamespace="http://wso2.org/bps/samples/event-handler"
         suppressJoinFailure="yes"
         xmlns:tns="http://wso2.org/bps/samples/event-handler"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://ode/bpel/unit-testAssign1.wsdl"
         >

    <!-- Import the client WSDL -->
    <bpel:import location="SampleEventHandlerProcessArtifacts.wsdl" namespace="http://wso2.org/bps/samples/event-handler" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />	
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:SampleEventHandlerProcess"
                     myRole="SampleEventHandlerProcessProvider"
                     />
        <!--<bpel:partnerLink name="notificationHandlerPL" partnerLinkType="tns:SampleEventHandlerProcess" myRole="SampleEventHandlerProcessProvider"></bpel:partnerLink>-->
        
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:SampleEventHandlerProcessResponseMessage"/>
        <bpel:variable name="counter" type="xsd:int"></bpel:variable>
        
        
        <bpel:variable name="input" messageType="tns:SampleEventHandlerProcessRequestMessage"></bpel:variable>
        <bpel:variable name="notifierInput" messageType="tns:eventGeneratorRequest"></bpel:variable>
        <bpel:variable name="EventHandlerResponse" messageType="tns:eventGeneratorResponse"></bpel:variable>
        
        <bpel:variable name="waitReceiveVar" messageType="tns:SampleEventHandlerProcessRequestMessage"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:correlationSets>
        <bpel:correlationSet name="IDCorrelationSet" properties="tns:ID"></bpel:correlationSet>
    </bpel:correlationSets>
    <bpel:sequence name="main">
        
        
        <bpel:scope name="Scope">
            <bpel:eventHandlers><bpel:onEvent partnerLink="client" operation="eventGenerator" portType="tns:SampleEventHandlerProcess" messageType="tns:eventGeneratorRequest" variable="notifierInput">
		<bpel:correlations>
                        <bpel:correlation set="IDCorrelationSet" initiate="join"></bpel:correlation>
                    </bpel:correlations><bpel:scope>
                        <bpel:sequence>
                            
                            
                            
                            
                            <bpel:assign validate="no" name="AssignInEventHandler">
                            <bpel:copy>
                                <bpel:from>
                                    <![CDATA[$counter - 1]]>
                                </bpel:from>
                                <bpel:to variable="counter"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                            <bpel:assign validate="no" name="InitReplyResponse">
                                <bpel:copy>
                                    <bpel:from>
                                        <bpel:literal xml:space="preserve"><tns:eventGeneratorResponse xmlns:tns="http://wso2.org/bps/samples/event-handler" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:id></tns:id>
</tns:eventGeneratorResponse>
</bpel:literal>
                                    </bpel:from>
                                    <bpel:to variable="EventHandlerResponse" part="parameters"></bpel:to>
                                </bpel:copy>
                                
                                <bpel:copy>
                                    <bpel:from variable="counter"></bpel:from>
                                    <bpel:to variable="EventHandlerResponse" part="parameters">
                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                            <![CDATA[tns:id]]>
                                        </bpel:query>
                                    </bpel:to>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:reply name="Reply" partnerLink="client" operation="eventGenerator" portType="tns:SampleEventHandlerProcess" variable="EventHandlerResponse">
                            </bpel:reply>
                        </bpel:sequence>
                    </bpel:scope></bpel:onEvent></bpel:eventHandlers>
            <bpel:sequence>
            	<!-- Receive input from requester. 
             Note: This maps to operation defined in SampleEventHandlerProcess.wsdl 
             -->
                <bpel:receive name="receiveInput" partnerLink="client" portType="tns:SampleEventHandlerProcess" operation="createInstance" variable="input" createInstance="yes" >
                    <bpel:correlations>
                        <bpel:correlation set="IDCorrelationSet" initiate="yes"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
                <bpel:assign validate="no" name="InitVars">

                    <bpel:copy>
                        <bpel:from>
                            <bpel:literal xml:space="preserve"><tns:SampleEventHandlerProcessResponse xmlns:tns="http://wso2.org/bps/samples/event-handler" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:id></tns:id>
  <tns:result></tns:result>
</tns:SampleEventHandlerProcessResponse>
</bpel:literal>
                        </bpel:from>
                        <bpel:to variable="output" part="payload"></bpel:to>
                    
                    </bpel:copy>
                    
                    
                    
                    
                    
                    <bpel:copy><bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[tns:input]]>
                    </bpel:query>
                </bpel:from>
                        <bpel:to variable="counter"></bpel:to>
                    
                    </bpel:copy>
                    
                    
                    
                    
                    
                    
                    
                </bpel:assign>
                <!--<bpel:while name="While">
                    <bpel:condition><![CDATA[$counter = 0]]></bpel:condition>
                <bpel:empty name="Empty"></bpel:empty>
                </bpel:while> -->

                <!--<bpel:wait name="Wait">
                    <bpel:for>
                        <![CDATA['PT15S']]>
                    </bpel:for>
                </bpel:wait>-->
                <bpel:receive name="ReceiveWait" partnerLink="client" operation="completeInstance" portType="tns:SampleEventHandlerProcess" variable="waitReceiveVar">
                    <bpel:correlations>
                        <bpel:correlation set="IDCorrelationSet" initiate="no"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
                <bpel:assign validate="no" name="AssignOutput">
                    <bpel:copy>
                        <bpel:from variable="counter"></bpel:from>
                        <bpel:to part="payload" variable="output">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[tns:result]]>
                            </bpel:query>
                        </bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                        <bpel:from part="payload" variable="input">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[tns:id]]>
                            </bpel:query>
                        </bpel:from>
                        <bpel:to part="payload" variable="output">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:id]]></bpel:query>
                        </bpel:to>
                    </bpel:copy>
                </bpel:assign>
                
                <bpel:reply name="replyOutput" partnerLink="client" portType="tns:SampleEventHandlerProcess" operation="createInstance" variable="output" />
            </bpel:sequence>
        </bpel:scope>
        
        
        
       
        
    </bpel:sequence>
</bpel:process>

