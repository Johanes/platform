<?xml version="1.0"?>
<!-- itemRenderers\component\myComponents\RendererDGImageSelect.mxml -->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
         xmlns:comps="org.wso2.licensemgt.components.*"
         horizontalAlign="left" horizontalScrollPolicy="off" verticalScrollPolicy="off" borderColor="#000000">

    <mx:Script>
        <![CDATA[

        import mx.collections.ArrayCollection;
        import mx.events.FlexEvent;
        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.managers.PopUpManager;
        import mx.containers.TitleWindow;

        import flash.geom.Point;

        import org.wso2.licensemgt.events.ArrayFiledEvent;
        import org.wso2.licensemgt.model.ModelLocator;
        import org.wso2.licensemgt.components.DeleteLicenseConfirm;
        import org.wso2.licensemgt.components.DeleteLibraryConfirm;

        import mx.core.Application;

        private var point1:Point = new Point();
        private var modelLocator:ModelLocator = ModelLocator.getInstance();
        [Bindable]
        public var delteState:Boolean = false;

        [Bindable] var nameText:String = "";

        override public function set data(value:Object):void {
            if (value != null) {
                super.data = value;//value;
                nameText = data.name;
            }
            // Dispatch the dataChange event.
            dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
        }


        private function confirmDelLicense():void {
            var login:DeleteLicenseConfirm = DeleteLicenseConfirm(PopUpManager.createPopUp(this, DeleteLicenseConfirm, true));

            // Calculate position of TitleWindow in Application's coordinates.
            // Position it 25 pixels down and to the right of the Button control.
            //point1.x = 0;
            //point1.y = 0;
            //point1 = deleteButton.localToGlobal(point1);
            //login.x = point1.x + 25;
            //login.y = point1.y + 25;
            login.init();
        }
        private function confirmDelLibrary():void {
            var login:DeleteLibraryConfirm = DeleteLibraryConfirm(PopUpManager.createPopUp(this, DeleteLibraryConfirm, true));

            // Calculate position of TitleWindow in Application's coordinates.
            // Position it 25 pixels down and to the right of the Button control.
            //point1.x = 0;
            //point1.y = 0;
            //point1 = deleteButton.localToGlobal(point1);
            //login.x = point1.x + 25;
            //login.y = point1.y + 25;
            login.init();
        }

        private function deleteItem(e:Event):void {
            e.stopImmediatePropagation();//use to stop bubbling the click event
            if (data.what == "license") {
                modelLocator.selectedToDelete = data.key;
                confirmDelLicense();
                return;

            } else if (data.what == "library") {
                modelLocator.selectedToDelete = data.id;
                modelLocator.selectedName = data.name;
                confirmDelLibrary();
                return;
            }
            Alert.show("Are you sure?", "Delete", 3, null, function (event:CloseEvent):void {
                if (event.detail == Alert.YES) {
                    if (data.what == "component") {
                        modelLocator.selectedToDelete = data.key;
                        Application.application.deleteComponent();

                    }  else if (data.what == "type") {
                        modelLocator.selectedToDelete = data.id;
                        Application.application.deleteType(data.typeType);

                    }
                } else {
                    return;
                }
            }

                    )
                    ;

        }

        private function editItem(e:Event):void {
            e.stopImmediatePropagation();

            modelLocator.selectedComponentState = "edit";
            //modelLocator.viewState = ModelLocator.COMPONENT_NEW;
            if (data.what == "component") {
                Application.application.getComponentDetails(data.key);
            } else if (data.what == "library") {
                Application.application.getLibraryDetails(data.id);
            } else if (data.what == "license") {
                Application.application.getLicenseDetails(data.key);
            } else if (data.what == "type") {
                Application.application.getTypeDetails(data);
            }
        }
        ]]>
    </mx:Script>
    <mx:Text id="returnedName" text=""/>
    <mx:LinkButton styleName="listLinkEdit" fontWeight="normal"
                   color="#2F7ABD" toolTip="Edit" click="editItem(event)"/>
    <mx:LinkButton id="deleteButton" styleName="listLinkDelete" fontWeight="normal"
                   color="#2F7ABD" toolTip="Delete" click="deleteItem(event)"/>
</mx:HBox>
