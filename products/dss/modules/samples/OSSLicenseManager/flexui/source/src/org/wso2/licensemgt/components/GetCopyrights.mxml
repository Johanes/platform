<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" height="0" includeInLayout="false">
    <mx:Metadata>
        [Event(name="arrayFiled",type="org.wso2.licensemgt.events.ArrayFiledEvent")]
    </mx:Metadata>
    <mx:Script><![CDATA[
        import mx.controls.Alert;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.soap.mxml.Operation;
        import mx.collections.XMLListCollection;
        import mx.controls.Alert;
        import mx.rpc.events.ResultEvent;
        import mx.collections.ArrayCollection;
        import mx.events.ListEvent;

        import mx.utils.ObjectUtil;

        import org.wso2.licensemgt.events.ArrayFiledEvent;
        import org.wso2.licensemgt.model.ModelLocator;

        import mx.validators.Validator;
        import mx.events.ValidationResultEvent;
        import mx.core.Application;

        import org.wso2.licensemgt.model.Utils;

        private var modelLocator:ModelLocator = ModelLocator.getInstance();
        public var utils:Utils = new Utils();
        public var myDP:ArrayCollection = new ArrayCollection();
        [Bindable] public var key:String ="";
        private function onResult(oEvent:ResultEvent):void
        {
            var compData:XML = XML(oEvent.result);
            myDP = resultXmlToArray(compData);
            //            PopUpManager.removePopUp(this);

            var e:ArrayFiledEvent = new ArrayFiledEvent("arrayFiled", myDP);
            dispatchEvent(e);

        }

        public function resultXmlToArray(result:XML):ArrayCollection {

            var testNS:Namespace = result.namespace();
            var compDetails:XMLList = result.testNS::Copyright;
            var tmpXMLList:XMLList;

            var id:String = "";
            var year:String = "";
            var statement:String = "";
            var owner:String = "";

            myDP = new ArrayCollection();

            for (var i:int; i < compDetails.length(); i++) {

                tmpXMLList = compDetails[i].testNS::id;
                id = tmpXMLList[0].text();

                tmpXMLList = compDetails[i].testNS::year;
                year = tmpXMLList[0].text();

                tmpXMLList = compDetails[i].testNS::statement;
                statement = tmpXMLList[0].text();

                tmpXMLList = compDetails[i].testNS::owner;
                owner = tmpXMLList[0].text();


                myDP.addItem({id:id,year:year,statement:statement,owner:owner,what:"copyright"});

            }
            return myDP;
        }

        public function getArray(key:String):void {
            this.key = key;
            licenseService.getCopyrights.send();
        }

        /* Shows the web service call fault string */
        private function handleFault(event:FaultEvent):void {
            var faultMessage:String = event.fault.faultString;
            if (faultMessage.search("Raw response") != -1) {
                 licenseService.getCopyrights.send();
            } else {
                Alert.show(event.fault.faultString);
            }
        }


        ]]></mx:Script>
    <mx:WebService id="licenseService"
                   service="OSSLicenseService"
                   port="SOAP11Endpoint"
                   useProxy="true"
                   fault="handleFault(event)"
                   destination="license">
        <mx:operation result="onResult(event)" name="getCopyrights" resultFormat="e4x">
            <mx:request>
                <belongsTo>"library"</belongsTo>
                <itemId>{key}</itemId>
            </mx:request>
        </mx:operation>
    </mx:WebService>
</mx:VBox>