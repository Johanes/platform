<?xml version="1.0" encoding="UTF-8"?>
<data name="OSSLicenseService">
    <description>WSO2 Software License Copyright Manager</description>
    <config id="default">
        <property name="org.wso2.ws.dataservice.driver">org.apache.derby.jdbc.EmbeddedDriver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:derby:./samples/OSSLicenseManager/database/LICENSE_MANAGER_DB</property>
        <property name="org.wso2.ws.dataservice.user">wso2lm</property>
        <property name="org.wso2.ws.dataservice.password">wso2lm</property>
    </config>
    <!-- Read license -->
    <operation name="getAllLicenses">
        <call-query href="allLicensesSQL"/>
    </operation>
    <query id="allLicensesSQL" useConfig="default">
        <sql>SELECT LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT FROM LM_LICENSE</sql>
        <result element="Licenses" rowName="License">
            <element name="Key" column="LICENSE_KEY"/>
            <element name="Name" column="LICENSE_NAME"/>
            <element name="Version" column="LICENSE_VERSION"/>
            <element name="Year" column="LICENSE_YEAR"/>
            <element name="Source" column="LICENSE_SOURCE"/>
            <element name="Url" column="LICENSE_URL"/>
            <element name="Content" column="LICENSE_CONTENT"/>
        </result>
    </query>
    <resource path="licenses" method="GET">
        <call-query href="allLicensesSQL"/>
    </resource>
    <!-- Read components-->
    <operation name="getAllComponents">
        <call-query href="allComponentsSQL"/>
    </operation>
    <query id="allComponentsSQL" useConfig="default">
        <sql>SELECT COMP_ID,COMP_KEY,COMP_NAME,COMP_TYPE,COMP_VERSION,COMP_VENDOR,COMP_URL,COMP_DESCRIPTION,COMP_FILE_NAME FROM LM_COMPONENT</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
            <element name="Key" column="COMP_KEY"/>
            <element name="Name" column="COMP_NAME"/>
            <element name="Type" column="COMP_TYPE"/>
            <element name="Version" column="COMP_VERSION"/>
            <element name="Vendor" column="COMP_VENDOR"/>
            <element name="Url" column="COMP_URL"/>
            <element name="Description" column="COMP_DESCRIPTION"/>
            <element name="Filename" column="COMP_FILE_NAME"/>
        </result>
    </query>
    <resource path="components" method="GET">
        <call-query href="allComponentsSQL"/>
    </resource>
    <!-- Read last component id-->
    <operation name="getLastCompId">
        <call-query href="getLastCompIdSQL"/>
    </operation>
    <query id="getLastCompIdSQL" useConfig="default">
        <sql>SELECT   @@IDENTITY AS COMP_ID</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
        </result>
    </query>
    <resource path="components" method="GET">
        <call-query href="getLastCompIdSQL"/>
    </resource>
    <!-- Read license for search -->
    <operation name="getLicense">
        <call-query href="getLicensesSQL">
            <with-param name="licenseName" query-param="licenseName"/>
        </call-query>
    </operation>
    <resource path="licenses/{licenseName}" method="GET">
        <call-query href="getLicensesSQL">
            <with-param name="licenseName" query-param="licenseName"/>
        </call-query>
    </resource>
    <query id="getLicensesSQL" useConfig="default">
        <sql>select LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT FROM LM_LICENSE where UPPER(LICENSE_NAME) like UPPER(?) </sql>
        <result element="Licenses" rowName="License">
            <element name="Key" column="LICENSE_KEY"/>
            <element name="Name" column="LICENSE_NAME"/>
            <element name="Version" column="LICENSE_VERSION"/>
            <element name="Year" column="LICENSE_YEAR"/>
            <element name="Source" column="LICENSE_SOURCE"/>
            <element name="Url" column="LICENSE_URL"/>
            <element name="Content" column="LICENSE_CONTENT"/>
        </result>
        <param name="licenseName" sqlType="STRING"/>
    </query>
    <!-- Read license for exact match -->
    <operation name="getLicenseByKey">
        <call-query href="getLicensesByKeySQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <resource path="licenses/{licenseKey}" method="GET">
        <call-query href="getLicensesByKeySQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </resource>
    <query id="getLicensesByKeySQL" useConfig="default">
        <sql>select LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT FROM LM_LICENSE where LICENSE_KEY= ? </sql>
        <result element="Licenses" rowName="License">
            <element name="Key" column="LICENSE_KEY"/>
            <element name="Name" column="LICENSE_NAME"/>
            <element name="Version" column="LICENSE_VERSION"/>
            <element name="Year" column="LICENSE_YEAR"/>
            <element name="Source" column="LICENSE_SOURCE"/>
            <element name="Url" column="LICENSE_URL"/>
            <element name="Content" column="LICENSE_CONTENT"/>
        </result>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read component license -->
    <operation name="getComponentLicenses">
        <call-query href="getComponentLicensesSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <resource path="licenses/{componentKey}" method="GET">
        <call-query href="getComponentLicensesSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </resource>
    <query id="getComponentLicensesSQL" useConfig="default">
        <sql>select a.LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT FROM LM_COMPONENT_LICENSE as a, LM_LICENSE as b where a.COMP_KEY = ? AND a.LICENSE_KEY = b.LICENSE_KEY</sql>
        <result element="Licenses" rowName="License">
            <element name="Key" column="LICENSE_KEY"/>
            <element name="Name" column="LICENSE_NAME"/>
            <element name="Version" column="LICENSE_VERSION"/>
            <element name="Year" column="LICENSE_YEAR"/>
            <element name="Source" column="LICENSE_SOURCE"/>
            <element name="Url" column="LICENSE_URL"/>
            <element name="Content" column="LICENSE_CONTENT"/>
        </result>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Read component libraries-->
    <operation name="getComponentLibraries">
        <call-query href="getComponentLibrariesSQL">
            <with-param name="libKey" query-param="libKey"/>
        </call-query>
    </operation>
    <resource path="libraries/{libKey}" method="GET">
        <call-query href="getComponentLibrariesSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </resource>
    <query id="getComponentLibrariesSQL" useConfig="default">
        <sql>select a.LIB_ID,LIB_NAME,LIB_VERSION,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL,LIB_FILE_NAME FROM LM_COMPONENT_LIBRARY as a, LM_LIBRARY as b where a.COMP_KEY = ? AND a.LIB_ID = b.LIB_ID</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Url" column="LIB_URL"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
        </result>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Read Library license -->
    <operation name="getLibraryLicenses">
        <call-query href="getLibraryLicensesSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </operation>
    <resource path="licenses/{libraryId}" method="GET">
        <call-query href="getLibraryLicensesSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </resource>
    <query id="getLibraryLicensesSQL" useConfig="default">
        <sql>select a.LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT FROM LM_LIBRARY_LICENSE as a, LM_LICENSE as b where a.LIB_ID = ? AND a.LICENSE_KEY = b.LICENSE_KEY</sql>
        <result element="Licenses" rowName="License">
            <element name="Key" column="LICENSE_KEY"/>
            <element name="Name" column="LICENSE_NAME"/>
            <element name="Version" column="LICENSE_VERSION"/>
            <element name="Year" column="LICENSE_YEAR"/>
            <element name="Source" column="LICENSE_SOURCE"/>
            <element name="Url" column="LICENSE_URL"/>
            <element name="Content" column="LICENSE_CONTENT"/>
        </result>
        <param name="libraryId" sqlType="STRING"/>
    </query>
    <!-- Read library search -->
    <operation name="getLibraries">
        <call-query href="getLibrariesSQL">
            <with-param name="libraryName" query-param="libraryName"/>
        </call-query>
    </operation>
    <resource path="libraries/{libraryName}" method="GET">
        <call-query href="getLibrariesSQL">
            <with-param name="libraryName" query-param="libraryName"/>
        </call-query>
    </resource>
    <query id="getLibrariesSQL" useConfig="default">
        <sql>select LIB_ID,LIB_NAME,LIB_VERSION,LIB_FILE_NAME,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL from LM_LIBRARY where UPPER(LIB_NAME) like UPPER(?)</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Url" column="LIB_URL"/>
        </result>
        <param name="libraryName" sqlType="STRING"/>
    </query>
    <!-- Read library for name exact match-->
    <operation name="getLibrariesByName">
        <call-query href="getLibrariesByNameSQL">
            <with-param name="libraryName" query-param="libraryName"/>
        </call-query>
    </operation>
    <resource path="libraries/{libraryName}" method="GET">
        <call-query href="getLibrariesByNameSQL">
            <with-param name="libraryName" query-param="libraryName"/>
        </call-query>
    </resource>
    <query id="getLibrariesByNameSQL" useConfig="default">
        <sql>select LIB_ID,LIB_NAME,LIB_VERSION,LIB_FILE_NAME,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL from LM_LIBRARY where LIB_NAME = ?</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Url" column="LIB_URL"/>
        </result>
        <param name="libraryName" sqlType="STRING"/>
    </query>
    <!-- Read library by id-->
    <operation name="getLibraryById">
        <call-query href="getLibraryByIdSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </operation>
    <resource path="libraries/{libraryId}" method="GET">
        <call-query href="getLibraryByIdSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </resource>
    <query id="getLibraryByIdSQL" useConfig="default">
        <sql>select LIB_ID,LIB_NAME,LIB_VERSION,LIB_FILE_NAME,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL from LM_LIBRARY where LIB_ID=?</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Url" column="LIB_URL"/>
        </result>
        <param name="libraryId" sqlType="INTEGER"/>
    </query>
    <!-- Read all libraries -->
    <operation name="getAllLibraries">
        <call-query href="getAllLibrariesSQL"/>
    </operation>
    <query id="getAllLibrariesSQL" useConfig="default">
        <sql>SELECT LIB_ID,LIB_NAME,LIB_VERSION,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_FILE_NAME,LIB_URL from LM_LIBRARY</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
            <element name="Url" column="LIB_URL"/>
        </result>
    </query>
    <resource path="libraries" method="GET">
        <call-query href="getAllLibrariesSQL"/>
    </resource>
    <!-- Read components -->
    <operation name="getComponents">
        <call-query href="getComponentsSQL">
            <with-param name="componentName" query-param="componentName"/>
        </call-query>
    </operation>
    <resource path="components/{componentName}" method="GET">
        <call-query href="getComponentsSQL">
            <with-param name="componentName" query-param="componentName"/>
        </call-query>
    </resource>
    <query id="getComponentsSQL" useConfig="default">
        <sql>select COMP_ID,COMP_KEY,COMP_NAME,COMP_TYPE,COMP_VERSION,COMP_VENDOR,COMP_URL,COMP_DESCRIPTION,COMP_FILE_NAME from LM_COMPONENT where UPPER(COMP_NAME) like UPPER(?)</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
            <element name="Key" column="COMP_KEY"/>
            <element name="Name" column="COMP_NAME"/>
            <element name="Type" column="COMP_TYPE"/>
            <element name="Version" column="COMP_VERSION"/>
            <element name="Vendor" column="COMP_VENDOR"/>
            <element name="Url" column="COMP_URL"/>
            <element name="Description" column="COMP_DESCRIPTION"/>
            <element name="Filename" column="COMP_FILE_NAME"/>
        </result>
        <param name="componentName" sqlType="STRING"/>
    </query>
    <!-- Read component by id -->
    <operation name="getComponentsByKey">
        <call-query href="getComponentsByKeySQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <resource path="components/{componentKey}" method="GET">
        <call-query href="getComponentsByKeySQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </resource>
    <query id="getComponentsByKeySQL" useConfig="default">
        <sql>select COMP_ID,COMP_KEY,COMP_NAME,COMP_TYPE,COMP_VERSION,COMP_VENDOR,COMP_URL,COMP_DESCRIPTION,COMP_FILE_NAME from LM_COMPONENT where COMP_KEY = ?</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
            <element name="Key" column="COMP_KEY"/>
            <element name="Name" column="COMP_NAME"/>
            <element name="Type" column="COMP_TYPE"/>
            <element name="Version" column="COMP_VERSION"/>
            <element name="Vendor" column="COMP_VENDOR"/>
            <element name="Url" column="COMP_URL"/>
            <element name="Description" column="COMP_DESCRIPTION"/>
            <element name="Filename" column="COMP_FILE_NAME"/>
        </result>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Read copyrights -->
    <operation name="getCopyrights">
        <call-query href="getCopyrightsSQL">
            <with-param name="belongsTo" query-param="belongsTo"/>
            <with-param name="itemId" query-param="itemId"/>
        </call-query>
    </operation>
    <resource path="copyrights/{belongsTo}/{itemId}" method="GET">
        <call-query href="getCopyrightsSQL">
            <with-param name="belongsTo" query-param="belongsTo"/>
            <with-param name="itemId" query-param="itemId"/>
        </call-query>
    </resource>
    <query id="getCopyrightsSQL" useConfig="default">
        <sql>select CR_ID,CR_YEAR, CR_STATEMENT, CR_OWNER from LM_COPYRIGHT where UPPER(CR_BELONGS_TO) like UPPER(?) and CR_ITEM_ID=?</sql>
        <result element="Copyrights" rowName="Copyright">
            <element name="id" column="CR_ID"/>
            <element name="year" column="CR_YEAR"/>
            <element name="statement" column="CR_STATEMENT"/>
            <element name="owner" column="CR_OWNER"/>
        </result>
        <param name="belongsTo" sqlType="STRING"/>
        <param name="itemId" sqlType="INTEGER"/>
    </query>
    <!-- Edit Copyright-->
    <operation name="editCopyright">
        <call-query href="editCopyrightSQL"/>
    </operation>
    <query id="editCopyrightSQL" useConfig="default">
        <sql>update LM_COPYRIGHT set CR_YEAR=?,CR_STATEMENT=?,CR_OWNER=? where CR_ID=?</sql>
        <param name="year" sqlType="INTEGER"/>
        <param name="statement" sqlType="STRING"/>
        <param name="owner" sqlType="STRING"/>
        <param name="id" sqlType="STRING"/>
    </query>
    <!-- Add License -->
    <operation name="addLicense">
        <call-query href="addLicenseSQL"/>
    </operation>
    <query id="addLicenseSQL" useConfig="default">
        <sql>insert into LM_LICENSE(LICENSE_KEY,LICENSE_NAME,LICENSE_VERSION,LICENSE_YEAR,LICENSE_SOURCE,LICENSE_URL,LICENSE_CONTENT) values(?,?,?,?,?,?,?)</sql>
        <param name="licenseKey" sqlType="STRING"/>
        <param name="licenseName" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="year" sqlType="INTEGER"/>
        <param name="licenseSource" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="LicenseText" sqlType="STRING"/>
    </query>
    <!-- Edit License -->
    <operation name="editLicense">
        <call-query href="editLicenseSQL"/>
    </operation>
    <query id="editLicenseSQL" useConfig="default">
        <sql>update LM_LICENSE set LICENSE_NAME=?,LICENSE_VERSION=?,LICENSE_YEAR=?,LICENSE_SOURCE=?,LICENSE_URL=?,LICENSE_CONTENT=? where LICENSE_KEY=?</sql>
        <param name="licenseName" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="year" sqlType="INTEGER"/>
        <param name="licenseSource" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="LicenseText" sqlType="STRING"/>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read Types -->
    <operation name="getAllTypes">
        <call-query href="getAllTypesSQL">
            <with-param name="typeType" query-param="typeType"/>
        </call-query>
    </operation>
    <resource path="types/{typeType}" method="GET">
        <call-query href="getAllTypesSQL">
            <with-param name="typeType" query-param="typeType"/>
        </call-query>
    </resource>
    <query id="getAllTypesSQL" useConfig="default">
        <sql>SELECT TYPE_ID,TYPE_NAME,TYPE_TYPE FROM LM_TYPE where TYPE_TYPE=?</sql>
        <result element="Types" rowName="Type">
            <element name="typeId" column="TYPE_ID"/>
            <element name="typeName" column="TYPE_NAME"/>
            <element name="typeType" column="TYPE_TYPE"/>
        </result>
        <param name="typeType" sqlType="STRING"/>
    </query>
    <!-- Add Type -->
    <operation name="addType">
        <call-query href="addTypeSQL"/>
    </operation>
    <query id="addTypeSQL" useConfig="default">
        <sql>insert into LM_TYPE(TYPE_NAME,TYPE_TYPE) values(?,?)</sql>
        <param name="typeName" sqlType="STRING"/>
        <param name="typeType" sqlType="STRING"/>
    </query>
    <!-- Edit Type-->
    <operation name="editType">
        <call-query href="editTypeSQL"/>
    </operation>
    <query id="editTypeSQL" useConfig="default">
        <sql>update LM_TYPE set TYPE_NAME=?,TYPE_TYPE=? where TYPE_ID=?</sql>
        <param name="typeName" sqlType="STRING"/>
        <param name="typeType" sqlType="STRING"/>
        <param name="typeId" sqlType="INTEGER"/>
    </query>
    <!-- Remove Type -->
    <operation name="removeType">
        <call-query href="removeTypeSQL">
            <with-param name="typeId" query-param="typeId"/>
        </call-query>
    </operation>
    <query id="removeTypeSQL" useConfig="default">
        <sql>delete from LM_TYPE where TYPE_ID = ?</sql>
        <param name="typeId" sqlType="INTEGER"/>
    </query>
    <!-- Update Component Types -->
    <operation name="editComponentType">
        <call-query href="editComponentTypeSQL"/>
    </operation>
    <query id="editComponentTypeSQL" useConfig="default">
        <sql>update LM_COMPONENT set COMP_TYPE=? where COMP_TYPE=?</sql>
        <param name="newType" sqlType="STRING"/>
        <param name="oldType" sqlType="STRING"/>
    </query>
    <!-- Update Library Types -->
    <operation name="editLibraryType">
        <call-query href="editLibraryTypeSQL"/>
    </operation>
    <query id="editLibraryTypeSQL" useConfig="default">
        <sql>update LM_LIBRARY set LIB_TYPE=? where LIB_TYPE=? </sql>
        <param name="newType" sqlType="STRING"/>
        <param name="oldType" sqlType="STRING"/>
    </query>
    <!-- Add library -->
    <operation name="addLibrary">
        <call-query href="addLibrarySQL"/>
    </operation>
    <query id="addLibrarySQL" useConfig="default">
        <sql>insert into LM_LIBRARY(LIB_NAME,LIB_VERSION,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL,LIB_FILE_NAME) values(?,?,?,?,?,?,?)</sql>
        <param name="libraryName" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="type" sqlType="STRING"/>
        <param name="vendor" sqlType="STRING"/>
        <param name="description" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="filename" sqlType="STRING"/>
    </query>
    <!-- Edit library -->
    <operation name="editLibrary">
        <call-query href="editLibrarySQL"/>
    </operation>
    <query id="editLibrarySQL" useConfig="default">
        <sql>update LM_LIBRARY set LIB_NAME=?,LIB_VERSION=?,LIB_TYPE=?,LIB_VENDOR=?,LIB_DESCRIPTION=?,LIB_URL=?,LIB_FILE_NAME=? where LIB_ID=? </sql>
        <param name="libraryName" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="type" sqlType="STRING"/>
        <param name="vendor" sqlType="STRING"/>
        <param name="description" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="filename" sqlType="STRING"/>
        <param name="id" sqlType="INTEGER"/>
    </query>
    <!-- Add copyright -->
    <operation name="addCopyright">
        <call-query href="addCopyright">
            <with-param name="year" query-param="year"/>
            <with-param name="statement" query-param="statement"/>
            <with-param name="owner" query-param="owner"/>
            <with-param name="belongsTo" query-param="belongsTo"/>
            <with-param name="itemId" query-param="itemId"/>
        </call-query>
    </operation>
    <query id="addCopyright" useConfig="default">
        <sql>insert into LM_COPYRIGHT(CR_YEAR, CR_STATEMENT, CR_OWNER,CR_BELONGS_TO,CR_ITEM_ID) values(?,?,?,?,?)</sql>
        <param name="year" sqlType="INTEGER"/>
        <param name="statement" sqlType="STRING"/>
        <param name="owner" sqlType="STRING"/>
        <param name="belongsTo" sqlType="STRING"/>
        <param name="itemId" sqlType="INTEGER"/>
    </query>
    <!-- Add component -->
    <operation name="addComponent">
        <call-query href="addComponent">
            <with-param name="componentKey" query-param="componentKey"/>
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="version" query-param="version"/>
            <with-param name="vendor" query-param="vendor"/>
            <with-param name="url" query-param="url"/>
            <with-param name="description" query-param="description"/>
            <with-param name="filename" query-param="filename"/>
        </call-query>
    </operation>
    <query id="addComponent" useConfig="default">
        <sql>insert into LM_COMPONENT(COMP_KEY, COMP_NAME,COMP_TYPE, COMP_VERSION, COMP_VENDOR, COMP_URL, COMP_DESCRIPTION,COMP_FILE_NAME) values(?,?,?,?,?,?,?,?)</sql>
        <param name="componentKey" sqlType="STRING"/>
        <param name="name" sqlType="STRING"/>
        <param name="type" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="vendor" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="description" sqlType="STRING"/>
        <param name="filename" sqlType="STRING"/>
    </query>
    <!-- Edit component -->
    <operation name="editComponent">
        <call-query href="editComponent">
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="version" query-param="version"/>
            <with-param name="vendor" query-param="vendor"/>
            <with-param name="url" query-param="url"/>
            <with-param name="description" query-param="description"/>
            <with-param name="filename" query-param="filename"/>
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <query id="editComponent" useConfig="default">
        <sql>update LM_COMPONENT set COMP_NAME=?,COMP_TYPE=?, COMP_VERSION=?, COMP_VENDOR=?, COMP_URL=?, COMP_DESCRIPTION=?,COMP_FILE_NAME=? where COMP_KEY=?</sql>
        <param name="name" sqlType="STRING"/>
        <param name="type" sqlType="STRING"/>
        <param name="version" sqlType="STRING"/>
        <param name="vendor" sqlType="STRING"/>
        <param name="url" sqlType="STRING"/>
        <param name="description" sqlType="STRING"/>
        <param name="filename" sqlType="STRING"/>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Add component-library mapping -->
    <operation name="addLibraryToComponent">
        <call-query href="addLibraryToComponent">
            <with-param name="componentKey" query-param="componentKey"/>
            <with-param name="libId" query-param="libId"/>
        </call-query>
    </operation>
    <query id="addLibraryToComponent" useConfig="default">
        <sql>insert into LM_COMPONENT_LIBRARY(COMP_KEY, LIB_ID ) values(?,?)</sql>
        <param name="componentKey" sqlType="STRING"/>
        <param name="libId" sqlType="INTEGER"/>
    </query>
    <!-- Add component-license mapping -->
    <operation name="addLicenseToComponent">
        <call-query href="addLicenseToComponent">
            <with-param name="componentKey" query-param="componentKey"/>
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <query id="addLicenseToComponent" useConfig="default">
        <sql>insert into LM_COMPONENT_LICENSE(COMP_KEY, LICENSE_KEY) values(?,?)</sql>
        <param name="componentKey" sqlType="STRING"/>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Remove component-license mapping -->
    <operation name="removeLicenseFromComponent">
        <call-query href="removeLicenseFromComponentSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <query id="removeLicenseFromComponentSQL" useConfig="default">
        <sql>delete from LM_COMPONENT_LICENSE where COMP_KEY = ?</sql>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Remove component-library mapping -->
    <operation name="removeLibraryFromComponent">
        <call-query href="removeLibraryFromComponentSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <query id="removeLibraryFromComponentSQL" useConfig="default">
        <sql>delete from LM_COMPONENT_LIBRARY where COMP_KEY = ?</sql>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Remove license-library mapping -->
    <operation name="removeLicenseFromLibrary">
        <call-query href="removeLicenseFromLibrarySQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </operation>
    <query id="removeLicenseFromLibrarySQL" useConfig="default">
        <sql>delete from LM_LIBRARY_LICENSE where LIB_ID= ?</sql>
        <param name="libraryId" sqlType="INTEGER"/>
    </query>
    <!-- Add license-library mapping -->
    <operation name="addLicenseToLibrary">
        <call-query href="addLicenseToLibrary">
            <with-param name="libraryId" query-param="libraryId"/>
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <query id="addLicenseToLibrary" useConfig="default">
        <sql>insert into LM_LIBRARY_LICENSE(LIB_ID ,LICENSE_KEY) values(?,?)</sql>
        <param name="libraryId" sqlType="INTEGER"/>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Delete Component -->
    <operation name="removeComponent">
        <call-query href="removeComponentSQL">
            <with-param name="componentKey" query-param="componentKey"/>
        </call-query>
    </operation>
    <query id="removeComponentSQL" useConfig="default">
        <sql>DELETE FROM LM_COMPONENT WHERE COMP_KEY=?</sql>
        <param name="componentKey" sqlType="STRING"/>
    </query>
    <!-- Delete Library-->
    <operation name="removeLibrary">
        <call-query href="removeLibrarySQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </operation>
    <query id="removeLibrarySQL" useConfig="default">
        <sql>DELETE FROM LM_LIBRARY WHERE LIB_ID=?</sql>
        <param name="libraryId" sqlType="INTEGER"/>
    </query>
    <!-- Delete Copyright-->
    <operation name="removeCopyright">
        <call-query href="removeCopyrightSQL">
            <with-param name="belongsTo" query-param="belongsTo"/>
            <with-param name="itemId" query-param="itemId"/>
        </call-query>
    </operation>
    <query id="removeCopyrightSQL" useConfig="default">
        <sql>DELETE FROM LM_COPYRIGHT WHERE CR_BELONGS_TO=? and CR_ITEM_ID=?</sql>
        <param name="belongsTo" sqlType="STRING"/>
        <param name="itemId" sqlType="STRING"/>
    </query>
    <!-- Delete License-->
    <operation name="removeLicense">
        <call-query href="removeLicenseSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <query id="removeLicenseSQL" useConfig="default">
        <sql>DELETE FROM LM_LICENSE WHERE LICENSE_KEY=?</sql>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Aditional queries to handle reference problems -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- Read Library license reference by licenseKey -->
    <operation name="getRefLicenseLibs">
        <call-query href="getRefLicenseLibsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <resource path="licenses/{licenseKey}" method="GET">
        <call-query href="getRefLicenseLibsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </resource>
    <query id="getRefLicenseLibsSQL" useConfig="default">
        <sql>select LIB_ID FROM LM_LIBRARY_LICENSE where UPPER(LICENSE_KEY) = UPPER(?) </sql>
        <result element="Refs" rowName="Ref">
            <element name="LibId" column="LIB_ID"/>
        </result>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Delete Library license reference by licenseKey-->
    <operation name="removeRefLicenseLibs">
        <call-query href="removeRefLicenseLibsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <query id="removeRefLicenseLibsSQL" useConfig="default">
        <sql>DELETE FROM LM_LIBRARY_LICENSE WHERE LICENSE_KEY=?</sql>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read Component license reference by componentKey-->
    <operation name="getRefLicenseComps">
        <call-query href="getRefLicenseCompsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <resource path="licenses/{licenseKey}" method="GET">
        <call-query href="getRefLicenseCompsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </resource>
    <query id="getRefLicenseCompsSQL" useConfig="default">
        <sql>select COMP_KEY FROM LM_COMPONENT_LICENSE where UPPER(LICENSE_KEY) = UPPER(?) </sql>
        <result element="Refs" rowName="Ref">
            <element name="componentKey" column="COMP_KEY"/>
        </result>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Delete Library license reference by licenseKey-->
    <operation name="removeRefLicenseComps">
        <call-query href="removeRefLicenseCompsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <query id="removeRefLicenseCompsSQL" useConfig="default">
        <sql>DELETE FROM LM_COMPONENT_LICENSE WHERE LICENSE_KEY=?</sql>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read license libraries-->
    <operation name="getLicenseLibraries">
        <call-query href="getLicenseLibrariesSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <resource path="libraries/{licenseKey}" method="GET">
        <call-query href="getLicenseLibrariesSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </resource>
    <query id="getLicenseLibrariesSQL" useConfig="default">
        <sql>select a.LIB_ID,LIB_NAME,LIB_VERSION,LIB_TYPE,LIB_VENDOR,LIB_DESCRIPTION,LIB_URL,LIB_FILE_NAME FROM LM_LIBRARY_LICENSE as a, LM_LIBRARY as b where a.LICENSE_KEY = ? AND a.LIB_ID = b.LIB_ID</sql>
        <result element="Libraries" rowName="Library">
            <element name="Id" column="LIB_ID"/>
            <element name="Name" column="LIB_NAME"/>
            <element name="Version" column="LIB_VERSION"/>
            <element name="Type" column="LIB_TYPE"/>
            <element name="Vendor" column="LIB_VENDOR"/>
            <element name="Description" column="LIB_DESCRIPTION"/>
            <element name="Url" column="LIB_URL"/>
            <element name="Filename" column="LIB_FILE_NAME"/>
        </result>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read license components-->
    <operation name="getLicenseComponents">
        <call-query href="getLicenseComponentsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </operation>
    <resource path="libraries/{licenseKey}" method="GET">
        <call-query href="getLicenseComponentsSQL">
            <with-param name="licenseKey" query-param="licenseKey"/>
        </call-query>
    </resource>
    <query id="getLicenseComponentsSQL" useConfig="default">
        <sql>select COMP_ID,a.COMP_KEY,COMP_NAME,COMP_TYPE,COMP_VERSION,COMP_VENDOR,COMP_URL,COMP_DESCRIPTION,COMP_FILE_NAME FROM LM_COMPONENT_LICENSE as a, LM_COMPONENT as b where a.LICENSE_KEY = ? AND a.COMP_KEY = b.COMP_KEY</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
            <element name="Key" column="COMP_KEY"/>
            <element name="Name" column="COMP_NAME"/>
            <element name="Type" column="COMP_TYPE"/>
            <element name="Version" column="COMP_VERSION"/>
            <element name="Vendor" column="COMP_VENDOR"/>
            <element name="Url" column="COMP_URL"/>
            <element name="Description" column="COMP_DESCRIPTION"/>
            <element name="Filename" column="COMP_FILE_NAME"/>
        </result>
        <param name="licenseKey" sqlType="STRING"/>
    </query>
    <!-- Read library components-->
    <operation name="getLibraryComponents">
        <call-query href="getLibraryComponentsSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </operation>
    <resource path="libraries/{libraryId}" method="GET">
        <call-query href="getLibraryComponentsSQL">
            <with-param name="libraryId" query-param="libraryId"/>
        </call-query>
    </resource>
    <query id="getLibraryComponentsSQL" useConfig="default">
        <sql>select COMP_ID,a.COMP_KEY,COMP_NAME,COMP_TYPE,COMP_VERSION,COMP_VENDOR,COMP_URL,COMP_DESCRIPTION,COMP_FILE_NAME FROM LM_COMPONENT_LIBRARY as a, LM_COMPONENT as b where a.LIB_ID = ? AND a.COMP_KEY = b.COMP_KEY</sql>
        <result element="Components" rowName="Component">
            <element name="Id" column="COMP_ID"/>
            <element name="Key" column="COMP_KEY"/>
            <element name="Name" column="COMP_NAME"/>
            <element name="Type" column="COMP_TYPE"/>
            <element name="Version" column="COMP_VERSION"/>
            <element name="Vendor" column="COMP_VENDOR"/>
            <element name="Url" column="COMP_URL"/>
            <element name="Description" column="COMP_DESCRIPTION"/>
            <element name="Filename" column="COMP_FILE_NAME"/>
        </result>
        <param name="libraryId" sqlType="INTEGER"/>
    </query>
    <!-- Remove Type -->
    <operation name="removeLibraryComponents">
        <call-query href="removeLibraryComponentsSQL">
            <with-param name="libId" query-param="libId"/>
        </call-query>
    </operation>
    <query id="removeLibraryComponentsSQL" useConfig="default">
        <sql>delete from LM_COMPONENT_LIBRARY where LIB_ID = ?</sql>
        <param name="libId" sqlType="INTEGER"/>
    </query>
</data>
