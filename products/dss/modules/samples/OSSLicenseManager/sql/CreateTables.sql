CREATE TABLE LM_LIBRARY(
    LIB_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    LIB_NAME VARCHAR(300) NOT NULL UNIQUE,
    LIB_VERSION VARCHAR(50),
    LIB_FILE_NAME VARCHAR(500),
    LIB_TYPE VARCHAR(20),
    LIB_VENDOR VARCHAR(200),
    LIB_DESCRIPTION VARCHAR(400),
    LIB_URL VARCHAR(300),
    PRIMARY KEY (LIB_ID)
);

CREATE TABLE LM_COPYRIGHT(
    CR_ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CR_YEAR INTEGER,
    CR_STATEMENT LONG VARCHAR,
    CR_OWNER VARCHAR(200),
    CR_BELONGS_TO VARCHAR(50),
    CR_ITEM_ID INTEGER
);

CREATE TABLE LM_LICENSE(
    LICENSE_ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    LICENSE_KEY VARCHAR(50) NOT NULL UNIQUE,
    LICENSE_NAME VARCHAR(200) NOT NULL UNIQUE,
    LICENSE_VERSION VARCHAR(20),
    LICENSE_YEAR INTEGER,
    LICENSE_SOURCE VARCHAR(20),
    LICENSE_URL VARCHAR(300),
    LICENSE_CONTENT LONG VARCHAR
);

CREATE TABLE LM_COMPONENT(
    COMP_ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    COMP_KEY VARCHAR(500) NOT NULL UNIQUE,
    COMP_NAME VARCHAR(500),
    COMP_TYPE VARCHAR(20),
    COMP_VERSION VARCHAR(50),
    COMP_VENDOR VARCHAR(200),
    COMP_URL VARCHAR(300),
    COMP_DESCRIPTION VARCHAR(400),
    COMP_FILE_NAME VARCHAR(50)
);

CREATE TABLE LM_COMPONENT_LIBRARY(
       COMP_KEY VARCHAR(500),
       LIB_ID INTEGER,  
       FOREIGN KEY (COMP_KEY) REFERENCES LM_COMPONENT (COMP_KEY),
       FOREIGN KEY (LIB_ID) REFERENCES LM_LIBRARY (LIB_ID)
);

CREATE TABLE LM_COMPONENT_LICENSE(
       COMP_KEY VARCHAR(500),
       LICENSE_KEY VARCHAR(50),
       FOREIGN KEY (COMP_KEY) REFERENCES LM_COMPONENT (COMP_KEY),
       FOREIGN KEY (LICENSE_KEY) REFERENCES LM_LICENSE (LICENSE_KEY)
);

CREATE TABLE LM_LIBRARY_LICENSE(
	LIB_ID INTEGER,  
      LICENSE_KEY VARCHAR(50),
	FOREIGN KEY (LIB_ID) REFERENCES LM_LIBRARY (LIB_ID),
	FOREIGN KEY (LICENSE_KEY) REFERENCES LM_LICENSE (LICENSE_KEY)
);

CREATE TABLE LM_TYPE(
    TYPE_ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    TYPE_TYPE VARCHAR(50),
    TYPE_NAME VARCHAR(20)
);
--LICENSE_LIB_ID INTEGER CONSTRAINT LICENSE_LIBRARY_FK REFERENCES LM_LIBRARY ON DELETE CASCADE ON UPDATE RESTRICT,