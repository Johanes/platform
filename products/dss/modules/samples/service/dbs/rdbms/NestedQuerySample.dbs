<data name="NestedQuerySample" serviceGroup="RDBMS" baseURI="http://ws.wso2.org/dataservice/samples/nested_query_sample">
   <config>                        
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>                        
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./samples/database/DATA_SERV_SAMP</property>                        
        <property name="org.wso2.ws.dataservice.user">wso2ds</property>                        
        <property name="org.wso2.ws.dataservice.password">wso2ds</property>        
        <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
        <property name="org.wso2.ws.dataservice.validation_query"></property> 
    </config>

   <operation name="customerOrders">
      <call-query href="customerOrdersSQL" />
   </operation>

   <query id="customerOrdersSQL">
      <sql>select o.ORDERNUMBER,o.ORDERDATE, o.STATUS,o.CUSTOMERNUMBER from ORDERS o</sql>

      <result element="Orders" rowName="Order">
         <element name="Order-number" column="ORDERNUMBER" />
         <element name="Last-date" column="ORDERDATE" />
         <element name="Status" column="STATUS" />
         <call-query href="customerNameSQL">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </result>
   </query>

   <operation name="customerName">
      <call-query href="customerNameSQL">
         <with-param name="customerNumber" query-param="customerNumber" />
      </call-query>
   </operation>

   <query id="customerNameSQL">
      <sql>select c.CUSTOMERNAME from CUSTOMERS c where c.CUSTOMERNUMBER = :customerNumber</sql>
      <result element="Customer">
         <element name="Name" column="CUSTOMERNAME" />
      </result>
      <param name="customerNumber" sqlType="INTEGER" />
   </query>

   <operation name="employeesInOffice">
      <call-query href="employeesInOfficeSQL">
         <with-param name="officeCode" query-param="officeCode" />
      </call-query>
   </operation>

   <query id="employeesInOfficeSQL">
      <sql>select employeeNumber, firstName, lastName, email, jobTitle from Employees where officeCode = :officeCode</sql>
      <result element="Employees" rowName="Employee">
         <element name="employeeNumber" column="employeeNumber" />
         <element name="firstName" column="firstName" />
         <element name="lastName" column="lastName" />
         <element name="email" column="email" />
         <element name="jobTitle" column="jobTitle" />
      </result>
      <param name="officeCode" sqlType="STRING" />
   </query>

   <operation name="listOffices">
      <call-query href="listOfficesSQL" />
   </operation>

   <query id="listOfficesSQL">
      <sql>select officeCode, addressLine1, addressLine2, city, state, country, phone from Offices</sql>
      <result element="Offices" rowName="Office">
         <element name="officeCode" column="officeCode" />
         <element name="addressLine1" column="addressLine1" />
         <element name="addressLine2" column="addressLine2" />
         <element name="city" column="city" />
         <element name="state" column="state" />
         <element name="country" column="country" />
         <element name="phone" column="phone" />
         <call-query href="employeesInOfficeSQL">
            <with-param name="officeCode" query-param="officeCode" />
         </call-query>
      </result>
   </query>

</data>

