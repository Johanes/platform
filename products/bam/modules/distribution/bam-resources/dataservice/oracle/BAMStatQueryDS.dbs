<?xml version="1.0" encoding="UTF-8"?>
<data name="BAMStatQueryDS" emptyParamFix="true">
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:repository/database/WSO2BAM_DB</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">com.mysql.jdbc.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:mysql://localhost:3306/wso2bam_db</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:sqlserver://10.100.1.200:1433;databaseName=wso2bam_db</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">oracle.jdbc.driver.OracleDriver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:oracle:thin:@10.100.1.10:1521/orcl</property>
        <property name="org.wso2.ws.dataservice.user">wso2carbon</property>
        <property name="org.wso2.ws.dataservice.password">wso2carbon</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config>
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:tcp://localhost/repository/database/WSO2BAM_DB</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->

    <!-- SERVICE -->

    <!-- SERVICE getLastMinuteRequestCount -->

    <query id="getLastMinuteRequestCountQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_REQ_COUNT AS REQ_COUNT FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="REQ_COUNT"/>
        </result>
    </query>
	<operation name="getLastMinuteRequestCount">
        <call-query href="getLastMinuteRequestCountQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


<!-- SERVICE getAvgResponseTime -->

    <query id="getAvgResponseTimeQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="AVG_RES_TIME"/>
        </result>
    </query>
    <operation name="getAvgResponseTime">
        <call-query href="getAvgResponseTimeQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


    <!-- SERVICE getMaxResponseTime -->

    <query id="getMaxResponseTimeQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MAX_RES_TIME AS MAX_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MAX_RES_TIME"/>
        </result>
    </query>
    <operation name="getMaxResponseTime">
        <call-query href="getMaxResponseTimeQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

		<!-- SERVICE getMinResponseTime -->

    <query id="getMinResponseTimeQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MIN_RES_TIME AS MIN_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MIN_RES_TIME"/>
        </result>
    </query>
    <operation name="getMinResponseTime">
        <call-query href="getMinResponseTimeQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


    <!-- SERVER -->

    <!-- SERVER getLastMinuteRequestCountSystem -->

    <query id="getLastMinuteRequestCountSystemQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_REQ_COUNT AS REQ_COUNT FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="REQ_COUNT"/>
        </result>
    </query>
    <operation name="getLastMinuteRequestCountSystem">
        <call-query href="getLastMinuteRequestCountSystemQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


    <!-- SERVER getAvgResponseTimeSystem -->

    <query id="getAvgResponseTimeSystemQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="AVG_RES_TIME"/>
        </result>
    </query>
    <operation name="getAvgResponseTimeSystem">
        <call-query href="getAvgResponseTimeSystemQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


    <!-- SERVER getMaxResponseTimeSystem	-->

    <query id="getMaxResponseTimeSystemQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MAX_RES_TIME AS MAX_RES_TIME FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MAX_RES_TIME"/>
        </result>
    </query>
    <operation name="getMaxResponseTimeSystem">
        <call-query href="getMaxResponseTimeSystemQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>



	<!-- SERVER getMinResponseTimeSystem -->

    <query id="getMinResponseTimeSystemQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MIN_RES_TIME AS MIN_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MIN_RES_TIME"/>
        </result>
    </query>
    <operation name="getMinResponseTimeSystem">
        <call-query href="getMinResponseTimeSystemQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- SERVER Mediation -->

    <!-- SERVER getEndpoints -->

    <query id="getEndpointsQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS ENDPOINT FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Endpoint%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="endpoints" rowName="endpoint" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="endpoint" column="ENDPOINT"/>
        </result>
    </query>
    <operation name="getEndpoints">
        <call-query href="getEndpointsQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- SERVER getSequences -->

    <query id="getSequencesQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS SEQUENCE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Sequence%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="sequences" rowName="sequence" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="sequence" column="SEQUENCE"/>
        </result>
    </query>
    <operation name="getSequences">
        <call-query href="getSequencesQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- SERVER getProxyServices -->

    <query id="getProxyServicesQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS PROXY_SERVICE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Proxy%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="proxyServices" rowName="proxyService" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="proxyService" column="PROXY_SERVICE"/>
        </result>
    </query>
    <operation name="getProxyServices">
        <call-query href="getProxyServicesQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- SERVER getInCumulativeCountsForEndpoint -->

    <query id="getInCumulativeCountsForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS ENDPOINT_CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="ENDPOINT_CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getInCumulativeCountsForEndpoint">
        <call-query href="getInCumulativeCountsForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>

    <!-- Server Level -->

    <!-- getLatestAverageResponseTimeForServer -->

    <query id="getLatestAverageResponseTimeForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="AVG_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestAverageResponseTimeForServer">
        <call-query href="getLatestAverageResponseTimeForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- getLatestMaximumResponseTimeForServer -->

    <query id="getLatestMaximumResponseTimeForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MAX_RES_TIME AS MAX_RES_TIME FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MAX_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMaximumResponseTimeForServer">
        <call-query href="getLatestMaximumResponseTimeForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- getLatestMinimumResponseTimeForServer -->

    <query id="getLatestMinimumResponseTimeForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MIN_RES_TIME AS MIN_RES_TIME FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MIN_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMinimumResponseTimeForServer">
        <call-query href="getLatestMinimumResponseTimeForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- getLatestRequestCountForServer -->

    <query id="getLatestRequestCountForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_REQ_COUNT AS REQ_COUNT FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="REQ_COUNT"/>
        </result>
    </query>
    <operation name="getLatestRequestCountForServer">
        <call-query href="getLatestRequestCountForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- getLatestResponseCountForServer -->

    <query id="getLatestResponseCountForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_RES_COUNT AS RES_COUNT FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="RES_COUNT"/>
        </result>
    </query>
    <operation name="getLatestResponseCountForServer">
        <call-query href="getLatestResponseCountForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- getLatestFaultCountForServer -->

    <query id="getLatestFaultCountForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestFaultCountForServer">
        <call-query href="getLatestFaultCountForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!--slow query -->
    <query id="getLatestDataForServerQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME, BAM_MAX_RES_TIME AS MAX_RES_TIME, BAM_MIN_RES_TIME AS MIN_RES_TIME, BAM_CUM_REQ_COUNT AS REQ_COUNT, BAM_CUM_RES_COUNT AS RES_COUNT, BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_SERVER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVER_DATA WHERE BAM_SERVER_ID=?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="serverData" rowName="data" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="avgTime" column="AVG_RES_TIME" />
            <element name="maxTime" column="MAX_RES_TIME" />
            <element name="minTime" column="MIN_RES_TIME" />
            <element name="reqCount" column="REQ_COUNT" />
            <element name="resCount" column="RES_COUNT" />
            <element name="faultCount" column="FAULT_COUNT" />
        </result>
    </query>
    <operation name="getLatestDataForServer">
        <call-query href="getLatestDataForServerQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>


    <!-- Service Level -->

    <!-- getLatestAverageResponseTimeForService -->

    <query id="getLatestAverageResponseTimeForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="AVG_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestAverageResponseTimeForService">
        <call-query href="getLatestAverageResponseTimeForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- getLatestMaximumResponseTimeForService -->

    <query id="getLatestMaximumResponseTimeForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MAX_RES_TIME AS MAX_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MAX_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMaximumResponseTimeForService">
        <call-query href="getLatestMaximumResponseTimeForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- getLatestMinimumResponseTimeForService -->

    <query id="getLatestMinimumResponseTimeForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MIN_RES_TIME AS MIN_RES_TIME FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MIN_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMinimumResponseTimeForService">
        <call-query href="getLatestMinimumResponseTimeForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>


    <!-- getLatestRequestCountForService -->

    <query id="getLatestRequestCountForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_REQ_COUNT AS REQ_COUNT FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="REQ_COUNT"/>
        </result>
    </query>
    <operation name="getLatestRequestCountForService">
        <call-query href="getLatestRequestCountForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- getLatestResponseCountForService -->

    <query id="getLatestResponseCountForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_RES_COUNT AS RES_COUNT FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="RES_COUNT"/>
        </result>
    </query>
    <operation name="getLatestResponseCountForService">
        <call-query href="getLatestResponseCountForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- getLatestFaultCountForService -->

    <query id="getLatestFaultCountForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestFaultCountForService">
        <call-query href="getLatestFaultCountForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <query id="getLatestDataForServiceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME, BAM_MAX_RES_TIME AS MAX_RES_TIME, BAM_MIN_RES_TIME AS MIN_RES_TIME, BAM_CUM_REQ_COUNT AS REQ_COUNT, BAM_CUM_RES_COUNT AS RES_COUNT, BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_SERVICE_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_SERVICE_DATA WHERE BAM_SERVICE_ID=?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="serviceData" rowName="data" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="avgTime" column="AVG_RES_TIME" />
            <element name="maxTime" column="MAX_RES_TIME" />
            <element name="minTime" column="MIN_RES_TIME" />
            <element name="reqCount" column="REQ_COUNT" />
            <element name="resCount" column="RES_COUNT" />
            <element name="faultCount" column="FAULT_COUNT" />
        </result>
    </query>
    <operation name="getLatestDataForService">
        <call-query href="getLatestDataForServiceQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- Operation Level -->

    <!-- getOperations -->
    <query id="getOperationsQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID AS ID, BAM_OP_NAME AS NAME, BAM_DESCRIPTION AS DESCRIPTION FROM BAM_OPERATION WHERE BAM_SERVICE_ID = ?</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="id" column="ID"/>
            <element name="name" column="NAME"/>
            <element name="description" column="DESCRIPTION"/>
        </result>
    </query>
    <operation name="getOperations">
        <call-query href="getOperationsQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- getLatestAverageResponseTimeForOperation -->

    <query id="getLatestAverageResponseTimeForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="AVG_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestAverageResponseTimeForOperation">
        <call-query href="getLatestAverageResponseTimeForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <!-- getLatestMaximumResponseTimeForOperation -->

    <query id="getLatestMaximumResponseTimeForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MAX_RES_TIME AS MAX_RES_TIME FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MAX_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMaximumResponseTimeForOperation">
        <call-query href="getLatestMaximumResponseTimeForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <!-- getLatestMinimumResponseTimeForOperation -->

    <query id="getLatestMinimumResponseTimeForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MIN_RES_TIME AS MIN_RES_TIME FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="times" rowName="time" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="time" column="MIN_RES_TIME"/>
        </result>
    </query>
    <operation name="getLatestMinimumResponseTimeForOperation">
        <call-query href="getLatestMinimumResponseTimeForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>


    <!-- getLatestRequestCountForOperation -->

    <query id="getLatestRequestCountForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_REQ_COUNT AS REQ_COUNT FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="REQ_COUNT"/>
        </result>
    </query>
    <operation name="getLatestRequestCountForOperation">
        <call-query href="getLatestRequestCountForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <!-- getLatestResponseCountForOperation -->

    <query id="getLatestResponseCountForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_RES_COUNT AS RES_COUNT FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="RES_COUNT"/>
        </result>
    </query>
    <operation name="getLatestResponseCountForOperation">
        <call-query href="getLatestResponseCountForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <!-- getLatestFaultCountForOperation -->

    <query id="getLatestFaultCountForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="counts" rowName="count" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="count" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestFaultCountForOperation">
        <call-query href="getLatestFaultCountForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <query id="getLatestDataForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_AVG_RES_TIME AS AVG_RES_TIME, BAM_MAX_RES_TIME AS MAX_RES_TIME, BAM_MIN_RES_TIME AS MIN_RES_TIME, BAM_CUM_REQ_COUNT AS REQ_COUNT, BAM_CUM_RES_COUNT AS RES_COUNT, BAM_CUM_FAULT_COUNT AS FAULT_COUNT FROM BAM_OPERATION_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_OPERATION_DATA WHERE BAM_OPERATION_ID=?)</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="operationData" rowName="data" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="avgTime" column="AVG_RES_TIME" />
            <element name="maxTime" column="MAX_RES_TIME" />
            <element name="minTime" column="MIN_RES_TIME" />
            <element name="reqCount" column="REQ_COUNT" />
            <element name="resCount" column="RES_COUNT" />
            <element name="faultCount" column="FAULT_COUNT" />
        </result>
    </query>
    <operation name="getLatestDataForOperation">
        <call-query href="getLatestDataForOperationQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>

    <!-- Endpoint -->

    <!-- getLatestInAverageProcessingTimeForEndpoint -->
    <query id="getLatestInAverageProcessingTimeForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS AVG_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0')</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="averageTimes" rowName="averageTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="averageTime" column="AVG_TIME"/>
        </result>
    </query>
    <operation name="getLatestInAverageProcessingTimeForEndpoint">
        <call-query href="getLatestInAverageProcessingTimeForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>

    <!-- getLatestInMaximumProcessingTimeForEndpoint -->

    <query id="getLatestInMaximumProcessingTimeForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MAX_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0')</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="maximumTimes" rowName="maximumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="maximumTime" column="MAX_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMaximumProcessingTimeForEndpoint">
        <call-query href="getLatestInMaximumProcessingTimeForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>

    <!-- getLatestInMinimumProcessingTimeForEndpoint -->

    <query id="getLatestInMinimumProcessingTimeForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MIN_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="minimumTimes" rowName="minimumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="minimumTime" column="MIN_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMinimumProcessingTimeForEndpoint">
        <call-query href="getLatestInMinimumProcessingTimeForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>


    <!-- getLatestInCumulativeCountForEndpoint -->

    <query id="getLatestInCumulativeCountForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ?) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInCumulativeCountForEndpoint">
        <call-query href="getLatestInCumulativeCountForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>

    <!-- getLatestInFaultCountForEndpoint -->
    <query id="getLatestInFaultCountForEndpointQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS FAULT_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ?) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="endpointName" sqlType="STRING" type=""/>
        <result element="faultCounts" rowName="faultCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="faultCount" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInFaultCountForEndpoint">
        <call-query href="getLatestInFaultCountForEndpointQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="endpointName" query-param="endpointName"/>
        </call-query>
    </operation>


    <!-- Sequences -->

    <!-- getLatestInAverageProcessingTimeForSequence -->
    <query id="getLatestInAverageProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS AVG_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0') </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="averageTimes" rowName="averageTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="averageTime" column="AVG_TIME"/>
        </result>
    </query>
    <operation name="getLatestInAverageProcessingTimeForSequence">
        <call-query href="getLatestInAverageProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestInMaximumProcessingTimeForSequence -->

    <query id="getLatestInMaximumProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MAX_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0') </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="maximumTimes" rowName="maximumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="maximumTime" column="MAX_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMaximumProcessingTimeForSequence">
        <call-query href="getLatestInMaximumProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestInMinimumProcessingTimeForSequence -->

    <query id="getLatestInMinimumProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MIN_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="minimumTimes" rowName="minimumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="minimumTime" column="MIN_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMinimumProcessingTimeForSequence">
        <call-query href="getLatestInMinimumProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>


    <!-- getLatestInCumulativeCountForSequence -->

    <query id="getLatestInCumulativeCountForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInCumulativeCountForSequence">
        <call-query href="getLatestInCumulativeCountForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestInFaultCountForSequence -->
    <query id="getLatestInFaultCountForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS FAULT_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="faultCounts" rowName="faultCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="faultCount" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInFaultCountForSequence">
        <call-query href="getLatestInFaultCountForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestOutAverageProcessingTimeForSequence -->
    <query id="getLatestOutAverageProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS AVG_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0') </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="averageTimes" rowName="averageTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="averageTime" column="AVG_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutAverageProcessingTimeForSequence">
        <call-query href="getLatestOutAverageProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestOutMaximumProcessingTimeForSequence -->

    <query id="getLatestOutMaximumProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MAX_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0' )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="maximumTimes" rowName="maximumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="maximumTime" column="MAX_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutMaximumProcessingTimeForSequence">
        <call-query href="getLatestOutMaximumProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestOutMinimumProcessingTimeForSequence -->

    <query id="getLatestOutMinimumProcessingTimeForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MIN_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="minimumTimes" rowName="minimumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="minimumTime" column="MIN_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutMinimumProcessingTimeForSequence">
        <call-query href="getLatestOutMinimumProcessingTimeForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>


    <!-- getLatestOutCumulativeCountForSequence -->

    <query id="getLatestOutCumulativeCountForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getLatestOutCumulativeCountForSequence">
        <call-query href="getLatestOutCumulativeCountForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- getLatestOutFaultCountForSequence -->
    <query id="getLatestOutFaultCountForSequenceQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS FAULT_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="sequenceName" sqlType="STRING" type=""/>
        <result element="faultCounts" rowName="faultCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="faultCount" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestOutFaultCountForSequence">
        <call-query href="getLatestOutFaultCountForSequenceQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="sequenceName" query-param="sequenceName"/>
        </call-query>
    </operation>

    <!-- Proxies -->

    <!-- getLatestInAverageProcessingTimeForProxy -->
    <query id="getLatestInAverageProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS AVG_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0') </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="averageTimes" rowName="averageTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="averageTime" column="AVG_TIME"/>
        </result>
    </query>
    <operation name="getLatestInAverageProcessingTimeForProxy">
        <call-query href="getLatestInAverageProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestInMaximumProcessingTimeForProxy -->

    <query id="getLatestInMaximumProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MAX_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0' ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="maximumTimes" rowName="maximumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="maximumTime" column="MAX_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMaximumProcessingTimeForProxy">
        <call-query href="getLatestInMaximumProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestInMinimumProcessingTimeForProxy -->

    <query id="getLatestInMinimumProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MIN_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="minimumTimes" rowName="minimumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="minimumTime" column="MIN_TIME"/>
        </result>
    </query>
    <operation name="getLatestInMinimumProcessingTimeForProxy">
        <call-query href="getLatestInMinimumProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>


    <!-- getLatestInCumulativeCountForProxy -->

    <query id="getLatestInCumulativeCountForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInCumulativeCountForProxy">
        <call-query href="getLatestInCumulativeCountForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestInFaultCountForProxy -->
    <query id="getLatestInFaultCountForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS FAULT_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="faultCounts" rowName="faultCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="faultCount" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestInFaultCountForProxy">
        <call-query href="getLatestInFaultCountForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestOutAverageProcessingTimeForProxy -->
    <query id="getLatestOutAverageProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS AVG_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0' )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="averageTimes" rowName="averageTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="averageTime" column="AVG_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutAverageProcessingTimeForProxy">
        <call-query href="getLatestOutAverageProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestOutMaximumProcessingTimeForProxy -->

    <query id="getLatestOutMaximumProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MAX_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_VALUE > '0.0' )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="maximumTimes" rowName="maximumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="maximumTime" column="MAX_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutMaximumProcessingTimeForProxy">
        <call-query href="getLatestOutMaximumProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestOutMinimumProcessingTimeForProxy -->

    <query id="getLatestOutMinimumProcessingTimeForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS MIN_TIME FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? )</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="minimumTimes" rowName="minimumTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="minimumTime" column="MIN_TIME"/>
        </result>
    </query>
    <operation name="getLatestOutMinimumProcessingTimeForProxy">
        <call-query href="getLatestOutMinimumProcessingTimeForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>


    <!-- getLatestOutCumulativeCountForProxy -->

    <query id="getLatestOutCumulativeCountForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS CUMULATIVE_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="cumulativeCounts" rowName="cumulativeCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="cumulativeCount" column="CUMULATIVE_COUNT"/>
        </result>
    </query>
    <operation name="getLatestOutCumulativeCountForProxy">
        <call-query href="getLatestOutCumulativeCountForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

    <!-- getLatestOutFaultCountForProxy -->
    <query id="getLatestOutFaultCountForProxyQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_VALUE AS FAULT_COUNT FROM BAM_SERVER_USER_DATA WHERE BAM_ID=(SELECT MAX(BAM_ID)  FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? ) </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="proxyName" sqlType="STRING" type=""/>
        <result element="faultCounts" rowName="faultCount" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="faultCount" column="FAULT_COUNT"/>
        </result>
    </query>
    <operation name="getLatestOutFaultCountForProxy">
        <call-query href="getLatestOutFaultCountForProxyQuery">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="proxyName" query-param="proxyName"/>
        </call-query>
    </operation>

	<!--ACTIVITY-->

	<!-- get property bag for activity -->
	 <query id="getPropertyKeyForActivityQuery" useConfig="bamDataSource">
	<sql>SELECT 
          prop.BAM_KEY, 
          prop.BAM_MESSAGE_ID, 
          prop.BAM_ACTIVITY_ID, 
          message.BAM_TIMESTAMP
        FROM 
          BAM_MESSAGE_PROPERTIES prop, 
          BAM_MESSAGE_DATA message 
        WHERE 
          BAM_KEY LIKE 'parent_%' 
        ORDER BY prop.BAM_ACTIVITY_ID, prop.BAM_KEY, prop.BAM_MESSAGE_ID
  </sql>
	<result element="propertyKeysForActivity" rowName="propertyKeyForActivity" defaultNamespace="http://bam.carbon.wso2.org">
	    <element name="propertyKey" column="BAM_KEY"/>
	    <element name="messageId" column="BAM_MESSAGE_ID"/>
	    <element name="activityIdForParent" column="BAM_ACTIVITY_ID"/>
	    <element name="timestampForParent" column="BAM_TIMESTAMP"/>
        </result>
    </query>
    <operation name="getPropertyKeyForActivity">
        <call-query href="getPropertyKeyForActivityQuery">
        </call-query>
    </operation>

	<!-- get property children for activity -->
	 <query id="getPropertyChildrenForActivityQuery" useConfig="bamDataSource">
	<sql>
      SELECT 
       prop.BAM_KEY, 
       prop.BAM_MESSAGE_ID, 
       prop.BAM_ACTIVITY_ID, 
       message.BAM_TIMESTAMP 
      FROM 
       BAM_MESSAGE_PROPERTIES prop, 
       BAM_MESSAGE_DATA message 
      WHERE 
       prop.BAM_ACTIVITY_ID=1 
       AND prop.BAM_KEY LIKE 'child_%' 
      ORDER BY 
       prop.BAM_ACTIVITY_ID,   
       prop.BAM_KEY, 
       prop.BAM_MESSAGE_ID
    </sql>
	<param name="ActivityIdForChildren" sqlType="INTEGER" type=""/>
	<result element="propertyChildrenForActivity" rowName="propertyChildForActivity" defaultNamespace="http://bam.carbon.wso2.org">
	    <element name="propertyKeyForChild" column="BAM_KEY"/>
	    <element name="messageIdForChild" column="BAM_MESSAGE_ID"/>
	    <element name="timestampForChild" column="BAM_TIMESTAMP"/>
        </result>
    </query>
    <operation name="getPropertyChildrenForActivity">
        <call-query href="getPropertyChildrenForActivityQuery">
		 <with-param name="ActivityIdForChildren" query-param="ActivityIdForChildren"/>
        </call-query>
    </operation>
	

	<!-- get server url list for activity gadget -->
	 <query id="getServerListForActivityQuery" useConfig="bamDataSource">
	<sql>SELECT BAM_SERVER_ID, BAM_URL FROM BAM_SERVER</sql>
	<result element="serversForActivity" rowName="serverForActivity" defaultNamespace="http://bam.carbon.wso2.org">
	    <element name="serverUrl" column="BAM_URL"/>
	     <element name="serverId" column="BAM_SERVER_ID"/>
        </result>
    </query>
    <operation name="getServerListForActivity">
        <call-query href="getServerListForActivityQuery">
           
        </call-query>
    </operation>
    
    <!-- get service list for activity gadget -->

    <query id="getServiceListForActivityQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID, BAM_SERVICE_NAME FROM BAM_SERVICE WHERE BAM_SERVER_ID = ?</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="servicesForServer" rowName="serviceForServer" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serviceId" column="BAM_ID"/>
            <element name="serviceName" column="BAM_SERVICE_NAME"/>
        </result>
    </query>
    <operation name="getServiceListForActivity">
        <call-query href="getServiceListForActivityQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>
    
     <!-- get operation list for activity gadget -->

    <query id="getOperationListForActivityQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID, BAM_OP_NAME FROM BAM_OPERATION WHERE BAM_SERVICE_ID  = ?</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="operationsForService" rowName="operationForService" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationId" column="BAM_ID"/>
            <element name="operationName" column="BAM_OP_NAME"/>
        </result>
    </query>
    <operation name="getOperationListForActivity">
        <call-query href="getOperationListForActivityQuery">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>
    
    <!-- get time stamp for the given operation ID -->
    <query id="gettimestampForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID, BAM_TIMESTAMP FROM BAM_MESSAGE WHERE BAM_OP_ID = ?</sql>
        <param name="operationId" sqlType="INTEGER" type=""/>
        <result element="timeStampsForOperation" rowName="timeStampForOperation" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="messageId" column="BAM_ID"/>
        	<element name="timestamp" column="BAM_TIMESTAMP"/>
        </result>
    </query>
    <operation name="gettimestampForOperation">
        <call-query href="gettimestampForOperationQuery">
            <with-param name="operationId" query-param="operationId"/>
        </call-query>
    </operation>
    
     <!-- get direction for the given operation ID -->
    <query id="getDirectionForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT msg.BAM_ID, msgData.BAM_DIRECTION  FROM BAM_MESSAGE msg, BAM_MESSAGE_DATA msgData WHERE msgData.BAM_MESSAGE_ID = msg.BAM_ID AND BAM_OP_ID = ? GROUP BY msg.BAM_ID, msgData.BAM_DIRECTION </sql>
        <param name="operationId" sqlType="INTEGER" type=""/>
        <result element="directionsForOperation" rowName="directionForOperation" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="messageId" column="BAM_ID"/>
        	<element name="direction" column="BAM_DIRECTION"/>
        </result>
    </query>
    <operation name="getDirectionForOperation">
        <call-query href="getDirectionForOperationQuery">
            <with-param name="operationId" query-param="operationId"/>
        </call-query>
    </operation>

    <!-- get message for the given operation ID -->
    <query id="getMessagesForOperationQuery" useConfig="bamDataSource">
        <sql>SELECT msg.BAM_ID FROM BAM_MESSAGE msg, BAM_MESSAGE_DATA msg_data WHERE msg.BAM_OP_ID = ? AND msg_data.BAM_DIRECTION = ? AND msg.BAM_TIMESTAMP BETWEEN ? AND ? GROUP BY msg.BAM_ID  </sql>
        <param name="operationId" sqlType="INTEGER" type=""/>
        <param name="direction" sqlType="STRING" type=""/>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <result element="messagesForOperation" rowName="messageForOperation" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="messageId" column="BAM_ID"/>
        </result>
    </query>
    <operation name="getMessagesForOperation">
        <call-query href="getMessagesForOperationQuery">
            <with-param name="operationId" query-param="operationId"/>
            <with-param name="direction" query-param="direction"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <!-- get message for the given Message ID -->
    <query id="getMessageForMessageIDQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_MESSAGE FROM BAM_MESSAGE_DATA WHERE BAM_MESSAGE_ID  = ? </sql>
        <param name="messageId" sqlType="INTEGER" type=""/>
        <result element="MessagesForMessageID" rowName="MessageForMessageID" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="message" column="BAM_MESSAGE"/>
        </result>
    </query>
    <operation name="getMessageForMessageID">
        <call-query href="getMessageForMessageIDQuery">
            <with-param name="messageId" query-param="messageId"/>
        </call-query>
    </operation>
    
     <!-- getMaximumOperationsForAnActivityID -->

    <query id="getMaximumOperationsForAnActivityIDQuery" useConfig="bamDataSource">
        <sql>SELECT COUNT(DISTINCT OPT.BAM_ID) AS NUMS  FROM BAM_OPERATION OPT, BAM_MESSAGE MSG, BAM_ACTIVITY ACT WHERE  OPT.BAM_ID = MSG.BAM_OP_ID AND MSG.BAM_ACTIVITY_ID =ACT.BAM_ID AND ACT.BAM_ID=?</sql>
        <param name="activityID" sqlType="INTEGER" type=""/>
        <result element="nums" rowName="num" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="num" column="NUMS"/>
        </result>
    </query>
    <operation name="getMaximumOperationsForAnActivityID">
        <call-query href="getMaximumOperationsForAnActivityIDQuery">
            <with-param name="activityID" query-param="activityID"/>
        </call-query>
    </operation>

	<!--getActivityIDForActivityName-->
 <query id="getActivityIDForActivityNameQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID FROM BAM_ACTIVITY WHERE BAM_NAME = ?</sql>
        <param name="activityName" sqlType="STRING" type=""/>
        <result element="activityIDs" rowName="activityID" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityID" column="BAM_ID"/>
        </result>
    </query>
    <operation name="getActivityIDForActivityName">
        <call-query href="getActivityIDForActivityNameQuery">
            <with-param name="activityName" query-param="activityName"/>
        </call-query>
    </operation>


 <!-- getOperationsForActivityID -->

    <query id="getOperationForActivityIDQuery" useConfig="bamDataSource">
        <sql>SELECT OPT.*  FROM BAM_OPERATION OPT, BAM_MESSAGE MSG, BAM_ACTIVITY ACT WHERE OPT.BAM_ID = MSG.BAM_OP_ID AND MSG.BAM_ACTIVITY_ID =ACT.BAM_ID AND ACT.BAM_ID=? GROUP BY MSG.BAM_OP_ID,OPT.BAM_ID,OPT.BAM_SERVICE_ID,OPT.BAM_OP_NAME,OPT.BAM_DESCRIPTION</sql>
        <param name="activityID" sqlType="INTEGER" type=""/>
        <result element="activityOperations" rowName="activityOperation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityOperationID" column="BAM_ID"/>
	   <element name="activityServiceID" column="BAM_SERVICE_ID"/>
	   <element name="activityOperationName" column="BAM_OP_NAME"/>

	   <element name="activityDescription" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getOperationForActivityID">
        <call-query href="getOperationForActivityIDQuery">
            <with-param name="activityID" query-param="activityID"/>
        </call-query>
    </operation>

    <!--getMessagesForOperationIDAndActivityID-->

 <query id="getMessagesForOperationIDAndActivityIDQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_ID AS ID, BAM_MSG_ID AS MSG_ID, BAM_TIMESTAMP AS TIMESTAMP, BAM_IP_ADDRESS AS IP_ADDRESS, BAM_USER_AGENT AS USER_AGENT  FROM BAM_MESSAGE WHERE BAM_OP_ID= ? AND BAM_ACTIVITY_ID=?</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
	<param name="activityID" sqlType="INTEGER" type=""/>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="id" column="ID"/>
            <element name="msgID" column="MSG_ID"/>
            <element name="timestamp" column="TIMESTAMP"/>
	    <element name="ipAddress" column="IP_ADDRESS"/>
	    <element name="useragent" column="USER_AGENT"/>
        </result>
  </query>
  <operation name="getMessagesForOperationIDAndActivityID">
        <call-query href="getMessagesForOperationIDAndActivityIDQuery">
            <with-param name="operationID" query-param="operationID"/>
	    <with-param name="activityID" query-param="activityID"/>
        </call-query>
  </operation>

<!--getMessagesCountForOperationIDAndActivityID-->
<query id="getMessagesCountForOperationIDAndActivityIDQuery" useConfig="bamDataSource">
        <sql>SELECT COUNT(BAM_ID) AS ID FROM BAM_MESSAGE WHERE BAM_OP_ID= ? AND BAM_ACTIVITY_ID=?</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
	<param name="activityID" sqlType="INTEGER" type=""/>
       <result element="countMessagess" rowName="countMessage" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="countMessage" column="ID"/>
        </result>
    </query>
    <operation name="getMessagesCountForOperationIDAndActivityID">
        <call-query href="getMessagesCountForOperationIDAndActivityIDQuery">
           <with-param name="operationID" query-param="operationID"/>
	    <with-param name="activityID" query-param="activityID"/>
        </call-query>
    </operation>

<!-- getOperationsForOperationID -->
    <query id="getOperationsForOperationIDQuery" useConfig="bamDataSource">
        <sql>SELECT BAM_SERVICE_ID AS SERVICE_ID, BAM_OP_NAME AS NAME, BAM_DESCRIPTION AS DESCRIPTION FROM BAM_OPERATION WHERE BAM_ID = ?</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="id" column="SERVICE_ID"/>
            <element name="name" column="NAME"/>
            <element name="description" column="DESCRIPTION"/>
        </result>
    </query>
    <operation name="getOperationsForOperationID">
        <call-query href="getOperationsForOperationIDQuery">
            <with-param name="operationID" query-param="operationID"/>
        </call-query>
    </operation>


 <!-- getOperationIDForMessageID -->

    <query id="getOperationIDForMessageIDQuery" useConfig="bamDataSource">
        <sql>SELECT opt.BAM_ID AS OPERATION_ID FROM BAM_ACTIVITY   act , BAM_MESSAGE  msg,  BAM_OPERATION  opt WHERE act.BAM_ID  = msg.BAM_ACTIVITY_ID AND  msg.BAM_OP_ID  = opt.BAM_ID AND msg.BAM_ID = ?</sql>
        <param name="messageID" sqlType="INTEGER" type=""/>
       <result element="operationIDs" rowName="operationID" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationID" column="OPERATION_ID"/>
        </result>
    </query>
    <operation name="getOperationIDForMessageID">
        <call-query href="getOperationIDForMessageIDQuery">
            <with-param name="messageID" query-param="messageID"/>
        </call-query>
    </operation>


 <!-- getActivityInfoForActivityID -->

    <query id="getActivityInfoForActivityIDQuery" useConfig="bamDataSource">
        <sql>
        SELECT 
         act.BAM_NAME AS ACTIVITY_NAME, 
         svc.BAM_SERVICE_NAME AS SERVICE_NAME,
         opt.BAM_OP_NAME AS OPERATION_NAME, 
         COUNT(msg.BAM_OP_ID) AS MESSAGE_COUNT
       FROM 
         BAM_ACTIVITY act
         , BAM_MESSAGE msg
         , BAM_OPERATION opt
         , BAM_SERVICE svc
       WHERE
         act.BAM_ID = msg.BAM_ACTIVITY_ID 
         AND msg.BAM_OP_ID = opt.BAM_ID 
         AND opt.BAM_SERVICE_ID = svc.BAM_ID 
         AND act.BAM_ID = 1
       GROUP BY 
         act.BAM_NAME
         ,svc.BAM_SERVICE_NAME
         ,opt.BAM_OP_NAME
         ,msg.BAM_OP_ID
        </sql>
        <param name="activityID" sqlType="INTEGER" type=""/>
        <result element="activityInfos" rowName="activityInfo" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityName" column="ACTIVITY_NAME"/>
            <element name="serviceName" column="SERVICE_NAME"/>
            <element name="operationName" column="OPERATION_NAME"/>
            <element name="messageCount" column="MESSAGE_COUNT"/>
        </result>
    </query>
    <operation name="getActivityInfoForActivityID">
        <call-query href="getActivityInfoForActivityIDQuery">
            <with-param name="activityID" query-param="activityID"/>
        </call-query>
    </operation>

<!-- getOperationInfoForActivityID -->

	<query id="getOperationInfoForActivityIDQuery" useConfig="bamDataSource">
		<sql>
		SELECT 
          act.BAM_NAME AS ACTIVITY_NAME
          ,opt.BAM_OP_NAME AS OPERATION_NAME 
        FROM 
          BAM_ACTIVITY act, 
          BAM_MESSAGE msg, 
          BAM_OPERATION opt 
        WHERE 
          act.BAM_ID = msg.BAM_ACTIVITY_ID 
          AND msg.BAM_OP_ID = opt.BAM_ID 
          AND act.BAM_ID = 1 
        ORDER BY 
          msg.BAM_OP_ID
         </sql>
			<param name="activityKeyId" sqlType="INTEGER" type=""/>
		<result element="operationInfos" rowName="operationInfo" defaultNamespace="http://bam.carbon.wso2.org">
			<element name="activityName" column="ACTIVITY_NAME"/>
			<element name="operationName" column="OPERATION_NAME"/>
		</result>
	</query>
		<operation name="getOperationInfoForActivityID">
			<call-query href="getOperationInfoForActivityIDQuery">
			<with-param name="activityKeyId" query-param="activityKeyId"/>
		</call-query>
	</operation>
<!--JMX-->
<query id="getJMXMetricsWindowQuery" useConfig="bamDataSource">
        <sql>SELECT  BAM_KEY AS KEY , BAM_VALUE AS VALUE FROM BAM_SERVER_USER_DATA WHERE BAM_KEY IN ('transport_https_MetricsWindow' ,'transport_https_MetricsWindow') and BAM_SERVER_ID = ?</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="jmxMetricsInfos" rowName="jmxMetricsInfo" defaultNamespace="http://bam.carbon.wso2.org">
	   <element name="mxMetricsKey" column="KEY"/>
           <element name="jmxMetricsValue" column="VALUE"/>
          </result>
    </query>
    <operation name="getJMXMetricsWindow">
        <call-query href="getJMXMetricsWindowQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

<!--Client Data-->

<query id="getClientServiceOperationQuery" useConfig="bamDataSource">
        <sql>SELECT user.BAM_KEY AS CLIENT_KEY,svc.BAM_SERVICE_NAME AS SERVICE_NAME ,opt.BAM_OP_NAME AS OPERATION_NAME  FROM  BAM_SERVER_USER_DATA user, BAM_SERVER svr, BAM_OPERATION opt, BAM_SERVICE svc WHERE user.BAM_SERVER_ID = svr.BAM_SERVER_ID AND svc.BAM_SERVER_ID = svr.BAM_SERVER_ID AND opt.BAM_SERVICE_ID = svc.BAM_ID AND user.BAM_SERVER_ID =?</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="clientServiceOperationInfos" rowName="clientServiceOperationInfo" defaultNamespace="http://bam.carbon.wso2.org">
           <element name="clientService" column="SERVICE_NAME"/>
		<element name="clientOperation" column="OPERATION_NAME"/>
          </result>
    </query>
    <operation name="getClientServiceOperation">
        <call-query href="getClientServiceOperationQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

  <!-- get service given the server id and the service name -->
    <query id="getServiceForServerQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVICE WHERE BAM_SERVER_ID=? AND BAM_SERVICE_NAME=? </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="serviceName" sqlType="STRING" type=""/>
        <result element="services" rowName="service" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serviceID" column="BAM_ID"/>
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="serviceName" column="BAM_SERVICE_NAME"/>
            <element name="serviceDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getServiceForServer">
        <call-query href="getServiceForServerQ">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="serviceName" query-param="serviceName"/>
        </call-query>
    </operation>

    <!-- *************************************************************For the activity message gadgets**************************************************************************-->
 
     <!-- get all ip address for the given time range -->

   <query id="getAllIpAddressForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT BAM_IP_ADDRESS FROM BAM_MESSAGE WHERE BAM_TIMESTAMP BETWEEN ? AND  ? GROUP BY BAM_IP_ADDRESS
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <result element="allIpAddresses" rowName="allIpAddress" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
        </result>
    </query>
    <operation name="getAllIpAddressForTimeRange">
        <call-query href="getAllIpAddressForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>

    <!-- get all activity id's for selected ip address-->

       <query id="getAllActivityForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT BAM_ACTIVITY_ID FROM BAM_MESSAGE WHERE BAM_TIMESTAMP BETWEEN ? AND  ? GROUP BY BAM_ACTIVITY_ID
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="ipAddress" sqlType="STRING" type=""/>
        <result element="allActivities" rowName="activityDetails" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityId" column="BAM_ACTIVITY_ID"/>
        </result>
    </query>
    <operation name="getAllActivityForTimeRange">
        <call-query href="getAllActivityForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="ipAddress" query-param="ipAddress"/>
        </call-query>
    </operation>

    <!-- get all operations related to time stamp , ip address ,activity-->

    <query id="getAllOperationsForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT BAM_OP_ID FROM BAM_MESSAGE WHERE BAM_TIMESTAMP BETWEEN ? AND ? AND BAM_IP_ADDRESS =? AND BAM_ACTIVITY_ID =? GROUP BY BAM_OP_ID
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="ipAddress" sqlType="STRING" type=""/>
        <param name="activityId" sqlType="INTEGER" type=""/>
        <result element="allActivityMsgOperations" rowName="activityMsgOperation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityMsgOperation" column="BAM_OP_ID"/>
        </result>
    </query>
    <operation name="getAllOperationsForTimeRange">
        <call-query href="getAllOperationsForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="ipAddress" query-param="ipAddress"/>
            <with-param name="activityId" query-param="activityId"/>
        </call-query>
    </operation>

    <!--get all msg for the user selected key values ,-->

    <query id="getAllMessagesForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT  BAM_MESSAGE FROM BAM_MESSAGE_DATA WHERE BAM_ID IN (SELECT BAM_ID FROM BAM_MESSAGE WHERE BAM_TIMESTAMP BETWEEN ? AND ?  AND BAM_IP_ADDRESS =? AND BAM_ACTIVITY_ID =? AND BAM_OP_ID =?)
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="ipAddress" sqlType="STRING" type=""/>
        <param name="activityId" sqlType="INTEGER" type=""/>
        <param name="operationId" sqlType="INTEGER" type=""/>
        <result element="allMessages" rowName="activityMessage" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="fullActivityMessage" column="BAM_MESSAGE"/>
        </result>
    </query>
    <operation name="getAllMessagesForTimeRange">
        <call-query href="getAllMessagesForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="ipAddress" query-param="ipAddress"/>
            <with-param name="activityId" query-param="activityId"/>
            <with-param name="operationId" query-param="operationId"/>
        </call-query>
    </operation>

    <!--**************************************************************************************************************************************************************************-->

<!-- get Activity details (operations, services, servers, messages and timestamps) for the given activity name -->
    <query id="getDetailsForActivityQ" useConfig="bamDataSource">
        <sql>SELECT  server.BAM_URL AS BAM_SERVER, service.BAM_SERVICE_NAME AS SERVICE_NAME, opt.BAM_OP_NAME AS OPERATION_NAME, msg_data.BAM_MESSAGE_ID AS MESSAGE, msg.BAM_TIMESTAMP AS TIME_STAMP, msg_data.BAM_DIRECTION as BAM_DIRECTION, msg_data.BAM_STATUS FROM BAM_MESSAGE_PROPERTIES prop, BAM_MESSAGE msg, BAM_ACTIVITY act, BAM_OPERATION opt, BAM_SERVICE service, BAM_SERVER server, BAM_MESSAGE_DATA msg_data WHERE msg.BAM_ID = prop.BAM_MESSAGE_ID AND BAM_KEY = ? AND act.BAM_ID = msg.BAM_ACTIVITY_ID AND opt.BAM_ID = msg.BAM_OP_ID AND service.BAM_ID = opt.BAM_SERVICE_ID AND server.BAM_SERVER_ID = service.BAM_SERVER_ID AND msg_data.BAM_MESSAGE_ID = msg.BAM_ID GROUP BY  server.BAM_URL, service.BAM_SERVICE_NAME, opt.BAM_OP_NAME, msg_data.BAM_MESSAGE_ID, msg.BAM_TIMESTAMP, msg_data.BAM_DIRECTION, msg_data.BAM_STATUS, prop.BAM_KEY;
 </sql>
        <param name="ActivityName" sqlType="STRING" type=""/>
        <result element="activities" rowName="activity" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="serverUrl" column="BAM_SERVER"/>
        	<element name="serviceName" column="SERVICE_NAME"/>
        	<element name="name" column="OPERATION_NAME"/>
        	<element name="message_name" column="MESSAGE"/>
            <element name="timestamp" column="TIME_STAMP"/>
            <element name="direction" column="BAM_DIRECTION"/>
            <element name="status" column="BAM_STATUS"/>
        </result>
    </query>
    <operation name="getDetailsForActivity">
        <call-query href="getDetailsForActivityQ">
            <with-param name="ActivityName" query-param="ActivityName"/>
        </call-query>
    </operation>
    
    <!-- get Activity details for a given server(operations, timestamps) for the given server name -->
    <query id="getActivityDetailsForServerQ" useConfig="bamDataSource">
        <sql>SELECT opt.BAM_OP_NAME AS OPERATION_NAME, msg.BAM_TIMESTAMP AS TIME_STAMP, msg.BAM_OP_ID, service.BAM_SERVICE_NAME, server.BAM_URL
			FROM BAM_ACTIVITY act, BAM_MESSAGE msg, BAM_OPERATION opt, BAM_SERVICE service, BAM_SERVER server 
			WHERE act.BAM_ID = msg.BAM_ACTIVITY_ID AND msg.BAM_OP_ID = opt.BAM_ID AND opt.BAM_SERVICE_ID  = service.BAM_ID AND service.BAM_SERVER_ID = server.BAM_SERVER_ID AND server.BAM_URL = ? 
			GROUP BY msg.BAM_OP_ID, service.BAM_SERVICE_NAME, server.BAM_URL, msg.BAM_TIMESTAMP, opt.BAM_OP_NAME 
			ORDER BY TIME_STAMP</sql>
        <param name="serverURL" sqlType="STRING" type=""/>
        <result element="activitiesForServer" rowName="activityForServer" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="timestamp_activityForServer" column="TIME_STAMP"/>
            <element name="operationName_activityForServer" column="OPERATION_NAME"/>
        </result>
    </query>
    <operation name="getActivityDetailsForServer">
        <call-query href="getActivityDetailsForServerQ">
            <with-param name="serverURL" query-param="serverURL"/>
        </call-query>
    </operation>
    
    <!-- get PropertyBag details for the given activity name -->
    <query id="getpropertyBagForActivityQ" useConfig="bamDataSource">
        <sql>SELECT prop.BAM_MESSAGE_ID, prop.BAM_KEY FROM BAM_MESSAGE_PROPERTIES prop, BAM_ACTIVITY act WHERE prop.BAM_ACTIVITY_ID = act.BAM_ID AND act.BAM_NAME = ? GROUP BY prop.BAM_MESSAGE_ID, prop.BAM_KEY</sql>
        <param name="ActivityNameForProperty" sqlType="STRING" type=""/>
        <result element="propertyBags" rowName="propertyBag" defaultNamespace="http://bam.carbon.wso2.org">
        	<element name="properties" column="BAM_KEY"/>
        	<element name="messageId" column="BAM_MESSAGE_ID"/>
        </result>
    </query>
    <operation name="getpropertyBagForActivity">
        <call-query href="getpropertyBagForActivityQ">
            <with-param name="ActivityNameForProperty" query-param="ActivityNameForProperty"/>
        </call-query>
    </operation>

     <query id="getAllActivityDataForTimeRangeAndOperationQ" useConfig="bamDataSource">
        <sql>SELECT BAM_ID , BAM_NAME FROM BAM_ACTIVITY WHERE BAM_ID IN (SELECT BAM_ACTIVITY_ID  FROM BAM_MESSAGE WHERE BAM_TIMESTAMP BETWEEN ? AND ? AND BAM_OP_ID =? )
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="activityOperationId" sqlType="INTEGER" type=""/>
        <result element="activityDatas" rowName="activityData" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="activityDataId" column="BAM_ID"/>
             <element name="activityDataName" column="BAM_NAME"/>
        </result>
    </query>
    <operation name="getAllActivityDataForTimeRangeAndOperation">
        <call-query href="getAllActivityDataForTimeRangeAndOperationQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="activityOperationId" query-param="activityOperationId"/>
        </call-query>
    </operation>

     <query id="getAllActivityMessagesForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT BAM_MESSAGE FROM BAM_MESSAGE_DATA WHERE BAM_TIMESTAMP BETWEEN ? AND ? AND BAM_ACTIVITY_ID =?
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="messageActivityId" sqlType="INTEGER" type=""/>
        <result element="allActivityMessages" rowName="allActivityMessage" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="finalActivityMessage" column="BAM_MESSAGE"/>
        </result>
    </query>
    <operation name="getAllActivityMessagesForTimeRange">
        <call-query href="getAllActivityMessagesForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="messageActivityId" query-param="messageActivityId"/>
        </call-query>
    </operation>
    <!--Adding for the message gadgets editing ajithn-->
    <query id="getAllActivityDataForTimeRangeQ" useConfig="bamDataSource">
        <sql>SELECT BAM_ID , BAM_NAME FROM BAM_ACTIVITY WHERE BAM_ID IN (SELECT BAM_ACTIVITY_ID  FROM BAM_MESSAGE    WHERE BAM_TIMESTAMP BETWEEN ? AND ? )
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <result element="fullActivityDatas" rowName="fullActivityData" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="activityDataId" column="BAM_ID"/>
             <element name="activityDataName" column="BAM_NAME"/>
        </result>
    </query>
    <operation name="getAllActivityDataForTimeRange">
        <call-query href="getAllActivityDataForTimeRangeQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>            
        </call-query>
    </operation>

     <query id="getAllMessagesForTimeRangeAndActivityQ" useConfig="bamDataSource">
        <sql>SELECT BAM_MESSAGE FROM BAM_MESSAGE_DATA WHERE BAM_TIMESTAMP BETWEEN ? AND ? AND BAM_ACTIVITY_ID =?
        </sql>
        <param name="startTime" sqlType="STRING" type=""/>
        <param name="endTime" sqlType="STRING" type=""/>
        <param name="messageActivityId" sqlType="INTEGER" type=""/>
        <result element="allMessagesForActivities" rowName="allMessagesForActivity" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityMessage" column="BAM_MESSAGE"/>
        </result>
    </query>
    <operation name="getAllMessagesForTimeRangeAndActivity">
        <call-query href="getAllMessagesForTimeRangeAndActivityQ">
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
            <with-param name="messageActivityId" query-param="messageActivityId"/>
        </call-query>
    </operation>
</data>
                      
