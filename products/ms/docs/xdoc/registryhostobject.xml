<!--
~ Copyright 2005-2008 WSO2, Inc. (http://wso2.com)
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <link href="css/mashup-docs.css" rel="stylesheet" type="text/css" media="all" />
  <link type="text/css" rel="stylesheet" href="css/SyntaxHighlighter.css" media="all" />
  <script language="javascript" src="js/shCore.js"/>
  <script language="javascript" src="js/shBrushJScript.js" />
  <script language="javascript" src="js/shBrushJava.js" />
  <script language="javascript" src="js/shBrushSql.js" />
  <script language="javascript" src="js/shBrushXml.js" />
</head><body>
<div id="main-content">
<h1>Registry Host Object</h1>
<h2>1.0 Introduction</h2>
<p>From
a Mashup, you might want to store/retrieve content from the Registry.
This Registry hostobject allows you to execute core registry operations
such GET, PUT, DELETE etc. on Mashup Server's registry instance. You
can create a Resource/Collection object, add properties, metadata and
store it in the registry. When you use Registry Hostobject along with
other hostobjects of Mashup Server, you can create enterprice level
mashups easily. <br />
</p>
<p>
        All registry operations are executed relative to the registry path /_system/<a onclick="pickPath('/_system/governance','null', 'treeViewRoot_0_1');" title="/_system/governance">governance</a>. <br />
</p>
<h3>1.1 Example</h3>
<pre name="code" class="js">function registryPut() {<br /> var registry = new Registry();<br /> var resource = registry.newResource();<br /> resource.content = &lt;products&gt;&lt;product name="Mashup Server"/&gt;&lt;product name="Gadget Server"/&gt;&lt;/products&gt;;<br /> resource.addProperty("url", "http://wso2.com");<br /> resource.addProperty("company", "WSO2 Inc.");<br /> registry.put("products/middleware/wso2.xml", resource);<br />}<br />            </pre>
<h2>2.0 Registry Object</h2>
<h3>2.1 Registry Interface</h3>
<pre name="code" class="js">{<br /> function boolean resourceExists(String path);<br /> function (Resource|Collection) get(String path, [Number start, Number pageSize]);<br /> function void remove(String path);<br /> function String put(String suggestedPath, Resource|Collection resource);<br /> function Resource newResource();<br /> function Collection newCollection();<br />}<br />            </pre>
<h3>2.2 API Documentation</h3>
<table style="margin-left: 0.5in; border-collapse: collapse;" class="MsoTableGrid" border="1" cellpadding="5" cellspacing="0">
  <tbody>
    <tr style="font-weight: bold;">
      <td>Member</td>
      <td>Description</td>
    </tr><tr>
      <td style="font-weight: bold;"><pre name="code" class="js">function boolean <br />resourceExists(String path);</pre></td>
      <td>This method returns true or false depending on the existance
of either a Resource or a Collection in the specified path.<br />
      <span style="font-family: monospace;">var registry = new
Registry();<br />
boolean existance = registry.resourceExists("middleware/wso2/products");<br />
      </span>
      <p>Above code returns true if a resource exists in the path<strong>
</strong><em>/_system/governance/middleware/wso2/products</em><em></em>.<br />
      </p>
      </td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function (Resource|Collection) <br />get(String path, [Number start, Number pageSize]);</pre>
      </td>
      <td>This method returns the resource in the specified path. If
the resource in the path is a collection, then a Collection object is
returned. Else, it returns a Resource object. If it is a collection,
then you can specfify optional start and pageSize parameters to filter
your results.<br />
      </td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function void <br />remove(String path);</pre>
      </td>
      <td>This method removes the resource in the specified path from
the Registry.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function String <br />put(String suggestedPath, Resource|Collection resource);</pre>
      </td>
      <td>This method adds either a Resource or a Collection into the
specified path in the registry. </td>
    </tr>
    <tr>
      <td>
      <pre name="code" class="js"><span style="font-weight: bold;">function Resource newResource();</span><br /></pre>
      </td>
      <td>Whe you insert a new Resource into the registry, then you
should use this method to create the initial Resource object.<br />
      </td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function Collection newCollection();</pre>
      </td>
      <td>Whe you insert a new Resource into the registry, then you
should use this method to create the initial Resource object. </td>
    </tr>
  </tbody>
</table>

<h2>
        <br />
        3.0 Resource Object</h2>

<h3>3.1 Resource Interface</h3>

<pre name="code" class="js">{<br /> function String addProperty(String key, String value);<br /> function String getProperty(String key);<br /> function Array getPropertyValues(String key);<br /> function Array getProperties();<br /> function void editPropertyValue(String key, String oldValue, String newValue);<br /> function void removeProperty(String key);<br /> function void removePropertyValue(String key, String value);<br /> function void setProperty(String key, String|Array value);<br /> readonly property String author;<br /> readonly property String lastUpdatedUser;<br /> readonly property String createdTime;<br /> readonly property String lastUpdatedTime;<br /> readonly property String id;<br /> readonly property String parentPath;<br /> readonly property String path;<br /> readonly property String permanantPath;<br /> readonly property String state;<br /> property String mediaType;<br /> property String|Array|XML content;<br /> property String description;<br />}<br />            </pre>

<h3>3.2 API Documentation</h3>

<table style="margin-left: 0.5in; border-collapse: collapse;" class="MsoTableGrid" border="1" cellpadding="5" cellspacing="0">

  <tbody>
    <tr style="font-weight: bold;">
      <td>Member</td>
      <td>Description</td>
    </tr><tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function String 
                <br />addProperty(String key, String value);</pre>
     </td>
      <td>Add a property value for the provided key. If there are values associated with the key, this will append value. If not this will create a new property value for the key.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function String 
                <br />getProperty(String key);</pre>
      </td>
      <td>Get the property value for the given key, if there are multiple value for that key, it will return the first value.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function Array 
                <br />getPropertyValues(String key);</pre>
      </td>
      <td>Returns the list of values for the given property name.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function Array getProperties();</pre>
      </td>
      <td>This method returns an object with all the properties of the Resource in the following format.
	<pre name="code" class="js">[
                <br /> { name : "key1", value : "value1" }, 
                <br /> { name : "key2", value : "value2" },
                <br /> .....
                <br />]</pre>
</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function void 
                <br />editPropertyValue(String key, String oldValue, String newValue);</pre>
      </td>
      <td>Replace the oldValue of a property specifed by the key, with the newValue. As many values can be associated with a particular key in a property, it needs to pass the oldValue too.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function void 
                <br />removeProperty(String key);</pre>
      </td>
      <td>Removes the property specified by the key from a Resource.<br />
      </td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function void 
                <br />removePropertyValue(String key, String value);</pre>
      </td>
      <td>Remove the specified value from a property with the specified key.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function void 
                <br />setProperty(String key, String|Array value);</pre>
      </td>
      <td>Set properties either as a single value or an array of values.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String author;</pre>
      </td>
      <td>Get the user name of the resource author.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String lastUpdatedUser;</pre>
      </td>
      <td>Property to get the last updated user name</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String createdTime;</pre>
      </td>
      <td>Property to get the created time.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String lastUpdatedTime;</pre>
      </td>
      <td>Property to get the last modified date.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String id;</pre>
      </td>
      <td>The Resource ID, In the default implementation this returns the path.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String parentPath;</pre>
      </td>
      <td>Get the parent path.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String path;</pre>
      </td>
      <td>Property to get the path, the unique identifier of the resources in the present state.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String permanantPath;</pre>
      </td>
      <td>If resource is version-ed, the associated version of the resource does not get modified by any means. Therefore, the path of that version is the permanent path (permalink) of the current state of the resource.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property String state;</pre>
      </td>
      <td>Get the state.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">property String mediaType;</pre>
      </td>
      <td>Get/set media type.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">property String|Array|XML content;</pre>
      </td>
      <td>Method to get the content of the resource. If the resource is a collection, this will return an array of string that represents the paths of its children, otherwise it returns a string or XML depending on the content type.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">property String description;</pre>
      </td>
      <td>Property to get/set the description.</td>
    </tr>
        </tbody>
</table>




<br/>
<h2>3.0 Collection Object</h2>
<h3>3.1 Collection Interface extends Resource</h3>

<pre name="code" class="js">{<br /> function Array getChildren([Number start, Number pageLen]);<br /> readonly property Number childCount;<br/>}<br />            </pre>

<h3>3.2 API Documentation</h3>

<table style="margin-left: 0.5in; border-collapse: collapse;" class="MsoTableGrid" border="1" cellpadding="5" cellspacing="0">

  <tbody>
    <tr style="font-weight: bold;">
      <td>Member</td>
      <td>Description</td>
    </tr><tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">function Array getChildren([Number start, Number pageLen]);</pre>
     </td>
      <td>Method to return the absolute paths of the children of the collection. Using start and pageLen values, you can get children of a selected range.</td>
    </tr>
    <tr>
      <td style="font-weight: bold;">
      <pre name="code" class="js">readonly property Number childCount;</pre>
      </td>
      <td>Property to get the the number of children.</td>
    </tr>
        </tbody>
</table>
</div><script language="javascript">
            dp.SyntaxHighlighter.BloggerMode();
            dp.SyntaxHighlighter.HighlightAll('code');
        </script><br />

</body></html>