<!--
~ Copyright 2005-2008 WSO2, Inc. (http://wso2.com)
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link href="css/mashup-docs.css" rel="stylesheet" type="text/css" media="all"/>
        <link type="text/css" rel="stylesheet" href="css/SyntaxHighlighter.css" media="all"/>
        <script language="javascript" src="js/shCore.js"></script>
        <script language="javascript" src="js/shBrushJScript.js"></script>
        <script language="javascript" src="js/shBrushJava.js"></script>
        <script language="javascript" src="js/shBrushSql.js"></script>
        <script language="javascript" src="js/shBrushXml.js"></script>
    </head>
    <body>
        <div id="main-content">
            <h1>Session Host Object</h1>
            <h2>1.0 Introduction</h2>
            <p>The 'session' host object provides the ability for the users
                to share objects across different service invocations. The session
                object is global and thus does not need to be instantiated explicitly.
            </p>
            <h3>1.1 Example</h3>
            <pre name="code" class="js">
                this.serviceName = "ApplicationScopeService";
                this.scope="application";
                
                var key = "number";

                function putValue(param) {
                    session.put(key,2);
                    return &lt;success/&gt;;
                }

                function getValue(param) {
                    var number = session.get(key);
                    return &lt;number&gt;{number}&lt;/number&gt;;
                }

                function removeValue(param) {
                    session.remove(key);
                    return &lt;success/&gt;;
                }

                function clearSession(param) {
                    session.clear();
                    return &lt;success/&gt;;
                }
            </pre>

            <h2>2.0 Session Object</h2>
            <p>Session scope for a deployed mashup can be given using the
                "scope" service property annotation. Following are the set of supported
                scopes.
            </p>
            <p>
                <b>'request'</b>
                - The state date stored in the session object will be
                <b>
                    <em>available
                        only for the current invocation
                    </em>
                </b>
                of the service. In
                other words the session object has no effect in this scope.
            </p>
            <p>
                <b>'transportsession'</b>
                - The state date stored in the session object will be
                <b>
                    <em>available
                        only for the
                    </em>
                </b>
                <b>
                    <em>life time of the
                        transport session
                    </em>
                </b>
                used for invoking this service.
                This can be used to store data across invocations for a specific client.
            </p>
            <p>'<b>application</b>'
                - The state date stored in the session object will be
                <b>
                    <em>available
                        throughout the life time
                    </em>
                </b>
                of the service.
            </p>
            <p>
                <b>'soapsession'</b>
                - WS-Addressing is required for this.
                <b>&lt; Not Implemented as yet
                    &gt;</b>
                <br/>
            </p>
            <p>By default, Mashup services deployed in the WSO2 Mashup Server
                are running in the "request" scope.
            </p>
            <h3>2.1 Session Object Interface</h3>
            <pre name="code" class="xml">
                {
                    function void put(key,object);
                    function object get(key);
                    function void remove(key);
                    function void clear();
                    function int size();
                    function String[] getKeys();
                }
            </pre>
            <h3>2.2 API Documentation</h3>
            <table class="MsoTableGrid" style="margin-left: 0.5in; border-collapse: collapse;" border="1"
                   cellpadding="5" cellspacing="0">
                <tbody>
                    <tr>
                        <td>Member</td>
                        <td>Description</td>
                        <td>Supported in version</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function</span>
                            <b>void put(key,object);</b>
                        </td>
                        <td>Puts the key value pair in to the session object. This
                            pair will be available for the service invocations across the session.
                            <br/>
                            <em>session.put("name",
                                "WSO2 Mashup Server");
                            </em>
                        </td>
                        <td>0.1</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function</span>
                            <b>object
                                get(key);
                            </b>
                        </td>
                        <td>Retrieves the value associated with the given "key"
                            from the current session object.
                            <br/>
                            <em>
                                session.get("name");
                            </em>
                        </td>
                        <td>0.1</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function</span>
                            <b>void
                                remove(key);
                            </b>
                        </td>
                        <td>Removes the value associated with the given "key"
                            from the current session object.
                            <br/>
                            <em>
                                session.remove("name");
                            </em>
                        </td>
                        <td>1.0</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function</span>
                            <b>void
                                clear();
                            </b>
                        </td>
                        <td>Removes all values from the current session object.
                            <br/>
                            <em>
                                session.clear();
                            </em>
                        </td>
                        <td>1.0</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function
                                int
                            </span>
                            <b>size();</b>
                        </td>
                        <td>Returns the number of entries in the current session.
                            <br/>
                            <span style="font-style: italic;">
                                var size = session.size();
                            </span>
                        </td>
                        <td>1.5</td>
                    </tr>
                    <tr>
                        <td>
                            <span style="font-weight: bold;">function
                                String[]
                            </span>
                            <b>getKeys();</b>
                        </td>
                        <td>Returns an array of strings containing all the key
                            values, which represent the entries stored in the current session.\
                            <br/>
                            <span style="font-style: italic;">
                                var keys = session.getKeys();
                            </span>
                        </td>
                        <td>1.5</td>
                    </tr>
                </tbody>
            </table>

            <h2 id="SessionHostObject-3.0References">3.0 References</h2>
            <ul>
                <li>
                    <a href="apidocs/org/wso2/mashup/hostobjects/session/SessionHostObject.html">JavaDoc
                        for the session host Object
                    </a>
                </li>
            </ul>
        </div>
        <script language="javascript">
            dp.SyntaxHighlighter.BloggerMode();
            dp.SyntaxHighlighter.HighlightAll('code');
        </script>
    </body>
</html>
