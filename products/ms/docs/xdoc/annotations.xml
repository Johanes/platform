<!--
~ Copyright 2005-2008 WSO2, Inc. (http://wso2.com)
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link href="css/mashup-docs.css" rel="stylesheet" type="text/css" media="all"/>
        <link type="text/css" rel="stylesheet" href="css/SyntaxHighlighter.css" media="all"/>
        <script language="javascript" src="js/shCore.js"></script>
        <script language="javascript" src="js/shBrushJScript.js"></script>
        <script language="javascript" src="js/shBrushJava.js"></script>
        <script language="javascript" src="js/shBrushSql.js"></script>
        <script language="javascript" src="js/shBrushXml.js"></script>
    </head>

    <body>
        <div id="main-content">
            <h1>JavaScript Web Service Annotations</h1>

            <p>
                <strong>Table of Contents</strong>
            </p>

            <div class="toc">
                <ul>

                    <li>
                        <a href="#documentat">Documentation Annotation</a>
                    </li>

                    <li>
                        <a href="#visible">Visible Annotation</a>
                    </li>

                    <li>
                        <a href="#inputTypes">InputType and
                            OutputType Annotations
                        </a>
                    </li>

                    <li>
                        <a href="#httpMethod">HTTPMethod, HTTPLocation and IgnoreUncited Annotations</a>
                    </li>
                    <li>
                        <a href="#lifecycle">Init, Destroy and Undispatched Annotations</a>
                    </li>


                    <li>
                        <a href="#Other">Other Annotations</a>
                    </li>

                </ul>

            </div>

            <p>There are a number of annotations that you can insert into
                your JavaScript Mashup service that enrich the descriptions and tools
                generated by the mashup service. We encourage you to use
                these annotations liberally.
            </p>

            <p>The WSO2 Mashup Server defines a set of properties that can
                be applied to the Global object, representing the service as a whole,
                or to individual functions. In javaScript, functions are
                actually objects, and any object can have additional properties
                dynamically added to it. The set of common properties to set on an
                object is described below.
            </p>

            <p>There are two groups of annotations. Some annotations are used
                at service level while the others are used at an operation level. The
                documentation annotaion is used at both service and operation level.
            </p>

            <h2 id="documentat">Documentation Annotation</h2>

            <p>Documentation properties can be added either to the global
                object, or to individual function objects.
            </p>

            <pre name="code" class="js">
                this.documentation = &lt;div&gt;The &lt;b&gt;simple&lt;/b&gt; service has a single operation - &lt;i&gt;echo&lt;/i&gt;.&lt;/div&gt;;

                echo.documentation = "The echo operation accepts a blob of XML and returns it to the caller unchanged."
                function echo(xmlblob) {
                    return xmlblob;
                }
            </pre>

            <p>The documentation can have either a string value, as shown in
                the echo.documentation property above, or it can have an XML.
            </p>

            <p>The documentation property serves several purposes:</p>

            <ol>

                <li>It provides structured documentation within the service.
                    While you could use javaScript comments instead, using a documentation
                    property to describe the service and its operations makes it possible
                    to distinguish between comments describing the implementation, and
                    comments documenting the behavior of the service, and to re-use the
                    latter.
                </li>

                <li>The documentation for the service (this.documentation)
                    appears in the WSDL as a top-level &lt;documentation&gt;
                    element. The documentation for each operation (echo.documentation in
                    the above example) appears as &lt;documentation&gt; elements on
                    each Interface Operation.
                </li>

                <li>The documentation is displayed in the Try-it page.</li>

                <li>The documentation is also displayed in the ?doc page.</li>

            </ol>

            <h2 id="visible">Visible Annotation</h2>

            <p>By default, each function in a javaScript service file is
                exposed as an operation. But often functions should be
                'private', for the benefit of other functions and not an entry point
                that the author wishes to expose to a client. When the
                'visible' property has the Boolean value <em>false</em>,
                the function is not exposed as an operation (e.g., it doesn't appear in
                the WSDL, Try-it, etc.)
            </p>

            <pre name="code" class="js">
                function equals(lefthand, righthand) {
                    return (lefthand == righthand &amp;&amp; typeEquals(lefthand, righthand));
                }

                typeEquals.visible = false;
                function typeEquals(lefthand, righthand) {
                    return (typeof(lefthand) == typeof(righthand));
                }
            </pre>

            <p>In the above example, there is an implicit "equals.visible = true;".
            </p>

            <h2 id="inputTypes">InputType and OutputType Annotations</h2>

            <p>
                Please refer documentation on
                <a href="dataBinding.html">JavaScript
                    Data Binding
                </a>
                for details.
            </p>

            <h2 id="httpMethod">HTTPMethod, HTTPLocation and IgnoreUncited Annotations</h2>

            <p>
                Please refer documentation on
                <a href="restyservices.html">Writing
                    RESTful Services
                </a>
                for details.
            </p>

            <h2 id="lifecycle">Init, Destroy and Undispatched Annotations</h2>

            <p>
                Please refer documentation on
                <a href="servicelifecycle.html">Service Lifecycle Support</a>
                for details.
            </p>

            <h2 id="Other">Other Annotations</h2>

            <p>For advanced usage, there are a number of other properties
                that can be used:
            </p>

            <ul>

                <li><b>this.targetNamespace</b>: places the
                    components of the description (WSDL 2.0, WSDL 1.1) in a specific
                    namespace. By default, the targetNamespace is http://services.mashup.wso2.org/{service
                    name}, which is of course not guaranteed to be unique.
                </li>

                <li>
                    <b>this.schemaTargetNamespace</b>
                    : sets the
                    schema target namespace, which will be used as the namespace for any
                    wrapper elements generated by the mashup server. By default
                    the targetnamespace is http://services.mashup.wso2.org/{servicename}?xsd.
                </li>

                <li>
                    <b>this.serviceName</b>
                    : exposes the service
                    under an alternate name (in the WSDL, try-it, documentation,
                    etc.) By default the serviceName is the name of the
                    JavaScript file (minus the '.js'.)
                </li>

                <li>
                    <b>{function}.safe</b>
                    :indicates whether
                    repeated calls to the operation cause side effects. For
                    example, two calls to a 'bill me' operation would normally result in
                    two charges, while two calls to a 'current activity' operation would
                    not cause any harmful side-effects. The safe annotation maps
                    to the wsdlx:safe attribute, and helps determine whether GET or POST is
                    the most appropriate HTTP method to use.
                </li>

                <li>
                    <b>{function}.operationName</b>
                    : exposes the
                    function as an operation under an alternate name (in the WSDL, try-it,
                    documentation, etc.). By default, the operationName is the
                    name of the function.
                </li>

            </ul>


        </div>
        <script language="javascript">
            dp.SyntaxHighlighter.BloggerMode();
            dp.SyntaxHighlighter.HighlightAll('code');
        </script>
    </body>
</html>
