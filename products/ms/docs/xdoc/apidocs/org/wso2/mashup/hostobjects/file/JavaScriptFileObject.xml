<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--NewPage-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="generator" content=
"HTML Tidy for Linux/x86 (vers 7 December 2008), see www.w3.org" />
<!-- Generated by javadoc (build 1.5.0_14) on Fri Feb 20 03:37:43 PST 2009 -->
<title>JavaScriptFileObject (WSO2 Mashup Server Host Objects
API)</title>
<meta name="keywords" content=
"org.wso2.mashup.hostobjects.file.JavaScriptFileObject class" />
<link rel="stylesheet" type="text/css" href=
"../../../../../JavadocStyles.css" title="Style" />
<script type="text/javascript">
//<![CDATA[
function windowTitle()
{
    parent.document.title="JavaScriptFileObject (WSO2 Mashup Server Host Objects API)";
}
//]]>
</script>
</head>
<body>
<hr />
<!-- ======== START OF CLASS DATA ======== -->
<h2><font size="-1">org.wso2.mashup.hostobjects.file</font><br />
Class JavaScriptFileObject</h2>
<pre>
java.lang.Object
  <img src="../../../../../resources/inherit.gif" alt=
"extended by " />org.mozilla.javascript.ScriptableObject
      <img src="../../../../../resources/inherit.gif" alt=
"extended by " /><b>org.wso2.mashup.hostobjects.file.JavaScriptFileObject</b>
</pre>
<dl>
<dt><b>All Implemented Interfaces:</b></dt>
<dd>java.io.Serializable, org.mozilla.javascript.ConstProperties,
org.mozilla.javascript.debug.DebuggableObject,
org.mozilla.javascript.Scriptable</dd>
</dl>
<hr />
<dl>
<dd>
<pre>
public class <b>JavaScriptFileObject</b>
</pre>
<dt>extends org.mozilla.javascript.ScriptableObject</dt>
</dd>
</dl>
This is a JavaScript Rhino host object to provide the ability for
the users to manipulate with Files inside the WSO2 Mashup
environment. For more information refer to <a href=
"http://www.wso2.org/wiki/display/mashup/File+Host+Object">JavaScript
File Host Object</a>.
<dl>
<dt><b>See Also:</b></dt>
<dd><a href=
"../../../../../serialized-form.html#org.wso2.mashup.hostobjects.file.JavaScriptFileObject">
Serialized Form</a></dd>
</dl>
<hr />
<p><!-- =========== FIELD SUMMARY =========== -->
 <a name="field_summary" id="field_summary"><!-- --></a></p>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Field
Summary</b></font></th>
</tr>
</table>
&#160;<a name=
"fields_inherited_from_class_org.mozilla.javascript.ScriptableObject"
id=
"fields_inherited_from_class_org.mozilla.javascript.ScriptableObject"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Fields inherited from class
org.mozilla.javascript.ScriptableObject</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>CONST, DONTENUM, EMPTY, PERMANENT, READONLY,
UNINITIALIZED_CONST</code></td>
</tr>
</table>
&#160;<a name=
"fields_inherited_from_class_org.mozilla.javascript.Scriptable" id=
"fields_inherited_from_class_org.mozilla.javascript.Scriptable">
<!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Fields inherited from interface
org.mozilla.javascript.Scriptable</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>NOT_FOUND</code></td>
</tr>
</table>
&#160; <!-- ======== CONSTRUCTOR SUMMARY ======== -->
 <a name="constructor_summary" id="constructor_summary">
<!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Constructor
Summary</b></font></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#JavaScriptFileObject()">
JavaScriptFileObject</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
</table>
&#160; <!-- ========== METHOD SUMMARY =========== -->
 <a name="method_summary" id="method_summary"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Method
Summary</b></font></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#getClassName()">
getClassName</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.io.File</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#getFile()">
getFile</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To
access the file from java classes</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>static&#160;org.mozilla.javascript.Scriptable</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsConstructor(org.mozilla.javascript.Context,%20java.lang.Object[],%20org.mozilla.javascript.Function,%20boolean)">
jsConstructor</a></b>(org.mozilla.javascript.Context&#160;cx,
java.lang.Object[]&#160;args,
org.mozilla.javascript.Function&#160;ctorObj,
boolean&#160;inNewExpr)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_close()">
jsFunction_close</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Users
are expected to close the file after reading, writing &amp;
appending to the file.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;boolean</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_createFile()">
jsFunction_createFile</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates
the file if it does not exist.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;boolean</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_deleteFile()">
jsFunction_deleteFile</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deletes
this file from the file system.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>static&#160;boolean</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_move(org.mozilla.javascript.Context,%20org.mozilla.javascript.Scriptable,%20java.lang.Object[],%20org.mozilla.javascript.Function)">
jsFunction_move</a></b>(org.mozilla.javascript.Context&#160;cx,
org.mozilla.javascript.Scriptable&#160;thisObj,
java.lang.Object[]&#160;arguments,
org.mozilla.javascript.Function&#160;funObj)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Move
the file to the given target file.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_openForAppending()">
jsFunction_openForAppending</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Open
the file for appending.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_openForReading()">
jsFunction_openForReading</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Open
the file for reading.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_openForWriting()">
jsFunction_openForWriting</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Open
the file for writing.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_read(int)">
jsFunction_read</a></b>(int&#160;noOfCharacters)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reads
the given number of characters from the file and return a string
representation of those characters.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_readAll()">
jsFunction_readAll</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reads
all the content in the file and return a string representation of
the content.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_readLine()">
jsFunction_readLine</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reads a
line from the file and return a string representation of the
line.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_toString()">
jsFunction_toString</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_write(java.lang.Object)">
jsFunction_write</a></b>(java.lang.Object&#160;object)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Writes
the String representation of the object to the file.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsFunction_writeLine(java.lang.Object)">
jsFunction_writeLine</a></b>(java.lang.Object&#160;object)</code><br />

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Writes
the String representation of the object to the file together with a
line separator at the end.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;boolean</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsGet_exists()">
jsGet_exists</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Checks
whether this file actually exists.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsGet_lastModified()">
jsGet_lastModified</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;long</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsGet_length()">
jsGet_length</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsGet_name()">
jsGet_name</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/file/JavaScriptFileObject.html#jsGet_path()">
jsGet_path</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
</table>
&#160;<a name=
"methods_inherited_from_class_org.mozilla.javascript.ScriptableObject"
id=
"methods_inherited_from_class_org.mozilla.javascript.ScriptableObject"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Methods inherited from class
org.mozilla.javascript.ScriptableObject</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>associateValue, callMethod, callMethod, defineClass,
defineClass, defineClass, defineConst, defineConstProperty,
defineFunctionProperties, defineProperty, defineProperty,
defineProperty, defineProperty, delete, delete, deleteProperty,
deleteProperty, get, get, getAllIds, getAssociatedValue,
getAttributes, getAttributes, getAttributes, getAttributes,
getClassPrototype, getDefaultValue, getDefaultValue,
getFunctionPrototype, getGetterOrSetter, getIds,
getObjectPrototype, getParentScope, getProperty, getProperty,
getPropertyIds, getPrototype, getTopLevelScope, getTopScopeValue,
has, has, hasInstance, hasProperty, hasProperty, isConst, isSealed,
put, put, putConst, putConstProperty, putProperty, putProperty,
redefineProperty, sealObject, setAttributes, setAttributes,
setAttributes, setAttributes, setGetterOrSetter, setParentScope,
setPrototype</code></td>
</tr>
</table>
&#160;<a name="methods_inherited_from_class_java.lang.Object" id=
"methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Methods inherited from class
java.lang.Object</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>equals, getClass, hashCode, notify, notifyAll, toString,
wait, wait, wait</code></td>
</tr>
</table>
&#160;
<p><!-- ========= CONSTRUCTOR DETAIL ======== -->
 <a name="constructor_detail" id="constructor_detail">
<!-- --></a></p>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="1"><font size="+2"><b>Constructor
Detail</b></font></th>
</tr>
</table>
<a name="JavaScriptFileObject()"><!-- --></a>
<h3>JavaScriptFileObject</h3>
<pre>
public <b>JavaScriptFileObject</b>()
</pre>
<!-- ============ METHOD DETAIL ========== -->
<a name="method_detail" id="method_detail"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="1"><font size="+2"><b>Method
Detail</b></font></th>
</tr>
</table>
<a name=
"jsConstructor(org.mozilla.javascript.Context, java.lang.Object[], org.mozilla.javascript.Function, boolean)"><!-- --></a>
<h3>jsConstructor</h3>
<pre>
public static org.mozilla.javascript.Scriptable <b>jsConstructor</b>(org.mozilla.javascript.Context cx,
                                                              java.lang.Object[] args,
                                                              org.mozilla.javascript.Function ctorObj,
                                                              boolean inNewExpr)
                                                       throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="getClassName()"><!-- --></a>
<h3>getClassName</h3>
<pre>
public java.lang.String <b>getClassName</b>()
</pre>
<dl>
<dd>
<dl>
<dt><b>Specified by:</b></dt>
<dd><code>getClassName</code> in interface
<code>org.mozilla.javascript.Scriptable</code></dd>
<dt><b>Specified by:</b></dt>
<dd><code>getClassName</code> in class
<code>org.mozilla.javascript.ScriptableObject</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_openForReading()"><!-- --></a>
<h3>jsFunction_openForReading</h3>
<pre>
public void <b>jsFunction_openForReading</b>()
                               throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Open the file for reading.</p>
</dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code> - if the file is already open
for either appending or reading, if the file does not exist, if the
file cannot be opened for any other file system specific
reason.</dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_openForWriting()"><!-- --></a>
<h3>jsFunction_openForWriting</h3>
<pre>
public void <b>jsFunction_openForWriting</b>()
                               throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Open the file for writing. Using write() or writeLine() on a
file which is open for writing will write those content to the
beginning of the file overwriting the content of the file.</p>
<p>If the file does not exist, this will create the file.</p>
</dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code> - if the file is already open
for either appending or reading, if the file cannot be opened for
any other file system specific reason.</dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_openForAppending()"><!-- --></a>
<h3>jsFunction_openForAppending</h3>
<pre>
public void <b>jsFunction_openForAppending</b>()
                                 throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Open the file for appending. Using write() or writeLine() on a
file which is open for appending will write those content to the
end of the file rather than the beginning.</p>
<p>If the file does not exist, this will create the file.</p>
</dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code> - if the file is already open
for either writing or reading, if the file cannot be opened for any
other file system specific reason.</dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_write(java.lang.Object)"><!-- --></a>
<h3>jsFunction_write</h3>
<pre>
public void <b>jsFunction_write</b>(java.lang.Object object)
                      throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Writes the String representation of the object to the file.
Users are required to open the file for writing or for appending
before writing to the file.</p>
<p>If the file is not open for either reading or writing or
appending, then calling this will automatically opens the file for
writing(Overwrites the current content of the file).</p>
<pre>
    var file = new File("readme.txt");
    file.openForWriting();
    //file.openForAppending();
    file.write("Hello World!");
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Parameters:</b></dt>
<dd><code>object</code> -</dd>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_writeLine(java.lang.Object)"><!-- --></a>
<h3>jsFunction_writeLine</h3>
<pre>
public void <b>jsFunction_writeLine</b>(java.lang.Object object)
                          throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Writes the String representation of the object to the file
together with a line separator at the end. Users are required to
open the file for writing or for appending before writing to the
file.</p>
<p>If the file is not open for either reading or writing or
appending, then calling this will automatically opens the file for
writing(Overwrites the current content of the file).</p>
<pre>
    var file = new File("readme.txt");
    file.openForWriting();
    //file.openForAppending();
    file.writeLine("Hello World!");
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Parameters:</b></dt>
<dd><code>object</code> -</dd>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_read(int)"><!-- --></a>
<h3>jsFunction_read</h3>
<pre>
public java.lang.String <b>jsFunction_read</b>(int noOfCharacters)
                                 throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Reads the given number of characters from the file and return a
string representation of those characters. Users are required to
open the file for reading before reading from the file.</p>
<p>If the file is not open for either reading or writing or
appending, then calling this will automatically opens the file for
reading.</p>
<pre>
    var file = new File("readme.txt");
    file.openForReading();
    var x = file.read(5);
    print(x);
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Parameters:</b></dt>
<dd><code>noOfCharacters</code> - of characters to be read</dd>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_readLine()"><!-- --></a>
<h3>jsFunction_readLine</h3>
<pre>
public java.lang.String <b>jsFunction_readLine</b>()
                                     throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Reads a line from the file and return a string representation of
the line. Users are required to open the file for reading before
reading from the file.</p>
<p>If the file is not open for either reading or writing or
appending, then calling this will automatically opens the file for
reading.</p>
<pre>
    var file = new File("readme.txt");
    file.openForReading();
    var x = file.readLine();
    print(x);
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_readAll()"><!-- --></a>
<h3>jsFunction_readAll</h3>
<pre>
public java.lang.String <b>jsFunction_readAll</b>()
                                    throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Reads all the content in the file and return a string
representation of the content. Users are required to open the file
for reading before reading from the file.</p>
<p>If the file is not open for either reading or writing or
appending, then calling this will automatically opens the file for
reading.</p>
<pre>
    var file = new File("readme.txt");
    file.openForReading();
    var x = file.readAll();
    print(x);
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_close()"><!-- --></a>
<h3>jsFunction_close</h3>
<pre>
public void <b>jsFunction_close</b>()
                      throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Users are expected to close the file after reading, writing
&amp; appending to the file.</p>
<pre>
    var file = new File("readme.txt");
    file.openForReading();
    var x = file.readLine();
    file.close();
    file.openForAppending();
    file.write("Hello world!");
    file.close();
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_createFile()"><!-- --></a>
<h3>jsFunction_createFile</h3>
<pre>
public boolean <b>jsFunction_createFile</b>()
                              throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Creates the file if it does not exist. Also creates the parent
directories if they are not present.</p>
<pre>
    var file = new File("readme.txt");
    file.createFile();
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name=
"jsFunction_move(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)"><!-- --></a>
<h3>jsFunction_move</h3>
<pre>
public static boolean <b>jsFunction_move</b>(org.mozilla.javascript.Context cx,
                                      org.mozilla.javascript.Scriptable thisObj,
                                      java.lang.Object[] arguments,
                                      org.mozilla.javascript.Function funObj)
                               throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>Move the file to the given target file.</dd>
<dd>
<dl>
<dt><b>Parameters:</b></dt>
<dd><code>arguments</code> - {String} The destination file
name</dd>
<dt><b>Returns:</b></dt>
<dd>true if the file was successfully moved.</dd>
<dt><b>Throws:</b></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_deleteFile()"><!-- --></a>
<h3>jsFunction_deleteFile</h3>
<pre>
public boolean <b>jsFunction_deleteFile</b>()
</pre>
<dl>
<dd>Deletes this file from the file system.</dd>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>true if the file was successfully deleted.</dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsFunction_toString()"><!-- --></a>
<h3>jsFunction_toString</h3>
<pre>
public java.lang.String <b>jsFunction_toString</b>()
                                     throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_length()"><!-- --></a>
<h3>jsGet_length</h3>
<pre>
public long <b>jsGet_length</b>()
</pre>
<dl>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>the length of the file in bytes</dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_lastModified()"><!-- --></a>
<h3>jsGet_lastModified</h3>
<pre>
public java.lang.String <b>jsGet_lastModified</b>()
</pre>
<dl>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>the last modified time of this file.</dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_path()"><!-- --></a>
<h3>jsGet_path</h3>
<pre>
public java.lang.String <b>jsGet_path</b>()
</pre>
<dl>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>the path name of the file.</dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_name()"><!-- --></a>
<h3>jsGet_name</h3>
<pre>
public java.lang.String <b>jsGet_name</b>()
</pre>
<dl>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>the name of the file without the path.</dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_exists()"><!-- --></a>
<h3>jsGet_exists</h3>
<pre>
public boolean <b>jsGet_exists</b>()
</pre>
<dl>
<dd>Checks whether this file actually exists.</dd>
<dd>
<dl>
<dt><b>Returns:</b></dt>
<dd>true if the file exists.</dd>
</dl>
</dd>
</dl>
<hr />
<a name="getFile()"><!-- --></a>
<h3>getFile</h3>
<pre>
public java.io.File <b>getFile</b>()
</pre>
<dl>
<dd>To access the file from java classes</dd>
</dl>
<!-- ========= END OF CLASS DATA ========= -->
<hr />
<hr />
</body>
</html>
