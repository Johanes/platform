<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--NewPage-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="generator" content=
"HTML Tidy for Linux/x86 (vers 7 December 2008), see www.w3.org" />
<!-- Generated by javadoc (build 1.5.0_14) on Fri Feb 20 03:37:43 PST 2009 -->
<title>Email (WSO2 Mashup Server Host Objects API)</title>
<meta name="keywords" content=
"org.wso2.mashup.hostobjects.email.Email class" />
<link rel="stylesheet" type="text/css" href=
"../../../../../JavadocStyles.css" title="Style" />
<script type="text/javascript">
//<![CDATA[
function windowTitle()
{
    parent.document.title="Email (WSO2 Mashup Server Host Objects API)";
}
//]]>
</script>
</head>
<body>
<hr />
<!-- ======== START OF CLASS DATA ======== -->
<h2><font size="-1">org.wso2.mashup.hostobjects.email</font><br />
Class Email</h2>
<pre>
java.lang.Object
  <img src="../../../../../resources/inherit.gif" alt=
"extended by " />org.mozilla.javascript.ScriptableObject
      <img src="../../../../../resources/inherit.gif" alt=
"extended by " /><b>org.wso2.mashup.hostobjects.email.Email</b>
</pre>
<dl>
<dt><b>All Implemented Interfaces:</b></dt>
<dd>java.io.Serializable, org.mozilla.javascript.ConstProperties,
org.mozilla.javascript.debug.DebuggableObject,
org.mozilla.javascript.Scriptable</dd>
</dl>
<hr />
<dl>
<dd>
<pre>
public class <b>Email</b>
</pre>
<dt>extends org.mozilla.javascript.ScriptableObject</dt>
</dd>
</dl>
The Email host object allows users to send out email from their
mashups. It helps notify users of certain events and acts as a
bridge between mashups and users. Notes: The constructor of the
Emal object can be called with or without user credentials. If its
called with credentials they are used to authenticate the user. If
the function is called without credentials the details are taken
from the server.xml found under conf directory where the mashup
server is located. So if you wish to keep the credentials in
server.xml please update it with the needed usernames and
passwords. The section that corresponds to this is as follows.
<pre>
<!--Used to configure your default email account that will be used to send emails from mashups using the Email host Object-->
   &lt;EmailConfig>
       &lt;host>smtp.gmail.com&lt;/host&gt;
       &lt;port>25&lt;/port&gt;
       &lt;username>username@gmail.com&lt;/username&gt;
       &lt;password>password&lt;/password&gt;
   &lt;/EmailConfig&gt;
</pre>
<pre>
 eg:
 
     function sendEmail(){
          var email = new Email("host", "port", "username", "password");
          var file = new File("temp.txt");
          email.from = "keith@wso2.com";
          email.to = "keith@wso2.com"; // alternatively message.to can be a array of strings. Same goes for cc and bcc
          email.cc = "keith@wso2.com";
          email.bcc = "keith@wso2.com";
          email.subject = "WSO2 Mashup server 1.0 Released";
          email.addAttachement(file, "temp.txt"); // Optionally can add attachements, it has a variable number of arguments. each argument can be a File hostObject or a string representing a file.
          email.text = "WSO2 Mashup server 1.0 was Released on 28th January 2008";
          email.send();
     }
 
 
</pre>
<dl>
<dt><b>See Also:</b></dt>
<dd><a href=
"../../../../../serialized-form.html#org.wso2.mashup.hostobjects.email.Email">
Serialized Form</a></dd>
</dl>
<hr />
<p><!-- =========== FIELD SUMMARY =========== -->
 <a name="field_summary" id="field_summary"><!-- --></a></p>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Field
Summary</b></font></th>
</tr>
</table>
&#160;<a name=
"fields_inherited_from_class_org.mozilla.javascript.ScriptableObject"
id=
"fields_inherited_from_class_org.mozilla.javascript.ScriptableObject"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Fields inherited from class
org.mozilla.javascript.ScriptableObject</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>CONST, DONTENUM, EMPTY, PERMANENT, READONLY,
UNINITIALIZED_CONST</code></td>
</tr>
</table>
&#160;<a name=
"fields_inherited_from_class_org.mozilla.javascript.Scriptable" id=
"fields_inherited_from_class_org.mozilla.javascript.Scriptable">
<!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Fields inherited from interface
org.mozilla.javascript.Scriptable</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>NOT_FOUND</code></td>
</tr>
</table>
&#160; <!-- ======== CONSTRUCTOR SUMMARY ======== -->
 <a name="constructor_summary" id="constructor_summary">
<!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Constructor
Summary</b></font></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#Email()">
Email</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
</table>
&#160; <!-- ========== METHOD SUMMARY =========== -->
 <a name="method_summary" id="method_summary"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="2"><font size="+2"><b>Method
Summary</b></font></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#getClassName()">
getClassName</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Return
the name of the class.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>static&#160;org.mozilla.javascript.Scriptable</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsConstructor(org.mozilla.javascript.Context,%20java.lang.Object[],%20org.mozilla.javascript.Function,%20boolean)">
jsConstructor</a></b>(org.mozilla.javascript.Context&#160;cx,
java.lang.Object[]&#160;args,
org.mozilla.javascript.Function&#160;ctorObj,
boolean&#160;inNewExpr)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; The
Email Object has three different constructors.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>static&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsFunction_addAttachement(org.mozilla.javascript.Context,%20org.mozilla.javascript.Scriptable,%20java.lang.Object[],%20org.mozilla.javascript.Function)">
jsFunction_addAttachement</a></b>(org.mozilla.javascript.Context&#160;cx,
org.mozilla.javascript.Scriptable&#160;thisObj,
java.lang.Object[]&#160;arguments,
org.mozilla.javascript.Function&#160;funObj)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>static&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsFunction_addAttachment(org.mozilla.javascript.Context,%20org.mozilla.javascript.Scriptable,%20java.lang.Object[],%20org.mozilla.javascript.Function)">
jsFunction_addAttachment</a></b>(org.mozilla.javascript.Context&#160;cx,
org.mozilla.javascript.Scriptable&#160;thisObj,
java.lang.Object[]&#160;arguments,
org.mozilla.javascript.Function&#160;funObj)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Add
attachments to the mail been sent.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsFunction_send()">
jsFunction_send</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Send
the mail out email.send()</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String[]</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_bcc()">
jsGet_bcc</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String[]</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_cc()">
jsGet_cc</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_from()">
jsGet_from</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_html()">
jsGet_html</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_subject()">
jsGet_subject</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_text()">
jsGet_text</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;java.lang.String[]</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsGet_to()">
jsGet_to</a></b>()</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_bcc(java.lang.Object)">
jsSet_bcc</a></b>(java.lang.Object&#160;bccObject)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The bcc
address that the mail is sent to email.bcc = "keith@wso2.com"; OR
var bcc = new Array(); bcc[0] = "jonathan@wso2.com"; bcc[1] =
"keith@wso2.com"; email.bcc = bcc;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_cc(java.lang.Object)">
jsSet_cc</a></b>(java.lang.Object&#160;ccObject)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The cc
address that the mail is sent to email.cc = "keith@wso2.com"; OR
var cc = new Array(); cc[0] = "jonathan@wso2.com"; cc[1] =
"keith@wso2.com"; email.cc = cc;</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_from(java.lang.String)">
jsSet_from</a></b>(java.lang.String&#160;from)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The
from address to appear in the email email.from =
"keith@wso2.com";</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_html(java.lang.Object)">
jsSet_html</a></b>(java.lang.Object&#160;html)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The
body of the email to be sent.</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_subject(java.lang.String)">
jsSet_subject</a></b>(java.lang.String&#160;subject)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The
subject of the mail been sent email.subject = "WSO2 Mashup server
1.0 Released";</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_text(java.lang.String)">
jsSet_text</a></b>(java.lang.String&#160;text)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The
body text of the mail been sent email.text = "WSO2 Mashup server
1.0 was Released on 28th January 2008";</td>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td align="right" valign="top" width="1%"><font size=
"-1"><code>&#160;void</code></font></td>
<td><code><b><a href=
"../../../../../org/wso2/mashup/hostobjects/email/Email.html#jsSet_to(java.lang.Object)">
jsSet_to</a></b>(java.lang.Object&#160;toObject)</code><br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The to
address that the mail is sent to email.to = "keith@wso2.com"; OR
var to = new Array(); to[0] = "jonathan@wso2.com"; to[1] =
"keith@wso2.com"; email.to = to;</td>
</tr>
</table>
&#160;<a name=
"methods_inherited_from_class_org.mozilla.javascript.ScriptableObject"
id=
"methods_inherited_from_class_org.mozilla.javascript.ScriptableObject"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Methods inherited from class
org.mozilla.javascript.ScriptableObject</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>associateValue, callMethod, callMethod, defineClass,
defineClass, defineClass, defineConst, defineConstProperty,
defineFunctionProperties, defineProperty, defineProperty,
defineProperty, defineProperty, delete, delete, deleteProperty,
deleteProperty, get, get, getAllIds, getAssociatedValue,
getAttributes, getAttributes, getAttributes, getAttributes,
getClassPrototype, getDefaultValue, getDefaultValue,
getFunctionPrototype, getGetterOrSetter, getIds,
getObjectPrototype, getParentScope, getProperty, getProperty,
getPropertyIds, getPrototype, getTopLevelScope, getTopScopeValue,
has, has, hasInstance, hasProperty, hasProperty, isConst, isSealed,
put, put, putConst, putConstProperty, putProperty, putProperty,
redefineProperty, sealObject, setAttributes, setAttributes,
setAttributes, setAttributes, setGetterOrSetter, setParentScope,
setPrototype</code></td>
</tr>
</table>
&#160;<a name="methods_inherited_from_class_java.lang.Object" id=
"methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#EEEEFF" class="TableSubHeadingColor">
<th align="left"><b>Methods inherited from class
java.lang.Object</b></th>
</tr>
<tr bgcolor="white" class="TableRowColor">
<td><code>equals, getClass, hashCode, notify, notifyAll, toString,
wait, wait, wait</code></td>
</tr>
</table>
&#160;
<p><!-- ========= CONSTRUCTOR DETAIL ======== -->
 <a name="constructor_detail" id="constructor_detail">
<!-- --></a></p>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="1"><font size="+2"><b>Constructor
Detail</b></font></th>
</tr>
</table>
<a name="Email()"><!-- --></a>
<h3>Email</h3>
<pre>
public <b>Email</b>()
</pre>
<!-- ============ METHOD DETAIL ========== -->
<a name="method_detail" id="method_detail"><!-- --></a>
<table border="1" width="100%" cellpadding="3" cellspacing="0"
summary="">
<tr bgcolor="#CCCCFF" class="TableHeadingColor">
<th align="left" colspan="1"><font size="+2"><b>Method
Detail</b></font></th>
</tr>
</table>
<a name="getClassName()"><!-- --></a>
<h3>getClassName</h3>
<pre>
public java.lang.String <b>getClassName</b>()
</pre>
<dl>
<dd>Return the name of the class. This is typically the same name
as the constructor. Classes extending ScriptableObject must
implement this abstract method.</dd>
<dd>
<dl>
<dt><b>Specified by:</b></dt>
<dd><code>getClassName</code> in interface
<code>org.mozilla.javascript.Scriptable</code></dd>
<dt><b>Specified by:</b></dt>
<dd><code>getClassName</code> in class
<code>org.mozilla.javascript.ScriptableObject</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name=
"jsConstructor(org.mozilla.javascript.Context, java.lang.Object[], org.mozilla.javascript.Function, boolean)"><!-- --></a>
<h3>jsConstructor</h3>
<pre>
public static org.mozilla.javascript.Scriptable <b>jsConstructor</b>(org.mozilla.javascript.Context cx,
                                                              java.lang.Object[] args,
                                                              org.mozilla.javascript.Function ctorObj,
                                                              boolean inNewExpr)
                                                       throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The Email Object has three different constructors. Choose one
depending on your configuration and your needs. 1. The first
constructor takes no parameters and uses configuration information
specified in the server.xml. Using a configuration such as this is
useful if you want to use a default email account to send out mail
from your mashups. It also reduces the hassle of having to key in
the configuration details each time you need a new email object.
var email = new Email(); 2. The second constructor, unlike the
first, requires the user to provide the configuration details each
time he creates a new email object. The benefit is that no server
configuration is needed and you can use diffent accounts when ever
you need. The configuration details should be given as follows: var
email = new Email("smtp.gmail.com", "25", "username@gmail.com",
"password"); // host, port, username, password 3. The third is a
slight variant of the second. It does not require a port to be
specified: var email = new Email("smtp.gmail.com",
"username@gmail.com", "password"); // host, username, password</p>
</dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_from(java.lang.String)"><!-- --></a>
<h3>jsSet_from</h3>
<pre>
public void <b>jsSet_from</b>(java.lang.String from)
                throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The from address to appear in the email</p>
<pre>
 email.from = "keith@wso2.com";
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_from()"><!-- --></a>
<h3>jsGet_from</h3>
<pre>
public java.lang.String <b>jsGet_from</b>()
                            throws javax.mail.MessagingException
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>javax.mail.MessagingException</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_to()"><!-- --></a>
<h3>jsGet_to</h3>
<pre>
public java.lang.String[] <b>jsGet_to</b>()
                            throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_to(java.lang.Object)"><!-- --></a>
<h3>jsSet_to</h3>
<pre>
public void <b>jsSet_to</b>(java.lang.Object toObject)
              throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The to address that the mail is sent to</p>
<pre>
 email.to = "keith@wso2.com";

 OR

 var to = new Array();
 to[0] = "jonathan@wso2.com";
 to[1] =  "keith@wso2.com";
 email.to = to;
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_cc()"><!-- --></a>
<h3>jsGet_cc</h3>
<pre>
public java.lang.String[] <b>jsGet_cc</b>()
                            throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_cc(java.lang.Object)"><!-- --></a>
<h3>jsSet_cc</h3>
<pre>
public void <b>jsSet_cc</b>(java.lang.Object ccObject)
              throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The cc address that the mail is sent to</p>
<pre>
 email.cc = "keith@wso2.com";

 OR

 var cc = new Array();
 cc[0] = "jonathan@wso2.com";
 cc[1] =  "keith@wso2.com";
 email.cc = cc;
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_bcc()"><!-- --></a>
<h3>jsGet_bcc</h3>
<pre>
public java.lang.String[] <b>jsGet_bcc</b>()
                             throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_bcc(java.lang.Object)"><!-- --></a>
<h3>jsSet_bcc</h3>
<pre>
public void <b>jsSet_bcc</b>(java.lang.Object bccObject)
               throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The bcc address that the mail is sent to</p>
<pre>
 email.bcc = "keith@wso2.com";

 OR

 var bcc = new Array();
 bcc[0] = "jonathan@wso2.com";
 bcc[1] =  "keith@wso2.com";
 email.bcc = bcc;
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_subject(java.lang.String)"><!-- --></a>
<h3>jsSet_subject</h3>
<pre>
public void <b>jsSet_subject</b>(java.lang.String subject)
                   throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The subject of the mail been sent</p>
<pre>
 email.subject = "WSO2 Mashup server 1.0 Released";
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_subject()"><!-- --></a>
<h3>jsGet_subject</h3>
<pre>
public java.lang.String <b>jsGet_subject</b>()
                               throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsSet_text(java.lang.String)"><!-- --></a>
<h3>jsSet_text</h3>
<pre>
public void <b>jsSet_text</b>(java.lang.String text)
                throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The body text of the mail been sent</p>
<pre>
 email.text = "WSO2 Mashup server 1.0 was Released on 28th January 2008";
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_text()"><!-- --></a>
<h3>jsGet_text</h3>
<pre>
public java.lang.String <b>jsGet_text</b>()
</pre>
<hr />
<a name="jsSet_html(java.lang.Object)"><!-- --></a>
<h3>jsSet_html</h3>
<pre>
public void <b>jsSet_html</b>(java.lang.Object html)
                throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>The body of the email to be sent. This function can be used to
send HTML mail.</p>
<pre>
 email.html = "
</pre>
<h1>WSO2 Mashup server 1.0 was Released on 28th January 2008</h1>
<pre>
";  // Setthing the HTML content as a String
                                                   OR
 email.html = 
</pre>
<h1>WSO2 Mashup server 1.0 was Released on 28th January 2008</h1>
<pre>
;     // Setting the HTML content as an XML object
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name="jsGet_html()"><!-- --></a>
<h3>jsGet_html</h3>
<pre>
public java.lang.String <b>jsGet_html</b>()
</pre>
<hr />
<a name="jsFunction_send()"><!-- --></a>
<h3>jsFunction_send</h3>
<pre>
public void <b>jsFunction_send</b>()
                     throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Send the mail out</p>
<pre>
 email.send()
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name=
"jsFunction_addAttachement(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)"><!-- --></a>
<h3>jsFunction_addAttachement</h3>
<pre>
public static void <b>jsFunction_addAttachement</b>(org.mozilla.javascript.Context cx,
                                             org.mozilla.javascript.Scriptable thisObj,
                                             java.lang.Object[] arguments,
                                             org.mozilla.javascript.Function funObj)
                                      throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<hr />
<a name=
"jsFunction_addAttachment(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)"><!-- --></a>
<h3>jsFunction_addAttachment</h3>
<pre>
public static void <b>jsFunction_addAttachment</b>(org.mozilla.javascript.Context cx,
                                            org.mozilla.javascript.Scriptable thisObj,
                                            java.lang.Object[] arguments,
                                            org.mozilla.javascript.Function funObj)
                                     throws org.wso2.mashup.MashupFault
</pre>
<dl>
<dd>
<p>Add attachments to the mail been sent. This function has a
variable number of arguments, each argument can be a File
hostObject or a string representing a file.</p>
<pre>
 var file = new File("temp.txt"); // A file exists at temp.txt
 email.addAttachement(file, "temp.txt");
 
</pre></dd>
<dd>
<dl>
<dt><b>Throws:</b></dt>
<dd><code>org.wso2.mashup.MashupFault</code></dd>
</dl>
</dd>
</dl>
<!-- ========= END OF CLASS DATA ========= -->
<hr />
<hr />
</body>
</html>
