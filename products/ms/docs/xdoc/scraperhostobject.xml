<!--
~ Copyright 2005-2008 WSO2, Inc. (http://wso2.com)
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link href="css/mashup-docs.css" rel="stylesheet" type="text/css" media="all"/>
        <link type="text/css" rel="stylesheet" href="css/SyntaxHighlighter.css" media="all"/>
        <script language="javascript" src="js/shCore.js"></script>
        <script language="javascript" src="js/shBrushJScript.js"></script>
        <script language="javascript" src="js/shBrushJava.js"></script>
        <script language="javascript" src="js/shBrushSql.js"></script>
        <script language="javascript" src="js/shBrushXml.js"></script>
    </head>
    <body>
        <div id="main-content">
            <h1>Scraper Host Object</h1>

            <h2>1.0 Introduction</h2>

            <p>The Scraper object allows data to be extracted from HTML pages and
                presented in XML format. It provides a bridge to data sources
                that don't have XML or Web service representations at present.
            </p>

            <h3>1.1 Example</h3>

            <pre name="code" class="js">
                var config = &lt;config&gt;
                                &lt;var-def name='response'&gt;
                                    &lt;html-to-xml&gt;
                                        &lt;http method='get' url='http://ww2.wso2.org/~builder/'/&gt;
                                    &lt;/html-to-xml&gt;
                                &lt;/var-def&gt;
                             &lt;/config&gt;;
                
                var scraper = new Scraper(config);
                result = scraper.response;
            </pre>

            <h2>2.0 Scraper Object</h2>

            <p>The Scraper Object takes a set
                of scraping instructions in an XML language in its contructor. The scraping
                component wraps<a href="http://web-harvest.sourceforge.net/index.php">WebHarvest</a>.
            </p>

            <p>Note that there are a few caveats when using the screen scraping
                language from within the Scraper object and within E4X, as listed below:
            </p>
            <ol>
                <li>The result of the scrape must be saved in a variable:
                    <pre name="code" class="js">
                        var config = &lt;config&gt;
                                        &lt;var-def name='response'&gt;
                                            &lt;html-to-xml&gt;
                                                &lt;http method='get' url='http://ww2.wso2.org/~builder/'/&gt;
                                            &lt;/html-to-xml&gt;
                                        &lt;/var-def&gt;
                                     &lt;/config&gt;;
                    </pre>


                    The contents of the variable appear as a property on the Scraper object.
                </li>
                <li>The result comes back as a string at present.
                    When the result represents XML, not only do you have to parse it into
                    XML yourself, but you have to make sure you remove the XML declaration.
                    The XML constructor does not parse documents, but only node lists, and
                    rejects the declaration as an illegal processing instruction:
                    <pre name="code" class="js">
                        var scraper = new Scraper(config);
                        var result = scraper.response;

                        // strip off the XML declaration and parse as XML.
                        var resultXML = new XML(result.substring(result.indexOf('?&gt;') + 2));
                        return resultXML;
                    </pre>
                </li>
                <li>The WebHarvest language &lt;template&gt;
                    instruction allows variables to be referenced, using the notation
                    ${variable-name}. The curly brackets conflict with the use of XML
                    literals in E4X, where they cause evaluation of the enclosed data. To
                    escape the curly brackets in E4X (so they will be interpreted by
                    WebHarvest), use the character entity references
                    <b>&amp;#x7B;</b>
                    and
                    <b>&amp;#x7D;</b>
                    for '{' and '}' respectively.
                    <br/>
                </li>
            </ol>

            <h3>3.0 API Documentation</h3>

            <table class="MsoTableGrid" style="margin-left: 0.5in; border-collapse: collapse;" border="1"
                   cellpadding="5" cellspacing="0">
                <tbody>
                    <tr>
                        <td>Member</td>
                        <td>Description</td>
                        <td>Supported in version</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Constructor Scraper(XML config);</b>
                            <br/>
                        </td>
                        <td>The WebHarvest config object (as E4X XML) that defines the scrape. The scrape will be
                            executed immediately, and the results will be
                            exposed as properties on the Scraper object.
                            <br/>
                        </td>
                        <td>0.1</td>
                    </tr>
                    <tr>
                        <td>
                            <b>readonly property String
                                <i>var-name</i>
                            </b>
                            <br/>
                        </td>
                        <td>After the scrape completes, each result variable defined in the config definition (using
                            &lt;var-def name="<i>var-name</i>"&lt;) will
                            appear as a property on the Scraper object.
                            <br/>
                        </td>
                        <td>0.1</td>
                    </tr>
                </tbody>
            </table>

            <h2>4.0 References</h2>

            <ul>
                <li>
                    <a href="http://web-harvest.sourceforge.net/index.php">WebHarvest</a>
                </li>
                <li>
                    <a href="http://web-harvest.sourceforge.net/manual.php">WebHarvest User Manual</a>
                </li>
                <li>
                    <a href="apidocs/org/wso2/mashup/hostobjects/scraper/ScraperHostObject.html">JavaDoc for
                        the scraper host Object
                    </a>
                </li>
            </ul>
        </div>
        <script language="javascript">
            dp.SyntaxHighlighter.BloggerMode();
            dp.SyntaxHighlighter.HighlightAll('code');
        </script>
    </body>
</html>
