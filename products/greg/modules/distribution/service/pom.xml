<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.wso2.governance</groupId>
    	<artifactId>governance-distribution-parent</artifactId>
        <version>4.0.0-SNAPSHOT</version>
	<relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>wso2stratos-governance</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>WSO2 Stratos - Cloud Governance Distribution</name>
    <url>http://wso2.com/products/governance-registry</url>
    <description>WSO2 Cloud Governance Distribution</description>

    <dependencies>
        <dependency>
            <groupId>org.wso2.carbon</groupId>
            <artifactId>wso2carbon-core</artifactId>
            <version>${carbon.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon</groupId>
            <artifactId>org.wso2.carbon.thread</artifactId>
            <version>${carbon.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.rampart</groupId>
            <artifactId>rampart</artifactId>
            <version>${rampart.mar.version}</version>
            <type>mar</type>
        </dependency>

        <!--this dependency is needed for remote registry client-->
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>wstx-asl</artifactId>
            <version>3.2.4</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <scm>
        <connection>scm:svn:http://svn.wso2.org/repos/wso2/trunk/carbon/products/greg</connection>
        <developerConnection>scm:svn:https://svn.wso2.org/repos/wso2/trunk/carbon/products/greg
        </developerConnection>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.0-alpha-4</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>unpack-wso2carbon</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.wso2.carbon</groupId>
                                    <artifactId>wso2carbon-core</artifactId>
                                    <version>${carbon.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>target</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
		<dependencies>
		    <dependency>
			<groupId>ant-contrib</groupId>
			<artifactId>ant-contrib</artifactId>
			<version>1.0b3</version>
			<exclusions>
				<exclusion>
					<groupId>ant</groupId>
					<artifactId>ant</artifactId>
				</exclusion>
			</exclusions>
		    </dependency>
		</dependencies>
                <executions>
                    <execution>
                        <id>extract-docs-from-components</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <property name="tempdir" value="target/docs-temp"/>
                                <mkdir dir="${tempdir}"/>
                                <unzip dest="${tempdir}">
                                    <fileset dir="target">
                                        <include name="${project.artifactId}-${project.version}.zip"/>
                                    </fileset>
                                </unzip>
                                <copy todir="target/wso2carbon-core-${carbon.version}/repository/components/"
                                      overwrite="false">
                                    <fileset
                                            dir="${tempdir}/${project.artifactId}-${project.version}/repository/components/">
                                    </fileset>
                                </copy>
                                <delete file="target/${project.artifactId}-${project.version}.zip"/>
                                <!-- Sign all the jars in the distribution -->
				<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
				<if>
				<equals arg1="${profile}" arg2="signJar"/>
				<then>
                                <signjar alias="wso2carbon"
                                         keystore="target/wso2carbon-core-${carbon.version}/repository/resources/security/wso2carbon.jks"
                                         storepass="wso2carbon" lazy="true">
                                    <fileset
                                            dir="target/wso2carbon-core-${carbon.version}/repository/components/plugins"
                                            includes="**/*.jar"/>
                                    <fileset
                                            dir="target/wso2carbon-core-${carbon.version}/lib"
                                            includes="**/*.jar"/>
                                    <!--fileset
                                            dir="target/wso2carbon-core-${carbon.version}/lib/api"
                                            includes="**/*.jar"/-->
                                    <fileset
                                            dir="target/wso2carbon-core-${carbon.version}/bin"
                                            includes="**/*.jar"/>
                                    <fileset
                                            dir="target/wso2carbon-core-${carbon.version}/lib/xboot"
                                            includes="**/*.jar"/>
                                    <fileset
                                            dir="target/wso2carbon-core-${carbon.version}/lib/endorsed"
                                            includes="**/*.jar"/>
                                    <!--fileset
                                            dir="target/wso2carbon-core-${carbon.version}/lib/core/WEB-INF/lib"
                                            includes="**/*.jar"/-->
                                </signjar>
				</then>
				</if>
                                <delete dir="${tempdir}"/>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cleanup</id>
                        <phase>install</phase>
                        <configuration>
                            <tasks>
                                <delete dir="target/archive-tmp"/>
                                <delete dir="target/dependency-maven-plugin-markers"/>
                                <delete dir="target/maven-archiver"/>
                                <delete dir="target/wso2carbon-core-${carbon.version}"/>
                                <!--delete dir="target/org.wso2.carbon.registry.core-${carbon.version}-docs"/>
                                <delete dir="target/org.wso2.carbon.governance.api-${carbon.version}-docs"/-->
                                <delete file="target/${project.artifactId}-${pom.dversion}.jar"/>
                                <delete dir="target/sources"/>
                                <delete dir="target/site"/>
                                <delete dir="target/classes"/>
                                <delete dir="src/site"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
                <artifactId>maven-svn-revision-number-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <reportMixedRevisions>false</reportMixedRevisions>
                    <reportStatus>false</reportStatus>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0-rc-5</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                import java.io.File
                                import java.io.FileInputStream
                                import java.io.FileOutputStream
                                import java.util.Properties

                                if (project.properties['build.qa'] != null) {
                                def propFilePath
                                if (project.properties['buildNumber.file.path'] == null) {
                                propFilePath = new String(project.properties['local.home'])
                                propFilePath = propFilePath.substring(0,
                                propFilePath.lastIndexOf(File.separator))
                                propFilePath += File.separator +
                                "carbon-platform-build-versions.xml"
                                } else {
                                propFilePath = new
                                String(project.properties['buildNumber.file.path'])
                                }
                                def propFile = new File(propFilePath)
                                def props = new Properties()
                                if (propFile.exists()) {
                                props.loadFromXML(new FileInputStream(propFile))
                                } else if (!propFile.getParentFile().exists()) {
                                propFile.getParentFile().mkdirs()
                                }
                                def buildNumberStr = props.getProperty("greg.buildNumber")
                                def buildNumber = (buildNumberStr != null) ?
                                Integer.parseInt(buildNumberStr) + 1: 1
                                buildNumberStr = Integer.toString(buildNumber)
                                props.setProperty("greg.buildNumber", buildNumberStr)
                                props.storeToXML(new FileOutputStream(propFile), null)
                                def revision = new
                                String(project.properties['workingCopyDirectory.revision'])
                                def parentVersion = (new
                                String(project.properties['product.version'])).replace("-SNAPSHOT",
                                "")
                                project.properties['release.version'] = parentVersion + "-b" +
                                String.format("%05d", buildNumber) + "-" + revision.substring(1)
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.0-beta-3</version>
                <configuration>
                    <buildNumberPropertyName>copyright.year</buildNumberPropertyName>
                    <format>{0, date, yyyy}</format>
                    <timestampFormat>{0, date, dd MMMM yyyy}</timestampFormat>
                    <items>
                        <item>timestamp</item>
                    </items>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre_dist</id>
                        <phase>test</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dist</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/bin.xml</descriptor>
                                <!--descriptor>src/main/assembly/src.xml</descriptor-->
                                <!--descriptor>src/main/assembly/docs.xml</descriptor-->
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>install-binary</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <packaging>zip</packaging>
                            <file>target/${project.artifactId}-${project.version}.zip</file>
                            <pomFile>pom.xml</pomFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <!--                           	<report>dependencies</report>-->
                            <report>dependency-convergence</report>
                            <report>mailing-list</report>
                            <!--report>issue-tracking</report-->
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <pluginRepositories>
        <pluginRepository>
            <id>wso2-maven2-repository</id>
            <url>http://dist.wso2.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven-svn-revision-number-plugin-repo</id>
            <url>http://oss.sonatype.org/content/repositories/googlecode-releases</url>
        </pluginRepository>
        <pluginRepository>
            <id>codehaus</id>
            <name>Codehaus Repository</name>
            <url>http://repository.codehaus.org</url>
        </pluginRepository>
    </pluginRepositories>
    <profiles>
        <profile>
            <id>qa-build</id>
            <activation>
                <property>
                    <name>build.qa</name>
                </property>
            </activation>
            <!-- For a QA build, build with the option -Dbuild.qa which will set these properties
   The build.version property will be generated by the gmaven-plugin -->
            <properties>
                <local.home>${settings.localRepository}</local.home>
                <!--buildNumber.file.path>/home/user/carbon-platform-build-versions.xml</buildNumber.file.path-->
                <build.version>${release.version}</build.version>
                <product.version>${project.parent.version}</product.version>
            </properties>
        </profile>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <build.version>${project.parent.version}</build.version>
                <product.version>${project.parent.version}</product.version>
            </properties>
        </profile>
    </profiles>
</project>


