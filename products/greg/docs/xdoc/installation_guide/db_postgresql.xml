<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ~  Copyright (c) 2005-2008, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~  WSO2 Inc. licenses this file to you under the Apache License,
  ~  Version 2.0 (the "License"); you may not use this file except
  ~  in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  ~
  -->

<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.1//EN"
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" >

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
    <title>
      WSO2 Governance Registry - Setting up Database - PostgreSQL
    </title>
    <link href="../css/greg-docs.css" rel="stylesheet"/>
    <link href="../styles/dist-docs.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body xml:lang="en">
[ <a href="../docs_index.html"> Documentation Index </a> ]
<h1>WSO2 Governance Registry - Setting up Database - PostgreSQL</h1>

<h2>Table of Contents</h2>

<ul>
<li>
<a href="#prepare">Setup Database And The Login Role</a>
</li>
<li>
<a href="#conf">Setup Configuration Files</a>
</li>
<li>
<a href="#drivers">Setup Drivers</a>
</li>
<li>
<a href="#createdb">Create Database</a>

<ul>
<li>
<a href="#autodb">Automatic Database Tables Creation</a>
</li>
<!--<li>
<a href="#manualdb">Manual Database Tables Creation</a>
</li>-->
</ul>
</li>
</ul>



<h2 id="prepare">Setup Database And The Login Role</h2>
<ol>
<li>
Download and install PostgreSQL in you computer, if it is not already done.
And Start the PostgreSQL service.</li>
    <li>
        <p>You can create database and the login role from a GUI using the
            <a href="http://www.pgadmin.org/download/">PGAdminIII</a> tool.  </p>
    </li>
    <li>
        <p>To connect PGAdminIII to a PostgreSQL database server, locate the server from the object browser,
            right client and click connect. This will show you the databases, tablespaces, login roles.</p>
    </li>
    <li>
        <p>To create a database right click the 'Databases' entry in the tree (inside the object browser)
            and click 'New database'.From the "New Database" dialog box give a name to the database
            (say "gregdb") and click 'OK' button.</p>
    </li>
    <li>
        <p>To create a login role, you need to right click the 'Login Roles' entry in the tree (inside the
            object browser) and click 'New Login Role'. Give a name for the role name and password.
            These values will be used in the Governance Registry configurations as described in the
            following sections. (In the configuration we are using 'gregadmin' as the role name and
            'greadmin' as the password). You can provide the other policies like the expiration time for the login,
            connection limit which are optional. Then click the 'OK' button to finish creating the
        login role.</p>
    </li>
</ol>
<h2 id="conf">Setup Configuration Files</h2>
<ol>
<li>
<p>
Edit the registry.xml file (inside the $GREG_HOME/repository/conf directory) of the deployed registry instance as below. (note the highlighted configurations, You
    may use your own database name, username and password).
</p>
<pre>
    &lt;currentDBConfig&gt;postgresql-db&lt;/currentDBConfig&gt;
    &lt;dbConfig name="postgresql-db"&gt;
        &lt;url&gt;<strong>jdbc:postgresql://localhost:5432/gregdb</strong>&lt;/url&gt;
        &lt;userName&gt;<strong>gregadmin</strong>&lt;/userName&gt;
        &lt;password&gt;<strong>gregadmin</strong>&lt;/password&gt;
        &lt;driverName&gt;<strong>org.postgresql.Driver</strong>&lt;/driverName&gt;
        &lt;maxActive&gt;<strong>80</strong>&lt;/maxActive&gt;
        &lt;maxWait&gt;<strong>60000</strong>&lt;/maxWait&gt;
        &lt;minIdle&gt;<strong>5</strong>&lt;/minIdle&gt;
    &lt;/dbConfig&gt;
</pre>
<p>
Explanation of the database configuration options.
</p>
<ul>
<li>
url: The URL of the database</li>
<li>
userName: The name of the database user</li>
<li>
password: The password of the database user</li>
<li>
driverName: The class name of the database driver</li>
<li>
maxActive: The maximum number of active connections that can be allocated from this pool at the same time, or negative for no limit. 
</li>
<li>
maxWait: The maximum number of milliseconds that the pool will wait (when there 
    are no available connections) for a connection to be returned before throwing an 
    exception, or &lt;= 0 to wait indefinitely. </li>
<li>
minIdle: The minimum number of active connections that can remain idle in the 
    pool, without extra ones being created, or 0 to create none. </li>
</ul>
</li>
  <li>
    <p>
      Edit the user-mgt.xml file (inside the $GREG_HOME/repository/conf directory) of the deployed instance as below. (note the highlighted configurations, You
    may use your own database name, username and password).
    </p>
<pre>
    &lt;Configuration&gt;
        ...
        &lt;Property name="url"&gt;<strong>jdbc:postgresql://localhost:5432/gregdb</strong>&lt;/Property&gt;
        &lt;Property name="userName"&gt;<strong>gregadmin</strong>&lt;/Property&gt;
        &lt;Property name="password"&gt;<strong>gregadmin</strong>&lt;/Property&gt;
        &lt;Property name="driverName"&gt;<strong>org.postgresql.Driver</strong>&lt;/Property&gt;
        &lt;Property name="maxActive"&gt;<strong>50</strong>&lt;/Property&gt;
        &lt;Property name="maxWait"&gt;<strong>60000</strong>&lt;/Property&gt;
        &lt;Property name="minIdle"&gt;<strong>5</strong>&lt;/Property&gt;
    &lt;/Configuration&gt;
</pre>
  </li>
</ol>

<h2 id="drivers">Setup Drivers</h2>
<ol> 

    <li>
        <p>Download the PostgreSQL jdbc4 driver from
        <a href="http://jdbc.postgresql.org/download.html">
        http://jdbc.postgresql.org/download.html</a> (Note that you have to download the JDBC4 driver) and
Place it in the $GREG_HOME/repository/components/lib directory (Here $GREG_HOME refers to the directory where you run the WSO2 Governance Registry instance).</p>
<p>
<b>Note: </b>Remove old database driver from $GREG_HOME/repository/components/dropins ,when you upgrade the database driver.
</p>
</li>
</ol>

<h2 id="createdb">Create Database</h2>
<h3 id="autodb">Automatic Database table Creation</h3>
<ol>
  <li>
    <p>
      Next at the first time you start the registry, run with the -Dsetup option, so
      it will create all the tables in given PostgreSQL database.
    </p>

    <p>
      wso2server.sh -Dsetup
     </p>
    <p>
     wso2server.bat -Dsetup
     </p>
  </li>
<li>
You just configured WSO2 Governance Registry to run with PostgreSQL database.
</li>
</ol>
<!--  
<h3 id="manualdb">Manual Database Tables Creation</h3>

<ol>
    <li>
        <p>
            You can create the database tables manually using the PGAdminIII tool.
        </p>
    </li>
    <li>
        <p>
            Right click the database you have created for the Governance Registry and select
            'CREATE Script'. This will open the PGAdminIII query tool.
        </p>
    </li>
    <li>
        <p>
            From the menu bar at the top, click 'File'-&gt; 'Open' and select the sql script
            inside the GREG_HOME/dbscripts/postgres.sql. Then click 'Query'-&gt; 'Execute pgScript'.
         </p>
     </li>

    <li>
        <p>start the wso2 registry instance.</p>
        <p>
            wso2server.sh
        </p>
        <p>
          wso2server.bat
        </p>

        </li>
</ol>
-->
</body>
</html>
