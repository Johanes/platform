<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ~  Copyright (c) 2005-2008, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~  WSO2 Inc. licenses this file to you under the Apache License,
  ~  Version 2.0 (the "License"); you may not use this file except
  ~  in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  ~
  -->

<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.1//EN"
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" >

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title> WSO2 Governance Registry - User Guide </title>
<link href="../css/greg-docs.css" rel="stylesheet"/>
<link href="../styles/dist-docs.css" rel="stylesheet" type="text/css" media="all"/>
</head>
<body>
[ <a href="../docs_index.html"> Documentation Index </a> ]
<h1> WSO2 Governance Registry - User Guide </h1>

<h2 id="Search">Search</h2>
<p>
The Governance Registry basically provides the search functionality in three modes.
<ul>
<li>
Tag Search - Basic Search
</li>
<li>
Metadata Search - Advanced Search
</li>
<li>
Content Search
</li>
</ul>
</p>
<h3 id="Tag_Search">Tag Search</h3>
<p> Users can perform a "tag" search using the search block within the registry browser. Note
that this will only show the resources that contain the tag you are searching. In order
to do a more customized search you have to use the Advanced Search described below.
</p>

<p><img src="../images/search-widget.png" width="279px"/></p>
<p> Figure 1 : Search </p>

<h3 id="Advanced_Search"> Metadata Search (Advanced Search) </h3>
<p>In the navigator, under Resources, click <strong>Search > Metadata</strong>.</p>
<p> All resources found in the registry, can be searched through this interface. Search could be refined by optionally providing, resource name, created date range, updated date range, tags, comments, property name, property value and the  content.</p>
<p><img src="../images/search.png" width="743px"/></p>
<p>Figure 2 : Advanced Search user interface</p>

<p>Created or Updated dates can be either entered in the format of MM/DD/YYYY or used the date picker user interface provided.</p>
<p><img src="../images/date.png" width="743px"/></p>
<p>Figure 3 : Date picker user interface</p>

<h3 id="Custom_Search">Custom Search</h3>

<p>Custom Search provides the user with the ability to customize the search interface for a given media type.
The search parameters for a given media type is configured by a user with admin privileges by creating a resource
with the name of the media type and declaring the parameters as properties. The search parameter name is given as the
property name and the property value describes whether this parameter should be included in the custom search.</p>

<p><img src="../images/custom_search_config.png" width="743px"/></p>
<p>Figure 4: Custom Search configuration </p>

<p>The advanced search contains a field where the user can specify a media type. Upon selecting a media type,
    custom search form for that media type will be automatically loaded.
</p>

<p><img src="../images/custom_search.png" width="743px"/></p>

<p>Figure 5: Custom Search user interface </p>

<h3 id="Search_Filters">Search Filters</h3>

<p>Search Filters provide the ability to save a metadata search persistently. Search filters can be saved and loaded using the user interfaces provided in the metadata search page.</p>


<p><strong>Saving a Search Filter</strong></p>
    <p>
        Search criteria can be saved as a search filter for later use using the interface shown in Figure 6.
    </p>

    <p><img src="../images/save_filter.png" width="743px"/></p>

    <p>Figure 6: Save search filter user interface</p>


<p><strong>Loading a Search Filter</strong></p>

    <p>A saved search filter can be loaded by selecting the filter name in the drop-down list shown
    in Figure 7. Upon loading a search filter, search form fields are populated with previously saved values.
    </p>

    <p><img src="../images/load_filter.png" width="743px"/></p>

    <p>Figure 7: Save search filter user interface</p>

<h3 id="Content_Search">Content Search</h3>
<p> In the navigator, under Resources, click <strong>Search > Content </strong></p>
<p> Resources found in the registry can be searched by content through this interface. Text 
appearing in the resource content can be used to find the resource using this feature. 
</p>
<p><img src="../images/content_search.png" width="743px"/></p>
<p>Figure 4 : Content Search user interface </p>
<p>
    Simply enter the text you are looking for and click <b>Search</b>; resources that contain the 
    text you entered will be listed as search results.
</p>
<p>
    Words entered by the user will be matched as whole words in the resource content. Resources 
    that have one or more words entered under <b>Search For</b> above will appear in search results. 
    WSO2 Governance Registry currently supports searching inside resources containing plain text, 
    XML content (including WSDLs, Schemas, Policies, etc.), PDF files, Word documents, 
    Excel documents and Power Point documents. Additional indexers for other media types could be 
    added with registry.xml configuration shown below.
</p>
<p>
    Newly added resources have to be indexed before they appear in Content Search results. This 
    automatic indexing process happens in the background and therefore newly added resources might 
    not be immediately available for Content Search. Indexing frequency and initial startup delay 
    for indexing can be configured in &lt;indexingConfiguration&gt; element in registry.xml as 
    shown below.
</p>
<p>
    <pre>
    &lt;indexingConfiguration&gt;
        &lt;startingDelayInSeconds&gt;60&lt;/startingDelayInSeconds&gt;
        &lt;indexingFrequencyInSeconds&gt;15&lt;/indexingFrequencyInSeconds&gt;
        &lt;lastAccessTimeLocation&gt;/_system/local/repository/components/org.wso2.carbon.registry/indexing/lastaccesstime&lt;/lastAccessTimeLocation&gt;
        &lt;indexers&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.MSExcelIndexer&quot; mediaTypeRegEx=&quot;application/vnd.ms-excel&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.MSPowerpointIndexer&quot; mediaTypeRegEx=&quot;application/vnd.ms-powerpoint&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.MSWordIndexer&quot; mediaTypeRegEx=&quot;application/msword&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.PDFIndexer&quot; mediaTypeRegEx=&quot;application/pdf&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.XMLIndexer&quot; mediaTypeRegEx=&quot;application/xml&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.XMLIndexer&quot; mediaTypeRegEx=&quot;application/(.)+\+xml&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer&quot; mediaTypeRegEx=&quot;text/(.)+&quot;/&gt;
            &lt;indexer class=&quot;org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer&quot; mediaTypeRegEx=&quot;application/x-javascript&quot;/&gt;
        &lt;/indexers&gt;
    &lt;/indexingConfiguration&gt;
    </pre>
</p>
</body>

</html>
