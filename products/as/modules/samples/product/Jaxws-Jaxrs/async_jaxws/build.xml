<!--
  ~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project default="build-all">

    <property name="wso2appserver.home" value="../../../"/>
    <property name="repo.location" value="${wso2appserver.home}/repository/deployment/server"/>
    <property name="warName" value="async_jaxws.war"/>
    <property name="build.dir" value="build"/>
    <property name="classes" value="${build.dir}/classes"/>
    <property name="genCode" value="${build.dir}/generated-sources"/>
    <property name="lib" value="${build.dir}/lib"/>
    <property name="webapps" value="${build.dir}/webapps"/>

    <path id="compile.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="cxf.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="init" depends="clean">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${genCode}"/>
        <mkdir dir="${webapps}"/>
        <mkdir dir="${lib}"/>

        <unzip src="${wso2appserver.home}/repository/components/plugins/cxf-bundle_2.6.1.wso2v2.jar" dest="${lib}">
        <patternset>
        	<include name="xmlsec-1.5.2.jar"/>
		<include name="xmlschema-core-2.0.2.jar"/>
		<include name="xml-resolver-1.2.jar"/>
		<include name="neethi-3.0.2.jar"/>
		<include name="jaxb-impl-2.2.5.jar"/>
		<include name="ehcache-core-2.5.1.jar"/>
		<include name="jaxb-xjc-2.2.5.jar"/>
        </patternset>
	</unzip>

        <copy toDir="${lib}">
            <fileset dir="${wso2appserver.home}/repository/components/plugins/">
		<include name="cxf-bundle_2.6.1.wso2v2.jar" />
                <include name="opensaml2_2.4.1.wso2v1.jar"/>
                <include name="commons-collections_3.2.0.wso2v1.jar"/>
                <include name="commons-lang_2.6.0.wso2v1.jar"/>
                <include name="wsdl4j_1.6.2.wso2v4.jar"/>
                <include name="jaxb_2.2.5.wso2v1.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="cxfWSDLToJava" depends="init">
        <echo message="Genarating WSDLToJava"/>
        <java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
            <arg value="-client"/>
            <arg value="-d"/>
            <arg value="src"/>
            <arg value="-b"/>
            <arg value="src/main/resources/async_binding.xml"/>
            <arg value="src/main/resources/hello_world_async.wsdl"/>

            <classpath>
                <path refid="cxf.classpath"/>
            </classpath>

        </java>
        <javac destdir="${classes}" debug="true" srcdir="${genCode}">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="compile-all" depends="cxfWSDLToJava" >
        <javac destdir="${classes}" debug="true" srcdir="src">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="war" depends="compile-all">
        <echo message="Creating webapp ${warName}."/>
        <copy  todir="${classes}">
            <fileset dir="src/main/resources"/>
        </copy>
        <war destfile="${webapps}/${warName}" webxml="src/main/webapp/WEB-INF/web.xml">
            <classes dir="${classes}"/>
            <fileset dir="src/main/webapp/">
		<include name="servicelist.css"/>
            </fileset>
	    <webinf dir="src/main/webapp/WEB-INF"
                    includes="cxf-servlet.xml">
            </webinf>
        </war>
    </target>

    <target name="build-all" depends ="war">
        <echo message="Copying the created war file in to the deployment directory"/>
        <copy file="${webapps}/${warName}" todir="${repo.location}/jaxwebapps"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="./lib" />
    </target>

</project>
