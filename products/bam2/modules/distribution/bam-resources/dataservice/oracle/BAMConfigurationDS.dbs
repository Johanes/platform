<?xml version="1.0" encoding="UTF-8"?>
<data name="BAMConfigurationDS" emptyParamFix="true">
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:repository/database/WSO2BAM_DB</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">com.mysql.jdbc.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:mysql://localhost:3306/wso2bam_db</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:sqlserver://10.100.1.200:1433;databaseName=wso2bam_db</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">oracle.jdbc.driver.OracleDriver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:oracle:thin:@10.100.1.10:1521/orcl</property>
        <property name="org.wso2.ws.dataservice.user">wso2carbon</property>
        <property name="org.wso2.ws.dataservice.password">wso2carbon</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config>
    <!--config id="bamDataSource">
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:tcp://localhost/repository/database/WSO2BAM_DB</property>
        <property name="org.wso2.ws.dataservice.user">wso2bam</property>
        <property name="org.wso2.ws.dataservice.password">wso2bam</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">5</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">20</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
    </config-->
    <!-- ****** -->
    <!-- TENENT -->
    <!-- ****** -->

    <!-- add a new tenent -->
    <query id="addTenentQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_TENENT(BAM_DESCRIPTION) VALUES (?)</sql>
        <param name="tenentDesc" sqlType="STRING" type=""/>
    </query>
    <operation name="addTenent">
        <call-query href="addTenentQ">
            <with-param name="tenentDesc" query-param="tenentDesc"/>
        </call-query>
    </operation>

    <!-- delete tenent given the tenent id -->
    <query id="deleteTenetQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_TENENT WHERE BAM_TENENT_ID=? </sql>
        <param name="tenentID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteTenet">
        <call-query href="deleteTenetQ">
            <with-param name="tenentID" query-param="tenentID"/>
        </call-query>
    </operation>

    <query id="getTenentQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_TENENT WHERE BAM_TENENT_ID=? </sql>
        <param name="tenentID" sqlType="INTEGER" type=""/>
        <result element="tenents" rowName="tenent" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="tenenetID" column="BAM_TENENT_ID"/>
            <element name="tenentDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getTenent">
        <call-query href="getTenentQ">
            <with-param name="tenentID" query-param="tenentID"/>
        </call-query>
    </operation>

	<query id="getAllTenentsQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_TENENT</sql>
        <result element="tenents" rowName="tenent" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="tenenetID" column="BAM_TENENT_ID"/>
            <element name="tenentDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getAllTenents">
        <call-query href="getAllTenentsQ">
        </call-query>
    </operation>


    <!-- ****** -->
    <!-- SERVER -->
    <!-- ****** -->

    <!-- add a new server -->
    <query id="addServerQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_SERVER(BAM_TENENT_ID, BAM_TYPE, BAM_URL, BAM_DESCRIPTION, BAM_CATEGORY, BAM_SUBSCRIPTION_ID) VALUES (?, ?, ?, ?, ?, ?)</sql>
        <param name="tenentID" sqlType="INTEGER" type=""/>
        <param name="serverType" sqlType="STRING" type=""/>
        <param name="serverURL" sqlType="STRING" type=""/>
        <param name="serverDesc" sqlType="STRING" type=""/>
        <param name="statCategory" sqlType="INTEGER" type=""/>
        <param name="subscriptionID" sqlType="STRING" type=""/>
    </query>
    <operation name="addServer">
        <call-query href="addServerQ">
            <with-param name="tenentID" query-param="tenentID"/>
            <with-param name="serverType" query-param="serverType"/>
            <with-param name="serverURL" query-param="serverURL"/>
            <with-param name="serverDesc" query-param="serverDesc"/>
            <with-param name="statCategory" query-param="statCategory"/>
            <with-param name="subscriptionID" query-param="subscriptionID"/>
        </call-query>
    </operation>

    <!-- update server given the id-->
    <query id="updateServerQ" useConfig="bamDataSource">
        <sql>UPDATE BAM_SERVER SET BAM_DESCRIPTION=?, BAM_ACTIVE=?, BAM_CATEGORY=? WHERE BAM_SERVER_ID=?</sql>
        <param name="serverDesc" sqlType="STRING" type=""/>
        <param name="isActive" sqlType="INTEGER" type=""/>
        <param name="statCategory" sqlType="INTEGER" type=""/>
        <param name="serverID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="updateServer">
        <call-query href="updateServerQ">
            <with-param name="serverDesc" query-param="serverDesc"/>
            <with-param name="isActive" query-param="isActive"/>
            <with-param name="statCategory" query-param="statCategory"/>
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- deactivate server given the id-->
    <query id="deactivateServerQ" useConfig="bamDataSource">
        <sql>UPDATE BAM_SERVER SET BAM_ACTIVE=0 WHERE BAM_SERVER_ID=?</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deactivateServer">
        <call-query href="deactivateServerQ">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- activate server given the id-->
    <query id="activateServerQ" useConfig="bamDataSource">
        <sql>UPDATE BAM_SERVER SET BAM_ACTIVE=1, BAM_SUBSCRIPTION_ID=? WHERE BAM_SERVER_ID=?</sql>
        <param name="subscriptionID" sqlType="STRING" type=""/>
        <param name="serverID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="activateServer">
        <call-query href="activateServerQ">
            <with-param name="subscriptionID" query-param="subscriptionID"/>
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- delete server given the id-->
    <query id="deleteServerQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_SERVER WHERE BAM_SERVER_ID=? </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteServer">
        <call-query href="deleteServerQ">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- get all servers -->
    <query id="getAllServersQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVER</sql>
        <result element="servers" rowName="server" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="tenentID" column="BAM_TENENT_ID"/>
            <element name="serverType" column="BAM_TYPE"/>
            <element name="serverURL" column="BAM_URL"/>
            <element name="serverDesc" column="BAM_DESCRIPTION"/>
            <element name="isActive" column="BAM_ACTIVE"/>
            <element name="statCategory" column="BAM_CATEGORY"/>
            <element name="subscriptionID" column="BAM_SUBSCRIPTION_ID"/>
        </result>
    </query>
    <operation name="getAllServers">
        <call-query href="getAllServersQ">
        </call-query>
    </operation>

    <!-- get server given the server id -->
    <query id="getServerQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVER WHERE BAM_SERVER_ID=? </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="servers" rowName="server" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="tenentID" column="BAM_TENENT_ID"/>
            <element name="serverType" column="BAM_TYPE"/>
            <element name="serverURL" column="BAM_URL"/>
            <element name="serverDesc" column="BAM_DESCRIPTION"/>
            <element name="isActive" column="BAM_ACTIVE"/>
            <element name="statCategory" column="BAM_CATEGORY"/>
            <element name="subscriptionID" column="BAM_SUBSCRIPTION_ID"/>
        </result>
    </query>
    <operation name="getServer">
        <call-query href="getServerQ">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

<!-- get server for a given tenantID -->
    <query id="getServersForTenantQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVER WHERE BAM_TENENT_ID=? </sql>
        <param name="tenantID" sqlType="INTEGER" type=""/>
        <result element="servers" rowName="server" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="tenentID" column="BAM_TENENT_ID"/>
            <element name="serverType" column="BAM_TYPE"/>
            <element name="serverURL" column="BAM_URL"/>
            <element name="serverDesc" column="BAM_DESCRIPTION"/>
            <element name="isActive" column="BAM_ACTIVE"/>
            <element name="statCategory" column="BAM_CATEGORY"/>
            <element name="subscriptionID" column="BAM_SUBSCRIPTION_ID"/>
        </result>
    </query>
    <operation name="getServersForTenant">
        <call-query href="getServersForTenantQ">
            <with-param name="tenantID" query-param="tenantID"/>
        </call-query>
    </operation>

    <!-- get server given the server url -->
    <query id="getServerFromURLQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVER WHERE BAM_URL=? </sql>
        <param name="serverURL" sqlType="STRING" type=""/>
        <result element="servers" rowName="server" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="tenentID" column="BAM_TENENT_ID"/>
            <element name="serverType" column="BAM_TYPE"/>
            <element name="serverURL" column="BAM_URL"/>
            <element name="serverDesc" column="BAM_DESCRIPTION"/>
            <element name="isActive" column="BAM_ACTIVE"/>
            <element name="statCategory" column="BAM_CATEGORY"/>
            <element name="subscriptionID" column="BAM_SUBSCRIPTION_ID"/>
        </result>
    </query>
    <operation name="getServerFromURL">
        <call-query href="getServerFromURLQ">
            <with-param name="serverURL" query-param="serverURL"/>
        </call-query>
    </operation>

    <!-- get server given the server url and tenant id -->
    <query id="getServerFromURLAndTenantIDQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVER WHERE BAM_URL=? and BAM_TENENT_ID=?</sql>
        <param name="serverURL" sqlType="STRING" type=""/>
        <param name="tenantID" sqlType="STRING" type=""/>
        <result element="servers" rowName="server" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="tenentID" column="BAM_TENENT_ID"/>
            <element name="serverType" column="BAM_TYPE"/>
            <element name="serverURL" column="BAM_URL"/>
            <element name="serverDesc" column="BAM_DESCRIPTION"/>
            <element name="isActive" column="BAM_ACTIVE"/>
            <element name="statCategory" column="BAM_CATEGORY"/>
            <element name="subscriptionID" column="BAM_SUBSCRIPTION_ID"/>
        </result>
    </query>
    <operation name="getServerFromURLAndTenantID">
        <call-query href="getServerFromURLAndTenantIDQ">
            <with-param name="serverURL" query-param="serverURL"/>
            <with-param name="tenantID" sqlType="INTEGER" query-param="tenantID"/>
        </call-query>
    </operation>

    <!-- ******* -->
    <!-- SERVICE -->
    <!-- ******* -->

    <!-- add a new service -->
    <query id="addServiceQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_SERVICE(BAM_SERVER_ID, BAM_SERVICE_NAME, BAM_DESCRIPTION) VALUES (?, ?, ?)</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="serviceName" sqlType="STRING" type=""/>
        <param name="serviceDesc" sqlType="STRING" type=""/>
    </query>
    <operation name="addService">
        <call-query href="addServiceQ">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="serviceName" query-param="serviceName"/>
            <with-param name="serviceDesc" query-param="serviceDesc"/>
        </call-query>
    </operation>

    <!-- delete a service -->
    <query id="deleteServiceQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_SERVICE WHERE BAM_ID=? </sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteService">
        <call-query href="deleteServiceQ">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- get service given the service id -->
    <query id="getServiceQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVICE WHERE BAM_ID=? </sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="services" rowName="service" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serviceID" column="BAM_ID"/>
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="serviceName" column="BAM_SERVICE_NAME"/>
            <element name="serviceDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getService">
        <call-query href="getServiceQ">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- get service given the server id and the service name -->
    <query id="getServiceForServerQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVICE WHERE BAM_SERVER_ID=? AND BAM_SERVICE_NAME=? </sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <param name="serviceName" sqlType="STRING" type=""/>
        <result element="services" rowName="service" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serviceID" column="BAM_ID"/>
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="serviceName" column="BAM_SERVICE_NAME"/>
            <element name="serviceDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getServiceForServer">
        <call-query href="getServiceForServerQ">
            <with-param name="serverID" query-param="serverID"/>
            <with-param name="serviceName" query-param="serviceName"/>
        </call-query>
    </operation>

    <!-- get all services for a given server (server id) -->
    <query id="getAllServicesQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_SERVICE WHERE BAM_SERVER_ID=?</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="services" rowName="service" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serviceID" column="BAM_ID"/>
            <element name="serverID" column="BAM_SERVER_ID"/>
            <element name="serviceName" column="BAM_SERVICE_NAME"/>
            <element name="serviceDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getAllServices">
        <call-query href="getAllServicesQ">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- ********* -->
    <!-- OPERATION -->
    <!-- ********* -->

    <!-- add a new operation -->
    <query id="addOperationQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_OPERATION(BAM_SERVICE_ID, BAM_OP_NAME, BAM_DESCRIPTION) VALUES (?, ?, ?)</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <param name="operationName" sqlType="STRING" type=""/>
        <param name="operationDesc" sqlType="STRING" type=""/>
    </query>
    <operation name="addOperation">
        <call-query href="addOperationQ">
            <with-param name="serviceID" query-param="serviceID"/>
            <with-param name="operationName" query-param="operationName"/>
            <with-param name="operationDesc" query-param="operationDesc"/>
        </call-query>
    </operation>

    <!-- delete an operation -->
    <query id="deleteOperationQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_OPERATION WHERE BAM_ID=?</sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteOperation">
        <call-query href="deleteOperationQ">
            <with-param name="operationID" query-param="serviceID"/>
       </call-query>
    </operation>

	<!-- get operation given the operation id -->
    <query id="getOperationQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_OPERATION WHERE BAM_ID=? </sql>
        <param name="operationID" sqlType="INTEGER" type=""/>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationID" column="BAM_ID"/>
            <element name="serviceID" column="BAM_SERVICE_ID"/>
            <element name="operationName" column="BAM_OP_NAME"/>
            <element name="operationDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getOperation">
        <call-query href="getOperationQ">
            <with-param name="operationID" query-param="operationID"/>
		</call-query>
    </operation>
	
    <!-- get operation given the service id and the operation name -->
    <query id="getOperationFromNameQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_OPERATION WHERE BAM_SERVICE_ID=? AND BAM_OP_NAME=? </sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <param name="operationName" sqlType="STRING" type=""/>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationID" column="BAM_ID"/>
            <element name="serviceID" column="BAM_SERVICE_ID"/>
            <element name="operationName" column="BAM_OP_NAME"/>
            <element name="operationDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getOperationFromName">
        <call-query href="getOperationFromNameQ">
            <with-param name="serviceID" query-param="serviceID"/>
            <with-param name="operationName" query-param="operationName"/>
        </call-query>
    </operation>

    <!-- get all operations for a given service id -->
    <query id="getAllOperationsForServiceQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_OPERATION WHERE BAM_SERVICE_ID=?</sql>
        <param name="serviceID" sqlType="INTEGER" type=""/>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationID" column="BAM_ID"/>
            <element name="serviceID" column="BAM_SERVICE_ID"/>
            <element name="operationName" column="BAM_OP_NAME"/>
            <element name="operationDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getAllOperationsForService">
        <call-query href="getAllOperationsForServiceQ">
            <with-param name="serviceID" query-param="serviceID"/>
        </call-query>
    </operation>

    <!-- get all operations -->
    <query id="getAllOperationsQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_OPERATION</sql>
        <result element="operations" rowName="operation" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="operationID" column="BAM_ID"/>
            <element name="serviceID" column="BAM_SERVICE_ID"/>
            <element name="operationName" column="BAM_OP_NAME"/>
            <element name="operationDesc" column="BAM_DESCRIPTION"/>
        </result>
    </query>
    <operation name="getAllOperations">
        <call-query href="getAllOperationsQ">
        </call-query>
    </operation>

 <!-- ********* -->
    <!-- ACTIVITY -->
    <!-- ********* -->

<!-- add a new activity -->
    <query id="addActivityDataQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_ACTIVITY (BAM_NAME, BAM_DESCRIPTION, BAM_USER_DEFINED_ID) VALUES (?, ?, ?)</sql>
        <param name="name" sqlType="STRING" type=""/>
        <param name="description" sqlType="STRING" type=""/>
        <param name="userDefinedID" sqlType="STRING" type=""/>
   </query>
    <operation name="addActivityData">
        <call-query href="addActivityDataQ">
            <with-param name="name" query-param="name"/>
            <with-param name="description" query-param="description"/>
            <with-param name="userDefinedID" query-param="userDefinedID"/>
        </call-query>
    </operation>

 <!-- delete an activity -->
    <query id="deleteActivityQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_ACTIVITY WHERE BAM_ID=?</sql>
        <param name="activityKeyId" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteActivity">
        <call-query href="deleteActivityQ">
            <with-param name="activityKeyId" query-param="activityKeyId"/>
        </call-query>
    </operation>

    <!-- update activity given the userdefinedID(update only the name and the description of an activity for a particular userdefinedID)-->
    <query id="updateActivityQ" useConfig="bamDataSource">
        <sql>UPDATE BAM_ACTIVITY SET BAM_NAME=?, BAM_DESCRIPTION=? WHERE BAM_ID=?</sql>
		<param name="activityName" sqlType="STRING" type=""/>        
		<param name="activityDescription" sqlType="STRING" type=""/>
		<param name="activityKeyId" sqlType="INTEGER" type=""/>
     </query>
    <operation name="updateActivity">
        <call-query href="updateActivityQ">
            <with-param name="activityName" query-param="activityName"/>
	    <with-param name="activityDescription" query-param="activityDescription"/> 
    <with-param name="activityKeyId" query-param="activityKeyId"/>
         </call-query>
    </operation>



<!-- get activity given the activity key id -->
    <query id="getActivityQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_ACTIVITY WHERE BAM_ID=? </sql>
        <param name="activityKeyId" sqlType="INTEGER" type=""/>
        <result element="activities" rowName="activity" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityKeyId" column="BAM_ID"/>
            <element name="name" column="BAM_NAME"/>
            <element name="description" column="BAM_DESCRIPTION"/>
            <element name="activityId" column="BAM_USER_DEFINED_ID"/>
	</result>
    </query>
    <operation name="getActivity">
        <call-query href="getActivityQ">
            <with-param name="activityKeyId" query-param="activityKeyId"/>
        </call-query>
    </operation>



<!--get activity for a given  userDefinedID(in normal terms actionID) -->
<query id="getActivityForActivityIDQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_ACTIVITY WHERE BAM_USER_DEFINED_ID=? </sql>
        <param name="activityId" sqlType="STRING" type=""/>
        <result element="activities" rowName="activity" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="activityKeyId" column="BAM_ID"/>
            <element name="name" column="BAM_NAME"/>
            <element name="description" column="BAM_DESCRIPTION"/>
            <element name="activityId" column="BAM_USER_DEFINED_ID"/>
       </result>
    </query>
    <operation name="getActivityForActivityID">
        <call-query href="getActivityForActivityIDQ">
            <with-param name="activityId" query-param="activityId"/>
        </call-query>
    </operation>



    <!-- get all activities -->
    <query id="getAllActivitiesQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_ACTIVITY</sql>
        <result element="activities" rowName="activity" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="activityKeyId" column="BAM_ID"/>
            <element name="name" column="BAM_NAME"/>
            <element name="description" column="BAM_DESCRIPTION"/>
            <element name="activityId" column="BAM_USER_DEFINED_ID"/>
        </result>
    </query>
    <operation name="getAllActivities">
        <call-query href="getAllActivitiesQ">
        </call-query>
    </operation>

    <!-- ********* -->
    <!-- MESSAGE -->
    <!-- ********* -->

 <!-- add a new message -->
    <query id="addMessageQ" useConfig="bamDataSource">
        <sql>INSERT INTO BAM_MESSAGE (BAM_OP_ID, BAM_MSG_ID, BAM_ACTIVITY_ID, BAM_TIMESTAMP, BAM_IP_ADDRESS, BAM_USER_AGENT) VALUES (?, ?, ?, ?, ?, ?)</sql>
         <param name="operationId" sqlType="INTEGER" type=""/>
        <param name="messageId" sqlType="STRING" type=""/>
        <param name="activityKeyId" sqlType="INTEGER" type=""/>
        <param name="timestamp" sqlType="STRING" type=""/>
        <param name="ipAddress" sqlType="STRING" type=""/>
        <param name="userAgent" sqlType="STRING" type=""/>
    </query>
     <operation name="addMessage">
        <call-query href="addMessageQ">
            <with-param name="operationId" query-param="operationId"/>
            <with-param name="messageId" query-param="messageId"/>
            <with-param name="activityKeyId" query-param="activityKeyId"/>
            <with-param name="timestamp" query-param="timestamp"/>
            <with-param name="ipAddress" query-param="ipAddress"/>
            <with-param name="userAgent" query-param="userAgent"/>
        </call-query>
    </operation>

 <!-- delete a message -->
    <query id="deleteMessageQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_MESSAGE WHERE BAM_ID=?</sql>
        <param name="messageKeyId" sqlType="INTEGER" type=""/>
    </query>
    <operation name="deleteMessage">
        <call-query href="deleteMessageQ">
            <with-param name="messageKeyId" query-param="messageKeyId"/>
        </call-query>
    </operation>


<!-- get message given the message Key id -->
    <query id="getMessageQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE WHERE BAM_ID=? </sql>
        <param name="messageKeyId" sqlType="INTEGER" type=""/>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="messageKeyId" column="BAM_ID"/>
            <element name="operationId" column="BAM_OP_ID"/>
            <element name="messageId" column="BAM_MSG_ID"/>
            <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
	   <element name="timestamp" column="BAM_TIMESTAMP"/>
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	   <element name="userAgent" column="BAM_USER_AGENT"/>
        </result>
    </query>
    <operation name="getMessage">
        <call-query href="getMessageQ">
            <with-param name="messageKeyId" query-param="messageKeyId"/>
        </call-query>
    </operation>

<!-- get message given the message Id -->
    <query id="getMessageForMessageIDQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE WHERE BAM_MSG_ID=? </sql>
        <param name="messageId" sqlType="STRING" type=""/>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="messageKeyId" column="BAM_ID"/>
            <element name="operationId" column="BAM_OP_ID"/>
            <element name="messageId" column="BAM_MSG_ID"/>
            <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
	   <element name="timestamp" column="BAM_TIMESTAMP"/>
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	   <element name="userAgent" column="BAM_USER_AGENT"/>
        </result>
    </query>
    <operation name="getMessageForMessageID">
        <call-query href="getMessageForMessageIDQ">
            <with-param name="messageId" query-param="messageId"/>
        </call-query>
    </operation>

 <!-- get all messages for a given operationID need to figure out how all messages relate to an operation going to be retrieve-->
    <query id="getAllMessagesForOperationIDQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE WHERE BAM_OP_ID=?</sql>
        <param name="operationId" sqlType="INTEGER" type=""/>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="messageKeyId" column="BAM_ID"/>
            <element name="operationId" column="BAM_OP_ID"/>
            <element name="messageId" column="BAM_MSG_ID"/>
            <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
	   <element name="timestamp" column="BAM_TIMESTAMP"/>
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	   <element name="userAgent" column="BAM_USER_AGENT"/>
        </result>
    </query>
    <operation name="getAllMessagesForOperationID">
        <call-query href="getAllMessagesForOperationIDQ">
            <with-param name="operationId" query-param="operationId"/>
        </call-query>
    </operation>

<!-- get all messages for a given activityID need to figure out how all messages relate to an activity going to be retrieve-->
    <query id="getAllMessagesForActivityKeyIdQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE WHERE BAM_ACTIVITY_ID=?</sql>
        <param name="activityKeyId" sqlType="INTEGER" type=""/>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="messageKeyId" column="BAM_ID"/>
            <element name="operationId" column="BAM_OP_ID"/>
            <element name="messageId" column="BAM_MSG_ID"/>
            <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
	   <element name="timestamp" column="BAM_TIMESTAMP"/>
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	   <element name="userAgent" column="BAM_USER_AGENT"/>
        </result>
    </query>
    <operation name="getAllMessagesForActivityKeyId">
        <call-query href="getAllMessagesForActivityKeyIdQ">
            <with-param name="activityKeyId" query-param="activityKeyId"/>
        </call-query>
    </operation>

    <!-- get all messages -->
    <query id="getAllMessagesQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE</sql>
        <result element="messages" rowName="message" defaultNamespace="http://bam.carbon.wso2.org">
              <element name="messageKeyId" column="BAM_ID"/>
            <element name="operationId" column="BAM_OP_ID"/>
            <element name="messageId" column="BAM_MSG_ID"/>
            <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
	   <element name="timestamp" column="BAM_TIMESTAMP"/>
            <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	   <element name="userAgent" column="BAM_USER_AGENT"/>
        </result>
    </query>
    <operation name="getAllMessages">
        <call-query href="getAllMessagesQ">
        </call-query>
    </operation>
	
	<!--get Message Data For ActivityKeyID and MessageKeyID (retrive from bam_message_data table)-->
    <query id="getMessageDataForActivityKeyIDandMessageKeyIDQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE_DATA WHERE BAM_MESSAGE_ID=? AND BAM_ACTIVITY_ID=?</sql>
            <param name="messageKeyId" sqlType="INTEGER" type=""/>
	    <param name="activityKeyId" sqlType="INTEGER" type=""/>
        <result element="messagedatas" rowName="messagedata" defaultNamespace="http://bam.carbon.wso2.org">
	     <element name="messageDataKeyId" column="BAM_ID"/>
             <element name="messageKeyId" column="BAM_MESSAGE_ID"/>
             <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
             <element name="timestamp" column="BAM_TIMESTAMP"/>
             <element name="direction" column="BAM_DIRECTION"/>	    
             <element name="message" column="BAM_MESSAGE"/>
	     <element name="ipAddress" column="BAM_IP_ADDRESS"/>
	     <element name="status" column="BAM_STATUS"/>
      </result>
    </query>
    <operation name="getMessageDataForActivityKeyIDandMessageKeyID">
        <call-query href="getMessageDataForActivityKeyIDandMessageKeyIDQ">
            <with-param name="messageKeyId" query-param="messageKeyId"/>
		<with-param name="activityKeyId" query-param="activityKeyId"/>
        </call-query>
    </operation>

	<!--get Message Property For ActivityKeyID and MessageKeyID (retrive from bam_message_property table)-->
    <query id="getMessagePropertyQ" useConfig="bamDataSource">
        <sql>SELECT * FROM BAM_MESSAGE_PROPERTIES WHERE BAM_MESSAGE_ID=? AND BAM_ACTIVITY_ID=? AND BAM_KEY=?</sql>
            <param name="messageKeyId" sqlType="INTEGER" type=""/>
	    <param name="activityKeyId" sqlType="INTEGER" type=""/>
	    <param name="key" sqlType="STRING" type=""/>
        <result element="messagepropertiess" rowName="messageproperty" defaultNamespace="http://bam.carbon.wso2.org">
	     <element name="messagePropertyKeyId" column="BAM_ID"/>
             <element name="messageKeyId" column="BAM_MESSAGE_ID"/>
             <element name="activityKeyId" column="BAM_ACTIVITY_ID"/>
             <element name="key" column="BAM_KEY"/>
             <element name="value" column="BAM_VALUE"/>	    
     </result>
    </query>
    <operation name="getMessageProperty">
        <call-query href="getMessagePropertyQ">
            <with-param name="messageKeyId" query-param="messageKeyId"/>
		<with-param name="activityKeyId" query-param="activityKeyId"/>
		<with-param name="key" query-param="key"/>
        </call-query>
    </operation>

    <!-- update messageData table's message status for the primary key-->
    <query id="updateMessageStatusQ" useConfig="bamDataSource">
        <sql>UPDATE BAM_MESSAGE_DATA SET BAM_STATUS=? WHERE BAM_ID=?</sql>
		<param name="messageStatus" sqlType="STRING" type=""/>        
		<param name="messageDataKeyId" sqlType="INTEGER" type=""/>
     </query>
    <operation name="updateMessageStatus">
        <call-query href="updateMessageStatusQ">
            <with-param name="messageStatus" query-param="messageStatus"/>
	   <with-param name="messageDataKeyId" query-param="messageDataKeyId"/>
         </call-query>
    </operation>

   <!-- update messageData table's message body and direction for the primary key-->
   <query id="updateMessageDumpQ" useConfig="bamDataSource">

     <sql>UPDATE BAM_MESSAGE_DATA SET BAM_MESSAGE =?, BAM_DIRECTION =?, BAM_IP_ADDRESS=? WHERE BAM_ID=?</sql>

        <param name="messageBody" sqlType="STRING" type=""/>

        <param name="messageDir" sqlType="STRING" type=""/>

        <param name="ipAddress" sqlType="STRING" type=""/>

        <param name="messageDataKeyId" sqlType="INTEGER" type=""/>

    </query>

    <operation name="updateMessageDump">

        <call-query href="updateMessageDumpQ">

            <with-param name="messageBody" query-param="messageBody"/>

            <with-param name="messageDir" query-param="messageDir"/>

            <with-param name="ipAddress" query-param="ipAddress"/>

            <with-param name="messageDataKeyId" query-param="messageDataKeyId"/>

        </call-query>

    </operation>

	<!-- TODO: Duplicate operation -->
	<!-- TODO: The following (getEndpoints, getSequences, getProxyServices) operations were added here from BAMStatQueryDS for convininence -->
	
	<!-- SERVER getEndpoints -->
	
    <query id="getEndpointsQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS ENDPOINT FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Endpoint%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="endpoints" rowName="endpoint" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="endpoint" column="ENDPOINT"/>
        </result>
    </query>
    <operation name="getEndpoints">
        <call-query href="getEndpointsQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

    <!-- SERVER getSequences -->
	
    <query id="getSequencesQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS SEQUENCE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Sequence%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="sequences" rowName="sequence" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="sequence" column="SEQUENCE"/>
        </result>
    </query>
    <operation name="getSequences">
        <call-query href="getSequencesQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>
    
    <!-- SERVER getProxyServices -->
	
    <query id="getProxyServicesQuery" useConfig="bamDataSource">
        <sql>SELECT DISTINCT BAM_VALUE AS PROXY_SERVICE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE 'Proxy%ID'</sql>
        <param name="serverID" sqlType="INTEGER" type=""/>
        <result element="proxyServices" rowName="proxyService" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="proxyService" column="PROXY_SERVICE"/>
        </result>
    </query>
    <operation name="getProxyServices">
        <call-query href="getProxyServicesQuery">
            <with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>

	<!-- SERVER USERDEFINED getAllClients -->
   <!-- get All Clients -->
    <query id="getAllClientsQ" useConfig="bamDataSource">
        <sql>
        SELECT 
         BAM_ID AS ID, BAM_SERVER_ID AS SERVER_ID, BAM_VALUE AS VALUE , 
         SUBSTR( BAM_KEY,1,INSTR(BAM_SERVER_USER_DATA.BAM_KEY,'_')-1) AS NAME,
         SUBSTR( BAM_KEY,INSTR(BAM_SERVER_USER_DATA.BAM_KEY,'_')+1,36) AS UUID 
        FROM 
         BAM_SERVER_USER_DATA 
        WHERE 
         BAM_SERVER_ID=?
         </sql>
 	<param name="serverID" sqlType="INTEGER" type=""/>       
	<result element="clients" rowName="client" defaultNamespace="http://bam.carbon.wso2.org">
             <element name="clientname" column="NAME"/>
	     <element name="clientuuid" column="UUID"/>
	     <element name="clientvalue" column="VALUE"/>
	    <element name="clientserverid" column="SERVER_ID"/>
	    <element name="clientbamid" column="ID"/>
        </result>
    </query>
    <operation name="getAllClients">
        <call-query href="getAllClientsQ">
 		<with-param name="serverID" query-param="serverID"/>
        </call-query>
    </operation>
  	
</data>


