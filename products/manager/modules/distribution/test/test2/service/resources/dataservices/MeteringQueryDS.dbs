<?xml version="1.0" encoding="UTF-8"?>
<data name="MeteringQueryDS" emptyParamFix="true">
    <config id="bamDataSource">
     	<property name="carbon_datasource_name">bam_datasource</property>
    </config>
  
    <!-- SERVER -->
    
    <query id="getServiceRequestStatsQ" useConfig="bamDataSource">
        <sql>
            select BAM_URL, sum(BAM_REQ_COUNT) as REQ_COUNT, sum(BAM_RES_COUNT) as RES_COUNT, sum(BAM_FAULT_COUNT) as FAULT_COUNT from BAM_SERVER, BAM_SERVER_STAT_MONTH_FACT where BAM_TENENT_ID = ? and BAM_SERVER_STAT_MONTH_FACT.BAM_SERVER_ID = BAM_SERVER.BAM_SERVER_ID and BAM_SERVER_STAT_MONTH_FACT.BAM_MONTH_ID in (select BAM_ID from BAM_MONTH_DIM where BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) group by BAM_URL;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="serviceRequestStats" rowName="serviceRequestStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverUrl" column="BAM_URL"/>
            <element name="reqCount" column="REQ_COUNT" xsdType="xs:long"/>
            <element name="resCount" column="RES_COUNT" xsdType="xs:long"/>
            <element name="faultCount" column="FAULT_COUNT" xsdType="xs:long"/>        
        </result>
    </query>
    <operation name="getServiceRequestStats">
        <call-query href="getServiceRequestStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <query id="getHourlyServiceRequestStatsQ" useConfig="bamDataSource">
        <sql>
            select BAM_URL, sum(BAM_REQ_COUNT) as REQ_COUNT, sum(BAM_RES_COUNT) as RES_COUNT, sum(BAM_FAULT_COUNT) as FAULT_COUNT from BAM_SERVER, BAM_SERVER_STAT_HOUR_FACT where BAM_TENENT_ID = ? and BAM_SERVER_STAT_HOUR_FACT.BAM_SERVER_ID = BAM_SERVER.BAM_SERVER_ID and BAM_SERVER_STAT_HOUR_FACT.BAM_HOUR_ID in (select BAM_ID from BAM_HOUR_DIM where BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) group by BAM_URL;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="serviceRequestStats" rowName="serviceRequestStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverUrl" column="BAM_URL"/>
            <element name="reqCount" column="REQ_COUNT" xsdType="xs:long"/>
            <element name="resCount" column="RES_COUNT" xsdType="xs:long"/>
            <element name="faultCount" column="FAULT_COUNT" xsdType="xs:long"/>        
        </result>
    </query>
    <operation name="getHourlyServiceRequestStats">
        <call-query href="getHourlyServiceRequestStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <query id="getBandwidthStatsQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_URL, BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_SERVER, BAM_BANDWIDTH_STAT_MONTH_FACT WHERE BAM_TENENT_ID = ? AND BAM_BANDWIDTH_STAT_MONTH_FACT.BAM_SERVER_ID = BAM_SERVER.BAM_SERVER_ID AND BAM_BANDWIDTH_STAT_MONTH_FACT.BAM_MONTH_ID IN (SELECT BAM_ID FROM BAM_MONTH_DIM WHERE BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_URL, BAM_BANDWIDTH_NAME;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStats" rowName="BandwidthStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverUrl" column="BAM_URL"/>
            <element name="bandwidthName" column="BAM_BANDWIDTH_NAME"/>
            <element name="incomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="outgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getBandwidthStats">
        <call-query href="getBandwidthStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <query id="getHourlyBandwidthStatsQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_URL, BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_SERVER, BAM_BANDWIDTH_STAT_HOUR_FACT WHERE BAM_TENENT_ID = ? AND BAM_BANDWIDTH_STAT_HOUR_FACT.BAM_SERVER_ID = BAM_SERVER.BAM_SERVER_ID AND BAM_BANDWIDTH_STAT_HOUR_FACT.BAM_HOUR_ID IN (SELECT BAM_ID FROM BAM_HOUR_DIM WHERE BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_URL, BAM_BANDWIDTH_NAME;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStats" rowName="BandwidthStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="serverUrl" column="BAM_URL"/>
            <element name="bandwidthName" column="BAM_BANDWIDTH_NAME"/>
            <element name="incomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="outgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getHourlyBandwidthStats">
        <call-query href="getHourlyBandwidthStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <query id="getRegistryBandwidthUsageStatsQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, (SUM(BAM_REG_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_REG_BANDWIDTH_MB)*1024*1024 + SUM(BAM_REG_BANDWIDTH_KB)*1024 + SUM(BAM_REG_BANDWIDTH_B)) AS REG_BANDWIDTH, (SUM(BAM_REG_HISTORY_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_REG_HISTORY_BANDWIDTH_MB)*1024*1024 + SUM(BAM_REG_HISTORY_BANDWIDTH_KB)*1024 + SUM(BAM_REG_HISTORY_BANDWIDTH_B)) AS REG_HISTORY_BANDWIDTH FROM BAM_REG_BANDWIDTH_USAGE_MONTH_FACT WHERE BAM_TENANT_ID = ? AND BAM_MONTH_ID IN (SELECT BAM_ID FROM BAM_MONTH_DIM WHERE BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="regBandwidthStats" rowName="regBandwidthStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="bandwidthName" column="BAM_BANDWIDTH_NAME"/>
            <element name="registryBandwidth" column="REG_BANDWIDTH" xsdType="xs:long"/>
            <element name="registryHistoryBandwidth" column="REG_HISTORY_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getRegistryBandwidthUsageStats">
        <call-query href="getRegistryBandwidthUsageStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>
    
    <query id="getDailyRegistryBandwidthUsageStatsQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, MAX((BAM_REG_BANDWIDTH_GB*1024*1024*1024) + (BAM_REG_BANDWIDTH_MB*1024*1024) + (BAM_REG_BANDWIDTH_KB*1024) + BAM_REG_BANDWIDTH_B) AS REG_BANDWIDTH, MAX((BAM_REG_HISTORY_BANDWIDTH_GB*1024*1024*1024) + (BAM_REG_HISTORY_BANDWIDTH_MB*1024*1024) + (BAM_REG_HISTORY_BANDWIDTH_KB*1024) + BAM_REG_HISTORY_BANDWIDTH_B) AS REG_HISTORY_BANDWIDTH FROM BAM_REG_BANDWIDTH_USAGE_DAY_FACT WHERE BAM_TENANT_ID = ? AND BAM_DAY_ID IN (SELECT BAM_ID FROM BAM_DAY_DIM WHERE BAM_START_TIMESTAMP &gt;= ? and BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTime" sqlType="TIMESTAMP" type=""/>
        <param name="endTime" sqlType="TIMESTAMP" type=""/>
        <result element="regBandwidthStats" rowName="regBandwidthStat" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="bandwidthName" column="BAM_BANDWIDTH_NAME"/>
            <element name="registryBandwidth" column="REG_BANDWIDTH" xsdType="xs:long"/>
            <element name="registryHistoryBandwidth" column="REG_HISTORY_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getDailyRegistryBandwidthUsageStats">
        <call-query href="getDailyRegistryBandwidthUsageStatsQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTime" query-param="startTime"/>
            <with-param name="endTime" query-param="endTime"/>
        </call-query>
    </operation>





             <query id="getInstanceUsageStatsQ" useConfig="bamDataSource">                                                                    
            <sql>SELECT START_TIMESTAMP, INSTANCE_ID, STOP_TIMESTAMP, IS_RUNNING, SERVER_URL, SERVER_NAME FROM BAM_INSTANCE_USAGE order by IS_RUNNING DESC,START_TIMESTAMP DESC                                                                                   
               <!--WHERE INSTANCE_ID=:INSTANCE_ID-->        </sql>                                                                                   
               <!--param name="INSTANCE_ID" sqlType="INTEGER"/-->                                                                                                  
                  <result element="instanceUsageStats" rowName="instanceUsageStat" defaultNamespace="http://bam.carbon.wso2.org"> 
                                                                                                                    
                     <element name="startTimestamp" column="START_TIMESTAMP" xsdType="xs:dateTime"/> 
                                                                                                                    
                     <element name="instanceId" column="INSTANCE_ID" xsdType="xs:integer"/> 
                                                                                                                    
                     <element name="stopTimestamp" column="STOP_TIMESTAMP" xsdType="xs:dateTime"/>
   
		     <element name="isRunning" column="IS_RUNNING" xsdType="xs:boolean"/>                    
                                                                                                                                           
                     <element name="serverURL" column="SERVER_URL" xsdType="xs:string"/>
                                                                                                                        
                     <element name="serverName" column="SERVER_NAME" xsdType="xs:string"/>
		                                                                                                  
                  </result>                                                                               
               </query>                                                                               
               <operation name="getInstanceUsageStats">                                                                                                  
                  <call-query href="getInstanceUsageStatsQ">                                                                                                                   
                     <!--with-param name="INSTANCE_ID" query-param="INSTANCE_ID"/--></call-query>                                                                                              
                  </operation> 




</data>
