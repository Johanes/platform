<?xml version="1.0" encoding="UTF-8"?>
<data name="MeteringSummaryGenerationDS" emptyParamFix="true">
    <config id="bamDataSource">
     	<property name="carbon_datasource_name">bam_datasource</property>
    </config>
    <config id="registryDataSource">
     	<property name="carbon_datasource_name">stratos_ds</property>
    </config>
    <!-- summary generation queries -->
    <query id="getLatestHourlyBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_HOUR_DIM WHERE BAM_ID = (SELECT BAM_HOUR_ID FROM BAM_BANDWIDTH_STAT_HOUR_FACT WHERE BAM_ID = (SELECT MAX(BAM_ID) FROM BAM_BANDWIDTH_STAT_HOUR_FACT WHERE BAM_SERVER_ID=?))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestHourlyBandwidthSummaryPeriodId">
        <call-query href="getLatestHourlyBandwidthSummaryPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getLatestDailyBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_DAY_DIM WHERE BAM_ID = (SELECT BAM_DAY_ID FROM BAM_BANDWIDTH_STAT_DAY_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_BANDWIDTH_STAT_DAY_FACT WHERE BAM_SERVER_ID=?))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestDailyBandwidthSummaryPeriodId">
        <call-query href="getLatestDailyBandwidthSummaryPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getLatestMonthlyBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_MONTH_DIM WHERE BAM_ID = (SELECT BAM_MONTH_ID FROM BAM_BANDWIDTH_STAT_MONTH_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_BANDWIDTH_STAT_MONTH_FACT WHERE BAM_SERVER_ID=?))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestMonthlyBandwidthSummaryPeriodId">
        <call-query href="getLatestMonthlyBandwidthSummaryPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getLatestQuarterlyBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_QTR_DIM WHERE BAM_ID = (SELECT BAM_QTR_ID FROM BAM_BANDWIDTH_STAT_QTR_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_BANDWIDTH_STAT_QTR_FACT WHERE BAM_SERVER_ID=?))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestQuarterlyBandwidthSummaryPeriodId">
        <call-query href="getLatestQuarterlyBandwidthSummaryPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getLatestYearlyBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_YEAR_DIM WHERE BAM_ID = (SELECT BAM_YEAR_ID FROM BAM_BANDWIDTH_STAT_YEAR_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_BANDWIDTH_STAT_YEAR_FACT WHERE BAM_SERVER_ID=?))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestYearlyBandwidthSummaryPeriodId">
        <call-query href="getLatestYearlyBandwidthSummaryPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getMinimumPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_TIMESTAMP FROM BAM_SERVER_USER_DATA WHERE BAM_ID = (SELECT MIN(BAM_ID) FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID = ?)
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getMinimumPeriodId">
        <call-query href="getMinimumPeriodIdQ">
            <with-param name="serverId" query-param="serverId"/>
        </call-query>
    </operation>
    
    <query id="getDataForHourlySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_KEY, BAM_VALUE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY LIKE ? AND BAM_TIMESTAMP  &gt;=? AND BAM_TIMESTAMP &lt;=?
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="keyName" sqlType="STRING" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthHourlyStatValues"  rowName="bandwidthHourlyStatValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_KEY"/>
            <element name="keyValue" column="BAM_VALUE"/>
        </result>
    </query>
    <operation name="getDataForHourlySummary">
        <call-query href="getDataForHourlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="keyName" query-param="keyName"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="addBandwidthStatHourlySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_BANDWIDTH_STAT_HOUR_FACT (BAM_SERVER_ID, BAM_HOUR_ID, BAM_BANDWIDTH_NAME, BAM_INCOMING_BANDWIDTH_GB, BAM_INCOMING_BANDWIDTH_MB, BAM_INCOMING_BANDWIDTH_KB, BAM_INCOMING_BANDWIDTH_B, BAM_OUTGOING_BANDWIDTH_GB, BAM_OUTGOING_BANDWIDTH_MB, BAM_OUTGOING_BANDWIDTH_KB, BAM_OUTGOING_BANDWIDTH_B) VALUES (:serverId, :hourId, :BandwidthName, :incomingBandwidth DIV (1024*1024*1024), MOD(:incomingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:incomingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:incomingBandwidth, 1024), :outgoingBandwidth DIV (1024*1024*1024), MOD(:outgoingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:outgoingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:outgoingBandwidth, 1024)) 
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="hourId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="incomingBandwidth" sqlType="BIGINT" type=""/>
        <param name="outgoingBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addBandwidthStatHourlySummary">
        <call-query href="addBandwidthStatHourlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="hourId" query-param="hourId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="incomingBandwidth" query-param="incomingBandwidth"/>
            <with-param name="outgoingBandwidth" query-param="outgoingBandwidth"/>
        </call-query>
    </operation>    
    
    <query id="deleteServerUserDataQ" useConfig="bamDataSource">
        <sql>DELETE FROM BAM_SERVER_USER_DATA WHERE BAM_SERVER_ID=? AND BAM_KEY=? AND BAM_TIMESTAMP  &gt;=? AND BAM_TIMESTAMP &lt;=?</sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="name" sqlType="STRING" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
    </query>
    <operation name="deleteServerUserData">
        <call-query href="deleteServerUserDataQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="name" query-param="name"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="getDataForDailySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_BANDWIDTH_STAT_HOUR_FACT WHERE BAM_SERVER_ID = ? AND BAM_HOUR_ID IN (SELECT BAM_ID FROM BAM_HOUR_DIM WHERE BAM_START_TIMESTAMP &gt;= ? AND BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStatValues"  rowName="bandwidthStatValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_BANDWIDTH_NAME"/>
            <element name="IncomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="OutgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getDataForDailySummary">
        <call-query href="getDataForDailySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="addBandwidthStatDailySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_BANDWIDTH_STAT_DAY_FACT (BAM_SERVER_ID, BAM_DAY_ID, BAM_BANDWIDTH_NAME, BAM_INCOMING_BANDWIDTH_GB, BAM_INCOMING_BANDWIDTH_MB, BAM_INCOMING_BANDWIDTH_KB, BAM_INCOMING_BANDWIDTH_B, BAM_OUTGOING_BANDWIDTH_GB, BAM_OUTGOING_BANDWIDTH_MB, BAM_OUTGOING_BANDWIDTH_KB, BAM_OUTGOING_BANDWIDTH_B) VALUES (:serverId, :dayId, :BandwidthName, :incomingBandwidth DIV (1024*1024*1024), MOD(:incomingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:incomingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:incomingBandwidth, 1024), :outgoingBandwidth DIV (1024*1024*1024), MOD(:outgoingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:outgoingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:outgoingBandwidth, 1024))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="dayId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="incomingBandwidth" sqlType="BIGINT" type=""/>
        <param name="outgoingBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addBandwidthStatDailySummary">
        <call-query href="addBandwidthStatDailySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="dayId" query-param="dayId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="incomingBandwidth" query-param="incomingBandwidth"/>
            <with-param name="outgoingBandwidth" query-param="outgoingBandwidth"/>
        </call-query>
    </operation>
    
    <query id="getDataForMonthlySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_BANDWIDTH_STAT_DAY_FACT WHERE BAM_SERVER_ID = ? AND BAM_DAY_ID IN (SELECT BAM_ID FROM BAM_DAY_DIM WHERE BAM_START_TIMESTAMP &gt;= ? AND BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStatValues"  rowName="bandwidthStatValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_BANDWIDTH_NAME"/>
            <element name="IncomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="OutgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getDataForMonthlySummary">
        <call-query href="getDataForMonthlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="addBandwidthStatMonthlySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_BANDWIDTH_STAT_MONTH_FACT (BAM_SERVER_ID, BAM_MONTH_ID, BAM_BANDWIDTH_NAME, BAM_INCOMING_BANDWIDTH_GB, BAM_INCOMING_BANDWIDTH_MB, BAM_INCOMING_BANDWIDTH_KB, BAM_INCOMING_BANDWIDTH_B, BAM_OUTGOING_BANDWIDTH_GB, BAM_OUTGOING_BANDWIDTH_MB, BAM_OUTGOING_BANDWIDTH_KB, BAM_OUTGOING_BANDWIDTH_B) VALUES (:serverId, :monthId, :BandwidthName, :incomingBandwidth DIV (1024*1024*1024), MOD(:incomingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:incomingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:incomingBandwidth, 1024), :outgoingBandwidth DIV (1024*1024*1024), MOD(:outgoingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:outgoingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:outgoingBandwidth, 1024))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="monthId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="incomingBandwidth" sqlType="BIGINT" type=""/>
        <param name="outgoingBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addBandwidthStatMonthlySummary">
        <call-query href="addBandwidthStatMonthlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="monthId" query-param="monthId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="incomingBandwidth" query-param="incomingBandwidth"/>
            <with-param name="outgoingBandwidth" query-param="outgoingBandwidth"/>
        </call-query>
    </operation>
    
    <query id="getDataForQuarterlySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_BANDWIDTH_STAT_MONTH_FACT WHERE BAM_SERVER_ID = ? AND BAM_MONTH_ID IN (SELECT BAM_ID FROM BAM_MONTH_DIM WHERE BAM_START_TIMESTAMP &gt;= ? AND BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStatValues"  rowName="bandwidthStatValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_BANDWIDTH_NAME"/>
            <element name="IncomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="OutgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getDataForQuarterlySummary">
        <call-query href="getDataForQuarterlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="addBandwidthStatQuarterlySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_BANDWIDTH_STAT_QTR_FACT (BAM_SERVER_ID, BAM_QTR_ID, BAM_BANDWIDTH_NAME, BAM_INCOMING_BANDWIDTH_GB, BAM_INCOMING_BANDWIDTH_MB, BAM_INCOMING_BANDWIDTH_KB, BAM_INCOMING_BANDWIDTH_B, BAM_OUTGOING_BANDWIDTH_GB, BAM_OUTGOING_BANDWIDTH_MB, BAM_OUTGOING_BANDWIDTH_KB, BAM_OUTGOING_BANDWIDTH_B) VALUES (:serverId, :qtrId, :BandwidthName, :incomingBandwidth DIV (1024*1024*1024), MOD(:incomingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:incomingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:incomingBandwidth, 1024), :outgoingBandwidth DIV (1024*1024*1024), MOD(:outgoingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:outgoingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:outgoingBandwidth, 1024))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="qtrId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="incomingBandwidth" sqlType="BIGINT" type=""/>
        <param name="outgoingBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addBandwidthStatQuarterlySummary">
        <call-query href="addBandwidthStatQuarterlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="qtrId" query-param="qtrId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="incomingBandwidth" query-param="incomingBandwidth"/>
            <with-param name="outgoingBandwidth" query-param="outgoingBandwidth"/>
        </call-query>
    </operation>
    
    <query id="getDataForYearlySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, (SUM(BAM_INCOMING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_INCOMING_BANDWIDTH_KB)*1024 + SUM(BAM_INCOMING_BANDWIDTH_B)) AS INCOMING_BANDWIDTH, (SUM(BAM_OUTGOING_BANDWIDTH_GB)*1024*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_MB)*1024*1024 + SUM(BAM_OUTGOING_BANDWIDTH_KB)*1024 + SUM(BAM_OUTGOING_BANDWIDTH_B)) AS OUTGOING_BANDWIDTH FROM BAM_BANDWIDTH_STAT_QTR_FACT WHERE BAM_SERVER_ID = ? AND BAM_QTR_ID IN (SELECT BAM_ID FROM BAM_QTR_DIM WHERE BAM_START_TIMESTAMP &gt;= ? AND BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthStatValues"  rowName="bandwidthStatValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_BANDWIDTH_NAME"/>
            <element name="IncomingBandwidth" column="INCOMING_BANDWIDTH" xsdType="xs:long"/>
            <element name="OutgoingBandwidth" column="OUTGOING_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getDataForYearlySummary">
        <call-query href="getDataForYearlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
    <query id="addBandwidthStatYearlySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_BANDWIDTH_STAT_YEAR_FACT (BAM_SERVER_ID, BAM_YEAR_ID, BAM_BANDWIDTH_NAME, BAM_INCOMING_BANDWIDTH_GB, BAM_INCOMING_BANDWIDTH_MB, BAM_INCOMING_BANDWIDTH_KB, BAM_INCOMING_BANDWIDTH_B, BAM_OUTGOING_BANDWIDTH_GB, BAM_OUTGOING_BANDWIDTH_MB, BAM_OUTGOING_BANDWIDTH_KB, BAM_OUTGOING_BANDWIDTH_B) VALUES (:serverId, :yearId, :BandwidthName, :incomingBandwidth DIV (1024*1024*1024), MOD(:incomingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:incomingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:incomingBandwidth, 1024), :outgoingBandwidth DIV (1024*1024*1024), MOD(:outgoingBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:outgoingBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:outgoingBandwidth, 1024))
        </sql>
        <param name="serverId" sqlType="INTEGER" type=""/>
        <param name="yearId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="incomingBandwidth" sqlType="BIGINT" type=""/>
        <param name="outgoingBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addBandwidthStatYearlySummary">
        <call-query href="addBandwidthStatYearlySummaryQ">
            <with-param name="serverId" query-param="serverId"/>
            <with-param name="yearId" query-param="yearId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="incomingBandwidth" query-param="incomingBandwidth"/>
            <with-param name="outgoingBandwidth" query-param="outgoingBandwidth"/>
        </call-query>
    </operation>
    
    <query id="getLatestDailyRegistryBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_DAY_DIM WHERE BAM_ID = (SELECT BAM_DAY_ID FROM BAM_REG_BANDWIDTH_USAGE_DAY_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_REG_BANDWIDTH_USAGE_DAY_FACT WHERE BAM_TENANT_ID=?))
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestDailyRegistryBandwidthSummaryPeriodId">
        <call-query href="getLatestDailyRegistryBandwidthSummaryPeriodIdQ">
            <with-param name="tenantId" query-param="tenantId"/>
        </call-query>
    </operation>
    
    <query id="getLatestMonthlyRegistryBandwidthSummaryPeriodIdQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_START_TIMESTAMP FROM BAM_MONTH_DIM WHERE BAM_ID = (SELECT BAM_MONTH_ID FROM BAM_REG_BANDWIDTH_USAGE_MONTH_FACT WHERE BAM_ID=(SELECT MAX(BAM_ID) FROM BAM_REG_BANDWIDTH_USAGE_MONTH_FACT WHERE BAM_TENANT_ID=?))
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <result element="summaryTimes"  rowName="summaryTime" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="startTime" column="BAM_START_TIMESTAMP" xsdType="xs:dateTime"/>
        </result>
    </query>
    <operation name="getLatestMonthlyRegistryBandwidthSummaryPeriodId">
        <call-query href="getLatestMonthlyRegistryBandwidthSummaryPeriodIdQ">
            <with-param name="tenantId" query-param="tenantId"/>
        </call-query>
    </operation>
    
    <query id="addRegistryBandwidthUsageDailySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_REG_BANDWIDTH_USAGE_DAY_FACT (BAM_TENANT_ID, BAM_DAY_ID, BAM_BANDWIDTH_NAME, BAM_REG_BANDWIDTH_GB, BAM_REG_BANDWIDTH_MB, BAM_REG_BANDWIDTH_KB, BAM_REG_BANDWIDTH_B, BAM_REG_HISTORY_BANDWIDTH_GB, BAM_REG_HISTORY_BANDWIDTH_MB, BAM_REG_HISTORY_BANDWIDTH_KB, BAM_REG_HISTORY_BANDWIDTH_B) VALUES (:tenantId, :dayId, :BandwidthName, :registryBandwidth DIV (1024*1024*1024), MOD(:registryBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:registryBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:registryBandwidth, 1024), :registryHistoryBandwidth DIV (1024*1024*1024), MOD(:registryHistoryBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:registryHistoryBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:registryHistoryBandwidth, 1024))
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="dayId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="registryBandwidth" sqlType="BIGINT" type=""/>
        <param name="registryHistoryBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addRegistryBandwidthUsageDailySummary">
        <call-query href="addRegistryBandwidthUsageDailySummaryQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="dayId" query-param="dayId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="registryBandwidth" query-param="registryBandwidth"/>
            <with-param name="registryHistoryBandwidth" query-param="registryHistoryBandwidth"/>
        </call-query>
    </operation>
    
    <query id="addRegistryBandwidthUsageMonthlySummaryQ" useConfig="bamDataSource">
        <sql>
            INSERT INTO BAM_REG_BANDWIDTH_USAGE_MONTH_FACT (BAM_TENANT_ID, BAM_MONTH_ID, BAM_BANDWIDTH_NAME, BAM_REG_BANDWIDTH_GB, BAM_REG_BANDWIDTH_MB, BAM_REG_BANDWIDTH_KB, BAM_REG_BANDWIDTH_B, BAM_REG_HISTORY_BANDWIDTH_GB, BAM_REG_HISTORY_BANDWIDTH_MB, BAM_REG_HISTORY_BANDWIDTH_KB, BAM_REG_HISTORY_BANDWIDTH_B) VALUES (:tenantId, :monthId, :BandwidthName, :registryBandwidth DIV (1024*1024*1024), MOD(:registryBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:registryBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:registryBandwidth, 1024), :registryHistoryBandwidth DIV (1024*1024*1024), MOD(:registryHistoryBandwidth,1024*1024*1024) DIV (1024*1024), MOD(MOD(:registryHistoryBandwidth,1024*1024*1024), 1024*1024) DIV 1024, MOD(:registryHistoryBandwidth, 1024))
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="monthId" sqlType="INTEGER" type=""/>
        <param name="BandwidthName" sqlType="STRING" type=""/>
        <param name="registryBandwidth" sqlType="BIGINT" type=""/>
        <param name="registryHistoryBandwidth" sqlType="BIGINT" type=""/>
    </query>
    <operation name="addRegistryBandwidthUsageMonthlySummary">
        <call-query href="addRegistryBandwidthUsageMonthlySummaryQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="monthId" query-param="monthId"/>
            <with-param name="BandwidthName" query-param="BandwidthName"/>
            <with-param name="registryBandwidth" query-param="registryBandwidth"/>
            <with-param name="registryHistoryBandwidth" query-param="registryHistoryBandwidth"/>
        </call-query>
    </operation>
    
    <query id="getRegistryBandwidthUsageQ" useConfig="registryDataSource">
        <sql>
            SELECT SUM(LENGTH(REG_CONTENT_DATA)) AS BANDWIDTH FROM REG_CONTENT WHERE REG_TENANT_ID=?;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <result element="bandwidthUsages"  rowName="bandwidthUsage" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="bandwidth" column="BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getRegistryBandwidthUsage">
        <call-query href="getRegistryBandwidthUsageQ">
            <with-param name="tenantId" query-param="tenantId"/>
        </call-query>
    </operation>
    
    <query id="getRegistryHistoryBandwidthUsageQ" useConfig="registryDataSource">
        <sql>
            SELECT SUM(LENGTH(REG_CONTENT_DATA)) AS BANDWIDTH FROM REG_CONTENT_HISTORY WHERE REG_TENANT_ID=?;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <result element="bandwidthUsages"  rowName="bandwidthUsage" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="bandwidth" column="BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getRegistryHistoryBandwidthUsage">
        <call-query href="getRegistryHistoryBandwidthUsageQ">
            <with-param name="tenantId" query-param="tenantId"/>
        </call-query>
    </operation>
    
    <query id="getRegistryBandwidthUsageForMonthlySummaryQ" useConfig="bamDataSource">
        <sql>
            SELECT BAM_BANDWIDTH_NAME, MAX((BAM_REG_BANDWIDTH_GB*1024*1024*1024) + (BAM_REG_BANDWIDTH_MB*1024*1024) + (BAM_REG_BANDWIDTH_KB*1024) + BAM_REG_BANDWIDTH_B) AS REG_BANDWIDTH, MAX((BAM_REG_HISTORY_BANDWIDTH_GB*1024*1024*1024) + (BAM_REG_HISTORY_BANDWIDTH_MB*1024*1024) + (BAM_REG_HISTORY_BANDWIDTH_KB*1024) + BAM_REG_HISTORY_BANDWIDTH_B) AS REG_HISTORY_BANDWIDTH FROM BAM_REG_BANDWIDTH_USAGE_DAY_FACT WHERE BAM_TENANT_ID = ? AND BAM_DAY_ID IN (SELECT BAM_ID FROM BAM_DAY_DIM WHERE BAM_START_TIMESTAMP &gt;= ? AND BAM_START_TIMESTAMP &lt; ?) GROUP BY BAM_BANDWIDTH_NAME;
        </sql>
        <param name="tenantId" sqlType="INTEGER" type=""/>
        <param name="startTimestamp" sqlType="TIMESTAMP" type=""/>
        <param name="endTimestamp" sqlType="TIMESTAMP" type=""/>
        <result element="bandwidthUsageValues"  rowName="bandwidthUsageValue" defaultNamespace="http://bam.carbon.wso2.org">
            <element name="keyName" column="BAM_BANDWIDTH_NAME"/>
            <element name="registryBandwidth" column="REG_BANDWIDTH" xsdType="xs:long"/>
            <element name="registryHistoryBandwidth" column="REG_HISTORY_BANDWIDTH" xsdType="xs:long"/>
        </result>
    </query>
    <operation name="getRegistryBandwidthUsageForMonthlySummary">
        <call-query href="getRegistryBandwidthUsageForMonthlySummaryQ">
            <with-param name="tenantId" query-param="tenantId"/>
            <with-param name="startTimestamp" query-param="startTimestamp"/>
            <with-param name="endTimestamp" query-param="endTimestamp"/>
        </call-query>
    </operation>
    
</data>
