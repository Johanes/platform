<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:tns="http://service.logging.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2219="http://data.service.logging.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2217="http://service.logging.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://service.logging.carbon.wso2.org">
    <wsdl:documentation>LogViewer</wsdl:documentation>
    <wsdl:types>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.logging.carbon.wso2.org/xsd">
            <xs:complexType name="LogViewerException">
                <xs:sequence />
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax2220="http://data.service.logging.carbon.wso2.org/xsd" xmlns:ax2218="http://service.logging.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd">
            <xs:import namespace="http://service.logging.carbon.wso2.org/xsd" />
            <xs:import namespace="http://data.service.logging.carbon.wso2.org/xsd" />
            <xs:element name="isValidTenantDomain">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isValidTenantDomainResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LogViewerException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ns1:Exception" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:complexType name="Exception">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="isStratosService">
                <xs:complexType>
                    <xs:sequence />
                </xs:complexType>
            </xs:element>
            <xs:element name="isStratosServiceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isSTSyslogConfig">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isSTSyslogConfigResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isManager">
                <xs:complexType>
                    <xs:sequence />
                </xs:complexType>
            </xs:element>
            <xs:element name="isManagerResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isLogsConfigured">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isLogsConfiguredResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isDataFromSysLog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isDataFromSysLogResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isCassandraConfigured">
                <xs:complexType>
                    <xs:sequence />
                </xs:complexType>
            </xs:element>
            <xs:element name="isCassandraConfiguredResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LogViewerLogViewerException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ax2218:LogViewerException" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getTenantApplicationNames">
                <xs:complexType>
                    <xs:sequence />
                </xs:complexType>
            </xs:element>
            <xs:element name="getTenantApplicationNamesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSystemLogs">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="start" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="end" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logger" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="priority" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logIndex" type="xs:int" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSystemLogsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2220:LogEvent" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceNames">
                <xs:complexType>
                    <xs:sequence />
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceNamesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedLogMessage">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="pageNumber" type="xs:int" />
                        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logIndex" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="maxLines" type="xs:int" />
                        <xs:element minOccurs="0" name="start" type="xs:int" />
                        <xs:element minOccurs="0" name="end" type="xs:int" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedLogMessageResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2220:PaginatedLogMessage" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedLogInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="pageNumber" type="xs:int" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedLogInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2220:PaginatedLogInfo" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedBottomUpLogMessage">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="pageNumber" type="xs:int" />
                        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="maxLines" type="xs:int" />
                        <xs:element minOccurs="0" name="start" type="xs:int" />
                        <xs:element minOccurs="0" name="end" type="xs:int" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPaginatedBottomUpLogMessageResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2220:PaginatedLogMessage" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLogs">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLogsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2220:LogMessage" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLogLinesFromFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="maxLogs" type="xs:int" />
                        <xs:element minOccurs="0" name="start" type="xs:int" />
                        <xs:element minOccurs="0" name="end" type="xs:int" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLogLinesFromFileResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLineNumbers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLineNumbersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:int" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getApplicationLogs">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="start" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="end" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logger" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="priority" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="logIndex" type="xs:int" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getApplicationLogsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2220:LogEvent" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="downloadLogFiles">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="downloadLogFilesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.service.logging.carbon.wso2.org/xsd">
            <xs:complexType name="LogEvent">
                <xs:sequence>
                    <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="instance" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="ip" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="key" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="logTime" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="logger" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="priority" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="stacktrace" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="tenantId" nillable="true" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PaginatedLogMessage">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="logInfo" nillable="true" type="ax2219:LogMessage" />
                    <xs:element minOccurs="0" name="numberOfPages" type="xs:int" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LogMessage">
                <xs:sequence>
                    <xs:element minOccurs="0" name="logMessage" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PaginatedLogInfo">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="logInfo" nillable="true" type="ax2219:LogInfo" />
                    <xs:element minOccurs="0" name="numberOfPages" type="xs:int" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LogInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="fileSize" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="logDate" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="logName" nillable="true" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="isLogsConfiguredRequest">
        <wsdl:part name="parameters" element="ns1:isLogsConfigured" />
    </wsdl:message>
    <wsdl:message name="isLogsConfiguredResponse">
        <wsdl:part name="parameters" element="ns1:isLogsConfiguredResponse" />
    </wsdl:message>
    <wsdl:message name="LogViewerException">
        <wsdl:part name="parameters" element="ns1:LogViewerException" />
    </wsdl:message>
    <wsdl:message name="downloadLogFilesRequest">
        <wsdl:part name="parameters" element="ns1:downloadLogFiles" />
    </wsdl:message>
    <wsdl:message name="downloadLogFilesResponse">
        <wsdl:part name="parameters" element="ns1:downloadLogFilesResponse" />
    </wsdl:message>
    <wsdl:message name="getTenantApplicationNamesRequest">
        <wsdl:part name="parameters" element="ns1:getTenantApplicationNames" />
    </wsdl:message>
    <wsdl:message name="getTenantApplicationNamesResponse">
        <wsdl:part name="parameters" element="ns1:getTenantApplicationNamesResponse" />
    </wsdl:message>
    <wsdl:message name="LogViewerLogViewerException">
        <wsdl:part name="parameters" element="ns1:LogViewerLogViewerException" />
    </wsdl:message>
    <wsdl:message name="getApplicationLogsRequest">
        <wsdl:part name="parameters" element="ns1:getApplicationLogs" />
    </wsdl:message>
    <wsdl:message name="getApplicationLogsResponse">
        <wsdl:part name="parameters" element="ns1:getApplicationLogsResponse" />
    </wsdl:message>
    <wsdl:message name="getSystemLogsRequest">
        <wsdl:part name="parameters" element="ns1:getSystemLogs" />
    </wsdl:message>
    <wsdl:message name="getSystemLogsResponse">
        <wsdl:part name="parameters" element="ns1:getSystemLogsResponse" />
    </wsdl:message>
    <wsdl:message name="isManagerRequest">
        <wsdl:part name="parameters" element="ns1:isManager" />
    </wsdl:message>
    <wsdl:message name="isManagerResponse">
        <wsdl:part name="parameters" element="ns1:isManagerResponse" />
    </wsdl:message>
    <wsdl:message name="isCassandraConfiguredRequest">
        <wsdl:part name="parameters" element="ns1:isCassandraConfigured" />
    </wsdl:message>
    <wsdl:message name="isCassandraConfiguredResponse">
        <wsdl:part name="parameters" element="ns1:isCassandraConfiguredResponse" />
    </wsdl:message>
    <wsdl:message name="getLogLinesFromFileRequest">
        <wsdl:part name="parameters" element="ns1:getLogLinesFromFile" />
    </wsdl:message>
    <wsdl:message name="getLogLinesFromFileResponse">
        <wsdl:part name="parameters" element="ns1:getLogLinesFromFileResponse" />
    </wsdl:message>
    <wsdl:message name="getLineNumbersRequest">
        <wsdl:part name="parameters" element="ns1:getLineNumbers" />
    </wsdl:message>
    <wsdl:message name="getLineNumbersResponse">
        <wsdl:part name="parameters" element="ns1:getLineNumbersResponse" />
    </wsdl:message>
    <wsdl:message name="getServiceNamesRequest">
        <wsdl:part name="parameters" element="ns1:getServiceNames" />
    </wsdl:message>
    <wsdl:message name="getServiceNamesResponse">
        <wsdl:part name="parameters" element="ns1:getServiceNamesResponse" />
    </wsdl:message>
    <wsdl:message name="getLogsRequest">
        <wsdl:part name="parameters" element="ns1:getLogs" />
    </wsdl:message>
    <wsdl:message name="getLogsResponse">
        <wsdl:part name="parameters" element="ns1:getLogsResponse" />
    </wsdl:message>
    <wsdl:message name="getPaginatedLogMessageRequest">
        <wsdl:part name="parameters" element="ns1:getPaginatedLogMessage" />
    </wsdl:message>
    <wsdl:message name="getPaginatedLogMessageResponse">
        <wsdl:part name="parameters" element="ns1:getPaginatedLogMessageResponse" />
    </wsdl:message>
    <wsdl:message name="getPaginatedLogInfoRequest">
        <wsdl:part name="parameters" element="ns1:getPaginatedLogInfo" />
    </wsdl:message>
    <wsdl:message name="getPaginatedLogInfoResponse">
        <wsdl:part name="parameters" element="ns1:getPaginatedLogInfoResponse" />
    </wsdl:message>
    <wsdl:message name="isDataFromSysLogRequest">
        <wsdl:part name="parameters" element="ns1:isDataFromSysLog" />
    </wsdl:message>
    <wsdl:message name="isDataFromSysLogResponse">
        <wsdl:part name="parameters" element="ns1:isDataFromSysLogResponse" />
    </wsdl:message>
    <wsdl:message name="isSTSyslogConfigRequest">
        <wsdl:part name="parameters" element="ns1:isSTSyslogConfig" />
    </wsdl:message>
    <wsdl:message name="isSTSyslogConfigResponse">
        <wsdl:part name="parameters" element="ns1:isSTSyslogConfigResponse" />
    </wsdl:message>
    <wsdl:message name="isValidTenantDomainRequest">
        <wsdl:part name="parameters" element="ns1:isValidTenantDomain" />
    </wsdl:message>
    <wsdl:message name="isValidTenantDomainResponse">
        <wsdl:part name="parameters" element="ns1:isValidTenantDomainResponse" />
    </wsdl:message>
    <wsdl:message name="isStratosServiceRequest">
        <wsdl:part name="parameters" element="ns1:isStratosService" />
    </wsdl:message>
    <wsdl:message name="isStratosServiceResponse">
        <wsdl:part name="parameters" element="ns1:isStratosServiceResponse" />
    </wsdl:message>
    <wsdl:message name="getPaginatedBottomUpLogMessageRequest">
        <wsdl:part name="parameters" element="ns1:getPaginatedBottomUpLogMessage" />
    </wsdl:message>
    <wsdl:message name="getPaginatedBottomUpLogMessageResponse">
        <wsdl:part name="parameters" element="ns1:getPaginatedBottomUpLogMessageResponse" />
    </wsdl:message>
    <wsdl:portType name="LogViewerPortType">
        <wsdl:operation name="isLogsConfigured">
            <wsdl:input message="tns:isLogsConfiguredRequest" wsaw:Action="urn:isLogsConfigured" />
            <wsdl:output message="tns:isLogsConfiguredResponse" wsaw:Action="urn:isLogsConfiguredResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:isLogsConfiguredLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="downloadLogFiles">
            <wsdl:input message="tns:downloadLogFilesRequest" wsaw:Action="urn:downloadLogFiles" />
            <wsdl:output message="tns:downloadLogFilesResponse" wsaw:Action="urn:downloadLogFilesResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:downloadLogFilesLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getTenantApplicationNames">
            <wsdl:input message="tns:getTenantApplicationNamesRequest" wsaw:Action="urn:getTenantApplicationNames" />
            <wsdl:output message="tns:getTenantApplicationNamesResponse" wsaw:Action="urn:getTenantApplicationNamesResponse" />
            <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getTenantApplicationNamesLogViewerLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getApplicationLogs">
            <wsdl:input message="tns:getApplicationLogsRequest" wsaw:Action="urn:getApplicationLogs" />
            <wsdl:output message="tns:getApplicationLogsResponse" wsaw:Action="urn:getApplicationLogsResponse" />
            <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getApplicationLogsLogViewerLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getSystemLogs">
            <wsdl:input message="tns:getSystemLogsRequest" wsaw:Action="urn:getSystemLogs" />
            <wsdl:output message="tns:getSystemLogsResponse" wsaw:Action="urn:getSystemLogsResponse" />
            <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getSystemLogsLogViewerLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="isManager">
            <wsdl:input message="tns:isManagerRequest" wsaw:Action="urn:isManager" />
            <wsdl:output message="tns:isManagerResponse" wsaw:Action="urn:isManagerResponse" />
        </wsdl:operation>
        <wsdl:operation name="isCassandraConfigured">
            <wsdl:input message="tns:isCassandraConfiguredRequest" wsaw:Action="urn:isCassandraConfigured" />
            <wsdl:output message="tns:isCassandraConfiguredResponse" wsaw:Action="urn:isCassandraConfiguredResponse" />
        </wsdl:operation>
        <wsdl:operation name="getLogLinesFromFile">
            <wsdl:input message="tns:getLogLinesFromFileRequest" wsaw:Action="urn:getLogLinesFromFile" />
            <wsdl:output message="tns:getLogLinesFromFileResponse" wsaw:Action="urn:getLogLinesFromFileResponse" />
            <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLogLinesFromFileLogViewerLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getLineNumbers">
            <wsdl:input message="tns:getLineNumbersRequest" wsaw:Action="urn:getLineNumbers" />
            <wsdl:output message="tns:getLineNumbersResponse" wsaw:Action="urn:getLineNumbersResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getLineNumbersLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getServiceNames">
            <wsdl:input message="tns:getServiceNamesRequest" wsaw:Action="urn:getServiceNames" />
            <wsdl:output message="tns:getServiceNamesResponse" wsaw:Action="urn:getServiceNamesResponse" />
            <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getServiceNamesLogViewerLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getLogs">
            <wsdl:input message="tns:getLogsRequest" wsaw:Action="urn:getLogs" />
            <wsdl:output message="tns:getLogsResponse" wsaw:Action="urn:getLogsResponse" />
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogMessage">
            <wsdl:input message="tns:getPaginatedLogMessageRequest" wsaw:Action="urn:getPaginatedLogMessage" />
            <wsdl:output message="tns:getPaginatedLogMessageResponse" wsaw:Action="urn:getPaginatedLogMessageResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getPaginatedLogMessageLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogInfo">
            <wsdl:input message="tns:getPaginatedLogInfoRequest" wsaw:Action="urn:getPaginatedLogInfo" />
            <wsdl:output message="tns:getPaginatedLogInfoResponse" wsaw:Action="urn:getPaginatedLogInfoResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getPaginatedLogInfoLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="isDataFromSysLog">
            <wsdl:input message="tns:isDataFromSysLogRequest" wsaw:Action="urn:isDataFromSysLog" />
            <wsdl:output message="tns:isDataFromSysLogResponse" wsaw:Action="urn:isDataFromSysLogResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:isDataFromSysLogLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="isSTSyslogConfig">
            <wsdl:input message="tns:isSTSyslogConfigRequest" wsaw:Action="urn:isSTSyslogConfig" />
            <wsdl:output message="tns:isSTSyslogConfigResponse" wsaw:Action="urn:isSTSyslogConfigResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:isSTSyslogConfigLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="isValidTenantDomain">
            <wsdl:input message="tns:isValidTenantDomainRequest" wsaw:Action="urn:isValidTenantDomain" />
            <wsdl:output message="tns:isValidTenantDomainResponse" wsaw:Action="urn:isValidTenantDomainResponse" />
        </wsdl:operation>
        <wsdl:operation name="isStratosService">
            <wsdl:input message="tns:isStratosServiceRequest" wsaw:Action="urn:isStratosService" />
            <wsdl:output message="tns:isStratosServiceResponse" wsaw:Action="urn:isStratosServiceResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:isStratosServiceLogViewerException" />
        </wsdl:operation>
        <wsdl:operation name="getPaginatedBottomUpLogMessage">
            <wsdl:input message="tns:getPaginatedBottomUpLogMessageRequest" wsaw:Action="urn:getPaginatedBottomUpLogMessage" />
            <wsdl:output message="tns:getPaginatedBottomUpLogMessageResponse" wsaw:Action="urn:getPaginatedBottomUpLogMessageResponse" />
            <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getPaginatedBottomUpLogMessageLogViewerException" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="LogViewerSoap11Binding" type="tns:LogViewerPortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="isLogsConfigured">
            <soap:operation soapAction="urn:isLogsConfigured" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="downloadLogFiles">
            <soap:operation soapAction="urn:downloadLogFiles" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSystemLogs">
            <soap:operation soapAction="urn:getSystemLogs" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getTenantApplicationNames">
            <soap:operation soapAction="urn:getTenantApplicationNames" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isManager">
            <soap:operation soapAction="urn:isManager" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getApplicationLogs">
            <soap:operation soapAction="urn:getApplicationLogs" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isCassandraConfigured">
            <soap:operation soapAction="urn:isCassandraConfigured" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getLineNumbers">
            <soap:operation soapAction="urn:getLineNumbers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getLogLinesFromFile">
            <soap:operation soapAction="urn:getLogLinesFromFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceNames">
            <soap:operation soapAction="urn:getServiceNames" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogMessage">
            <soap:operation soapAction="urn:getPaginatedLogMessage" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getLogs">
            <soap:operation soapAction="urn:getLogs" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogInfo">
            <soap:operation soapAction="urn:getPaginatedLogInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isDataFromSysLog">
            <soap:operation soapAction="urn:isDataFromSysLog" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isSTSyslogConfig">
            <soap:operation soapAction="urn:isSTSyslogConfig" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isValidTenantDomain">
            <soap:operation soapAction="urn:isValidTenantDomain" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isStratosService">
            <soap:operation soapAction="urn:isStratosService" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedBottomUpLogMessage">
            <soap:operation soapAction="urn:getPaginatedBottomUpLogMessage" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="LogViewerSoap12Binding" type="tns:LogViewerPortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="isLogsConfigured">
            <soap12:operation soapAction="urn:isLogsConfigured" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="downloadLogFiles">
            <soap12:operation soapAction="urn:downloadLogFiles" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSystemLogs">
            <soap12:operation soapAction="urn:getSystemLogs" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap12:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getTenantApplicationNames">
            <soap12:operation soapAction="urn:getTenantApplicationNames" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap12:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isManager">
            <soap12:operation soapAction="urn:isManager" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getApplicationLogs">
            <soap12:operation soapAction="urn:getApplicationLogs" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap12:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isCassandraConfigured">
            <soap12:operation soapAction="urn:isCassandraConfigured" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getLineNumbers">
            <soap12:operation soapAction="urn:getLineNumbers" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getLogLinesFromFile">
            <soap12:operation soapAction="urn:getLogLinesFromFile" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap12:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceNames">
            <soap12:operation soapAction="urn:getServiceNames" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerLogViewerException">
                <soap12:fault use="literal" name="LogViewerLogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogMessage">
            <soap12:operation soapAction="urn:getPaginatedLogMessage" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getLogs">
            <soap12:operation soapAction="urn:getLogs" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogInfo">
            <soap12:operation soapAction="urn:getPaginatedLogInfo" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isDataFromSysLog">
            <soap12:operation soapAction="urn:isDataFromSysLog" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isSTSyslogConfig">
            <soap12:operation soapAction="urn:isSTSyslogConfig" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isValidTenantDomain">
            <soap12:operation soapAction="urn:isValidTenantDomain" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isStratosService">
            <soap12:operation soapAction="urn:isStratosService" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedBottomUpLogMessage">
            <soap12:operation soapAction="urn:getPaginatedBottomUpLogMessage" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="LogViewerException">
                <soap12:fault use="literal" name="LogViewerException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="LogViewerHttpBinding" type="tns:LogViewerPortType">
        <http:binding verb="POST" />
        <wsdl:operation name="isLogsConfigured">
            <http:operation location="isLogsConfigured" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="downloadLogFiles">
            <http:operation location="downloadLogFiles" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSystemLogs">
            <http:operation location="getSystemLogs" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getTenantApplicationNames">
            <http:operation location="getTenantApplicationNames" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isManager">
            <http:operation location="isManager" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getApplicationLogs">
            <http:operation location="getApplicationLogs" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isCassandraConfigured">
            <http:operation location="isCassandraConfigured" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getLineNumbers">
            <http:operation location="getLineNumbers" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getLogLinesFromFile">
            <http:operation location="getLogLinesFromFile" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceNames">
            <http:operation location="getServiceNames" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogMessage">
            <http:operation location="getPaginatedLogMessage" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getLogs">
            <http:operation location="getLogs" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedLogInfo">
            <http:operation location="getPaginatedLogInfo" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isDataFromSysLog">
            <http:operation location="isDataFromSysLog" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isSTSyslogConfig">
            <http:operation location="isSTSyslogConfig" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isValidTenantDomain">
            <http:operation location="isValidTenantDomain" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isStratosService">
            <http:operation location="isStratosService" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPaginatedBottomUpLogMessage">
            <http:operation location="getPaginatedBottomUpLogMessage" />
            <wsdl:input>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="LogViewer">
        <wsdl:port name="LogViewerHttpsSoap11Endpoint" binding="tns:LogViewerSoap11Binding">
            <soap:address location="https://192.168.1.2:9443/services/LogViewer.LogViewerHttpsSoap11Endpoint/" />
        </wsdl:port>
        <wsdl:port name="LogViewerHttpsSoap12Endpoint" binding="tns:LogViewerSoap12Binding">
            <soap12:address location="https://192.168.1.2:9443/services/LogViewer.LogViewerHttpsSoap12Endpoint/" />
        </wsdl:port>
        <wsdl:port name="LogViewerHttpsEndpoint" binding="tns:LogViewerHttpBinding">
            <http:address location="https://192.168.1.2:9443/services/LogViewer.LogViewerHttpsEndpoint/" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
