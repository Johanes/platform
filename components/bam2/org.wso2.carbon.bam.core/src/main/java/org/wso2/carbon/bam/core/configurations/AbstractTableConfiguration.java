/**
 * Copyright (c) 2009, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.wso2.carbon.bam.core.configurations;

import java.util.ArrayList;
import java.util.List;

public abstract class AbstractTableConfiguration implements TableConfiguration {
    
    private final String tableName;

    private final DataSourceType dataSourceType;
    
    private final List<String> columns;

    private boolean primaryTable;

    private List<String> secondaryTables;

    private boolean autoGenerated;

    public AbstractTableConfiguration(String tableName, List<String> columns, 
                                      DataSourceType dataSourceType) {
        this.tableName = tableName;
        this.columns = columns;
        this.dataSourceType = dataSourceType;
        this.secondaryTables = new ArrayList<String>();
    }

    @Override
    public String getTableName() {
        return tableName;
    }

    @Override
    public DataSourceType getDataSourceType() {
        return dataSourceType;
    }
    
    public List<String> getColumns() {
        return columns;
    }

    public void setPrimaryTable(boolean primaryTable) {
        this.primaryTable = primaryTable;
    }

    public boolean isPrimaryTable() {
        return primaryTable;
    }

    public void setSecondaryTables(List<String> secondaryTables) {
        this.secondaryTables = secondaryTables;
    }

    public List<String> getSecondaryTables() {
        return secondaryTables;
    }

    public void setAutoGenerated(boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }

    public boolean getAutoGenerated() {
        return autoGenerated;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof AbstractTableConfiguration)) {
            return false;
        }

        AbstractTableConfiguration that = (AbstractTableConfiguration) o;

        if (tableName != null ? !tableName.equals(that.tableName) : that.tableName != null) {
            return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return tableName != null ? tableName.hashCode() : 0;
    }

}
