<%
var data = data || { "$":{ "page":{ "header":{} }, "layout":{} } };

var includeJags = function (jags) {
    var i = 0;
    if (typeof jags == "array") {
        var length = jags.length;
        for (i = 0; i < length; i++) {
            include(getThemeFile(jags[i]));
        }
    } else {
        include(getThemeFile(jags));
    }
};

var getTheme = function () {
    //TODO : remove following lines if theme switching need to be avoided
    var theme = request.getParameter("theme");
    if (theme) {
        return theme;
    }
    var site = require("/site/conf/site.json");
    return site.theme;
};

var getThemesPath = function () {
    return "/site/themes/";
};

var getThemePath = function () {
    var site = require("/site/conf/site.json");
    return getThemesPath() + getTheme() + "/";
};

var getDefaultThemePath = function () {
    return getThemesPath() + "default/";
};

var getTemplatePath = function () {
    return getThemePath() + "tmpl/";
};

var getThemeFile = function (path) {
    var prefix = getThemePath();
    var def = getDefaultThemePath();
    var tmpPath = prefix + path;
    var file = new File(tmpPath);
    return file.exists ? tmpPath : def + path;
};

var renderLayout = function (data, layout) {
    addTemplateData(data, "page", "body", "layouts/" + layout + "/" + layout + ".jag");
    initLayout(data, layout);
    includeJags("layouts/page.jag");
};

var initLayout = function (data, layout, theme) {
    var path = "layouts/" + layout + "/initializer.js";
    path = theme ? getThemesPath() + theme + "/" + path : getThemeFile(path);
    var initializer = require(path);
    initializer.initialize(data);
};

var initTemplate = function (data, template, theme) {
    var path = "tmpl/" + template + "/initializer.js";
    path = theme ? getThemesPath() + theme + "/" + path : getThemeFile(path);
    var initializer = require(path);
    var args = Array.prototype.slice.call(arguments, 2);
    args.unshift(data);
    initializer.initialize.apply(this, args);
};

var addHeaderCSS = function (data, css) {
    css = getThemeFile(css);
    var header = data.$.page.header;
    var list = header.css || [];
    list.push(css);
    header.css = list;
};

var addHeaderJS = function (data, js) {
    js = getThemeFile(js);
    var header = data.$.page.header;
    var list = header.js || [];
    list.push(js);
    header.js = list;
};

var addHeaderJags = function (data, jags) {
    var header = data.$.page.header;
    var list = header.jags || [];
    list.push(jags);
    header.jags = list;
};

var addHeaderCode = function (data, code) {
    var header = data.$.page.header;
    var list = header.code || [];
    list.push(code);
    header.code = list;
};

var addTemplateData = function (data, template, key, value) {
    template = template.replace("-", "_");
    var obj = data[template] || {};
    obj[key] = value;
    data[template] = obj;
};

var getTemplateData = function (data, template, key) {
    template = template.replace("-", "_");
    var obj = data[template];
    if (obj == null) {
        return null;
    }
    return key ? obj[key] : obj;
};

var addPageData = function (data, key, value) {
    data.$.page[key] = value;
};

var getPageData = function (data, key) {
    return key ? data.$.page[key] : data.$.page;
};

var addLayoutData = function (data, key, value) {
    data.$.layout[key] = value;
};

var getLayoutData = function (data, key) {
    return key ? data.$.layout[key] : data.$.layout;
};

%>