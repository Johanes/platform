<%
var getSubscribersOfAPI = function (api) {
    var i, length, subscriber, subscribers,
            list = [],
            log = new Log(),
            provider = jagg.module("greg").getAPIProviderObj();
    try {
        subscribers = provider.getSubscribersOfAPI(api.provider, api.name, api.version);
        if (log.isDebugEnabled()) {
            log.debug("getSubscribersOfAPI : " + stringify(subscribers));
        }
        length = subscribers.length;
        for (i = 0; i < length; i++) {
            subscriber = subscribers[i];
            list.push({
                username:subscriber.userName,
                subscribedDate:subscriber.subscribedDate
            });
        }
        return {
            error:false,
            subscribers:list
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            subscribers:null
        };
    }
};

var getSubscribersOfProvider = function (username) {
    var i, length, subscriber, subscribers,
            list = [],
            log = new Log(),
            provider = jagg.module("greg").getAPIProviderObj();
    try {
        subscribers = provider.getAllAPIUsageByProvider(username);
        if (log.isDebugEnabled()) {
            log.debug("getSubscribersOfAPI : " + stringify(subscribers));
        }
        length = subscribers.length;
        for (i = 0; i < length; i++) {
            subscriber = subscribers[i];
            list.push({
                username:subscriber.userName,
                application:subscriber.application,
                apis:subscriber.apis
            });
        }
        return {
            error:false,
            subscribers:list
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            subscribers:null
        };
    }
};

var getSubscribedAPIs = function (username) {
    var api, apis, i, length,log = new Log(),
            list = [],
            provider = jagg.module("greg").getAPIProviderObj();
    try {
        apis = provider.getSubscribedAPIs(username);
        if (log.isDebugEnabled()) {
            log.debug("getSubscribedAPIs : " + stringify(apis));
        }
        length = apis.length;
        for (i = 0; i < length; i++) {
            api = apis[i];
            list.push({
                name:api.apiName,
                version:api.version,
                lastUpdatedDate:api.updatedDate
            });
        }
        return {
            error:false,
            apis:list
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            apis:null
        };
    }
};
%>