<%
var path;
var action = request.getParameter("action");

include("providerAPI.jag");
if (action != null) {
    if (action == "login") {
        var username = request.getParameter("username");
        var password = request.getParameter("password");
        if (username != null && password != null) {
            print(login(username, password));
        }
    } else if (action == "logout") {
        print(logout());
    } else if (action == "getUser") {
        print(getUser());
    }
    else if (action == "listMyAPIs") {
        //print(getDataJSON(getServicesFunc(),'',''));
        log("listMyAPIs");
    } else if (action == "getServices") {
        print(getServices());
    } else if (action == "getAPIIdentifiers") {
        print(getAPIIdentifiers());
    }
    else if (action == "getProviders") {
        print(getProviders());
    }
    else if (action == "getAPI") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        if (apiName != null && version != null) {
            print(getAPI(apiName, version));
        }
    }
    else if (action == "getProviderAPIVersionUsage"){
         var providerName = request.getParameter("providerName");
         var apiName = request.getParameter("apiName");
         var server = request.getParameter("server");
         if(providerName!=null&&apiName!=null&& server!=null){
         		print(getProviderAPIVersionUsage(providerName, apiName,server));
         }
    }
    else if (action == "getProviderAPIUsage"){
        var server = request.getParameter("server");
        var providerName = request.getParameter("providerName");
        if(providerName!=null&&server!=null){
        		print(getProviderAPIUsage(providerName,server));
        }
   }else if (action == "getProviderAPIUserUsage"){
        var providerName = request.getParameter("providerName");
        var apiName = request.getParameter("apiName");
        var server = request.getParameter("server");
        if(providerName!=null&&apiName!=null&&server!=null){
        		print(getProviderAPIUserUsage(providerName,apiName,server));
        }
   }else if (action == "getProviderAPIVersionLastAccess"){
        var providerName = request.getParameter("providerName");
        var server = request.getParameter("server");
        if(providerName!=null&&server!=null){
        		print(getProviderAPIVersionLastAccess(providerName,server));
        }
   }else if (action == "getProviderAPIServiceTime"){
        var providerName = request.getParameter("providerName");
        var server = request.getParameter("server");
        if(providerName!=null&&server!=null){
        		print(getProviderAPIServiceTime(providerName,server));
        }
   }else if (action == "getAPIsByProvider") {
        print(getAPIsByProvider());
    }
    else if (action == "getId") {
        print(getId());
    }
    else if (action == "setId") {
        var id = request.getParameter("id");
        if (id != null) {
            print(setId(id));
        }
    } else if (action == "getSubscribersOfProvider") {
        print(getSubscribersOfProvider());
    } else if (action == "getSubscribersOfAPI") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        print(getSubscribersOfAPI(apiName, version));
    } else if (action == "getSubscribedAPIs") {
        var username= request.getParameter("username");
        print(getSubscribedAPIs(username));
    }
    else if (action == "saveAPI") {
        var apiData = {};
        apiData.apiName = request.getParameter("apiName");
        apiData.version = request.getParameter("version");
        apiData.description = request.getParameter("description");
        apiData.endpoint = request.getParameter("endpoint");
        apiData.wsdl = request.getParameter("wsdl");
        apiData.tags = request.getParameter("tags");
        apiData.tier = request.getParameter("tier");
        apiData.imageUrl = request.getParameter("apiThumb");
        apiData.context = request.getParameter("context");
        var resCount = new Array();
        if(request.getParameter("resourceCount") != null) {
            var resCount = request.getParameter("resourceCount").split(',');
        }
        var uriTemplateArr = [];
        var uriMethodArr = [];

        for (var i = 0; i < resCount.length; i++) {
            uriTemplateArr.push(request.getParameter("uriTemplate-" + resCount[i]));
            uriMethodArr.push(request.getParameter("resourceMethod-" + resCount[i]))
        }
        apiData.uriTemplateArr= uriTemplateArr;
        apiData.uriMethodArr= uriMethodArr;

        if (apiData.apiName != null && apiData.version != null) {
            print(saveAPI(apiData));
        }
    }
    else if (action == "updateAPI") {
        var apiData = {};
        apiData.apiName = request.getParameter("apiName");
        apiData.version = request.getParameter("version");
        apiData.description = request.getParameter("description");
        apiData.imageUrl = request.getParameter("imageUrl");
        apiData.endpoint = request.getParameter("endpoint");
        apiData.wsdl = request.getParameter("wsdl");
        apiData.tags = request.getParameter("tags");
        apiData.tier= request.getParameter("tier");
        apiData.status = request.getParameter("status");
        apiData.context = request.getParameter("context");
        var resCount = new Array();
        if(request.getParameter("resourceCount") != null) {
            var resCount = request.getParameter("resourceCount").split(',');
        }
        var uriTemplateArr = [];
        var uriMethodArr = [];

        for (var i = 0; i < resCount.length; i++) {
            uriTemplateArr.push(request.getParameter("uriTemplate-" + resCount[i]));
            uriMethodArr.push(request.getParameter("resourceMethod-" + resCount[i]))
        }
        apiData.uriTemplateArr= uriTemplateArr;
        apiData.uriMethodArr= uriMethodArr;

        if (apiData.apiName!= null && apiData.version!= null) {
        print(updateAPI(apiData));
        }
    }
    else if (action == "getAllDocumentation") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        print(getAllDocumentation(apiName, version));
    }

    else if (action == "getInlineContent") {    	
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        var docName = request.getParameter("docName");
        if(apiName !=null && version != null && docName !=null){        	
        print(getInlineContent(apiName, version, docName));}
    }
    else if (action == "addInlineContent") {    	
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        var docName = request.getParameter("docName");
        var docContent = request.getParameter("docContent");
        if(apiName !=null && version != null && docName !=null && docContent !=null){        	
        print(addInlineContent(apiName, version, docName, encodeURI(docContent)));}
    }
    
    else if (action == "addDocumentation") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        var docName = request.getParameter("docName");
        var docType = request.getParameter("docType");
        var summary = request.getParameter("summary");
        var sourceType = request.getParameter("sourceType");
        var sourceUrl = request.getParameter("sourceUrl");
        print(addDocumentation(apiName, version, docName, docType, summary, sourceType, sourceUrl));
    }
    else if (action == "removeDocumentation") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        var docName = request.getParameter("docName");
        var docType = request.getParameter("docType");
        print(removeDocumentation(apiName, version, docName, docType));
    }
    else if (action == "createNewAPIVersion") {
        var apiName = request.getParameter("apiName");
        var version = request.getParameter("version");
        var newVersion = request.getParameter("newVersion");
        print(createNewAPIVersion(apiName, version, newVersion));
    } else if (action == "isContextExist") {
        var context = request.getParameter("context");
        print(isContextExist(context));
    } else if (action == "getAllAPIUsageByProvider") {
        print(getAllAPIUsageByProvider());
    }
}
%>
