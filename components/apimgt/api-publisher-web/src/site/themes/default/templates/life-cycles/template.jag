<% jagg.template("life-cycles", function(inputs, outputs, jagg) {
if(outputs.isPublishPermitted){
        var api = outputs.api;
        var modApi = jagg.module("api");
        var result = modApi.isAPIOlderVersionExist(api);
        var oldExist=result.exist;
 %>

<script type="text/javascript">
function checkValue(element) {
    if ($(element).is(":checked") == false) {
        $(element).attr('value', 'false');
    }
    else {
        $(element).attr('value', 'true');
    }
}
function getSelectedValue(oldStatus) {
    var selObj = document.getElementById('editStatus');
    var selIndex = selObj.selectedIndex;
    var newStatus = selObj.options[selIndex].value;
    if (oldStatus == "CREATED" && newStatus == "PUBLISHED" && <%=oldExist%>) {
        $('#deprecateOldVersionsDiv').show();
        $('#requireResubscriptionDiv').show();
    } else {
        $('#deprecateOldVersionsDiv').hide();
        $('#requireResubscriptionDiv').hide();
    }
}
var initOf_state = '<%=api.status%>';
var initOf_publishToGateway = 'true';
var initOf_deprecateOldVersions = 'false';
var initOf_requireResubscription = 'true';
</script>

<% var i,resCount,rowNums = [];
   var mod = jagg.module("api");
   var apiData={};
   apiData.provider= api.provider;
   apiData.name= api.name;
   apiData.version= api.version;
   var result = mod.getLifeCyclesEvents(apiData);
   var lcs=result.lcs;
%>

<div class="alert alert-error" id="statusAPIError" style="display:none">
<span id="statusErrorSpan"></span>
</div>
<div class="row-fluid">
    <div class="span12">
 <form method="POST" class="form-horizontal well" id="editStatusForm" action="<%=site.context%>/site/blocks/life-cycles/ajax/life-cycles.jag"  enctype="multipart/form-data">
     <input type="hidden" name="action" id="action" value="updateStatus"/>
     <input type="hidden" name="name" id="name" value="<%=api.name%>"/>
     <input type="hidden" name="version" id="version" value="<%=api.version%>"/>
     <input type="hidden" name="provider" id="provider" value="<%=api.provider%>"/>
     <div class="control-group">
                <label class="control-label" for="editStatus" name="state">State:</label>
                <div class="controls">
                    <select id="editStatus" name="status" onChange="getSelectedValue('<%=api.status%>')">
                        <option value="CREATED"<%=(api.status == "CREATED" ? ' selected="selected"' : '')%>>CREATED</option>
                        <option value="PUBLISHED"<%=(api.status == "PUBLISHED" ? ' selected="selected"' : '')%>>PUBLISHED</option>
                        <option value="DEPRECATED"<%=(api.status == "DEPRECATED" ? ' selected="selected"' : '')%>>DEPRECATED</option>
                        <option value="RETIRED"<%=(api.status == "RETIRED" ? ' selected="selected"' : '')%>>RETIRED</option>
                        <option value="BLOCKED"<%=(api.status == "BLOCKED" ? ' selected="selected"' : '')%>>BLOCKED</option>
                    </select>
                 </div> <br/>
                 <div class="controls">
                    <label class="checkbox">
                        <input type="checkbox" id="publishToGateway" name="publishToGateway" onChange="checkValue('#publishToGateway')" checked="true" value="true"> Propagate Changes to API Gateway
                    </label>
                     <label class="checkbox" id="deprecateOldVersionsDiv" style="display:none;">
                        <input type="checkbox" id="deprecateOldVersions" name="deprecateOldVersions" onChange="checkValue('#deprecateOldVersions')" value="false"> Deprecate Old Versions
                     </label>

                     <label class="checkbox" id="requireResubscriptionDiv" style="display:none;">
                        <input type="checkbox" id="requireResubscription" name="requireResubscription" onChange="checkValue('#requireResubscription')"  checked="true" value="true"> Require Re-Subscription
                     </label>
                 </div>



      </div>
       <div class="form-actions">
                <input type="submit" id="updateStateButton" disabled="disabled" class="btn btn-primary" value="Update"/>
                <input type="reset" id="cancelEdit" class="btn btn-primary" value="Reset">
       </div>
</form>
<h4>Life-Cycle History</h4><br/>
<%if(lcs!=null){
        var length = lcs.length;
        if (length == 0) {
        %>
        <span class="label label-info">No Life-cycles history data can be found for this API.</span>
 <%}%>

        <table class="lifeCycleTable">
  <thead>
         </thead>
       <tbody>
        <%for(var j=0;j<length;j++){
        var lc=lcs[j];
        var path = jagg.getMappedUrl("/site/pages/user.jag") + "?uname=" + lc.username;
        %>
        <tr>
        <td><i class="icon-info-sign"></i> <b><%=lc.date%></b></td><td>&nbsp;&nbsp;&nbsp;<i class="icon-user"></i><a href="<%=path%>"><%=lc.username%></a></td><td>&nbsp;&nbsp;&nbsp;
        <%if(lc.oldStatus==""){%>created the API. <%}else{%>
        changed api status from '<%=lc.oldStatus%>' to '<%=lc.newStatus%>'.
        <%}%>
        </td>
        </tr>
        <%}%>
        </tbody></table>
        <%}%>

</div></div>

<script type="text/javascript">
$(document).ready(function() {
 var v = $("#editStatusForm").validate({
        submitHandler: function(form) {
            $(form).ajaxSubmit({
                success:function(responseText, statusText, xhr, $form)  {
                  if(!responseText.error){
                      var current = window.location.pathname;
                      if (current.indexOf(".jag") >= 0) {
                      location.href = "item-info.jag?name=<%=api.name%>&version=<%=api.version%>&provider=<%=api.provider%>";
                      }else{
                      location.href = "site/pages/item-info.jag?name=<%=api.name%>&version=<%=api.version%>&provider=<%=api.provider%>";
                      }
                      $("#editStatusAPIForm")[0].reset();
                  }else{
                        jagg.message({content:responseText.message,type:"error"});
                  }
                }, dataType: 'json'
            });
        }
    });


 });
 var toggleUpdateBtn = function enableUpdateBtn(){
     var initPreserved = true;
     if($('#editStatus').val() != initOf_state) initPreserved = false;
     if($('#publishToGateway').val() != initOf_publishToGateway) initPreserved = false;
     if($('#deprecateOldVersions').val() != initOf_deprecateOldVersions) initPreserved = false;
     if($('#requireResubscription').val() != initOf_requireResubscription) initPreserved = false;
     if (initPreserved) {
         $('#updateStateButton').attr("disabled","disabled");
     } else {
         $('#updateStateButton').removeAttr("disabled");
     }
     console.info(initPreserved);
     return;

 };
$('#editStatus').change(toggleUpdateBtn);
$('#publishToGateway').change(toggleUpdateBtn);
$('#deprecateOldVersions').change(toggleUpdateBtn);
$('#requireResubscription').change(toggleUpdateBtn);

 </script>
<% }}); %>