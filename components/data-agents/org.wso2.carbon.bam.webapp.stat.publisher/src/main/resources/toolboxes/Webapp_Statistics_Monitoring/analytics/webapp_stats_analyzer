CREATE EXTERNAL TABLE IF NOT EXISTS WebappRequestData
	(key STRING,appName STRING, appOwnerTenant STRING, appVersion STRING, userId STRING, userTenant STRING, resource STRING, 
	requestCount INT, requestTime BIGINT) STORED BY 
	'org.apache.hadoop.hive.cassandra.CassandraStorageHandler' WITH SERDEPROPERTIES (
 	"cassandra.host" = "127.0.0.1","cassandra.port" = "9160",
	"cassandra.ks.name" = "EVENT_KS","cassandra.ks.username" = "admin",
	"cassandra.ks.password" = "admin",
	"cassandra.cf.name" = "bam_webapp_stat_publisher",
	"cassandra.columns.mapping" = ":key,
	payload_appName,payload_appOwnerTenant,
	payload_appVersion,payload_userId,
	payload_userTenant,payload_resource,payload_requestCount,
	payload_requestTime" );   


CREATE EXTERNAL TABLE IF NOT EXISTS WebappRequestSummaryData 
	(appName STRING, appOwnerTenant STRING, appVersion STRING, userId STRING, userTenant STRING,
	total_request_count INT) STORED BY
	'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
        'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
	'hive.jdbc.update.on.duplicate' = 'true',
	'hive.jdbc.primary.key.fields'='appName,appOwnerTenant,appVersion,userId,userTenant',
	'hive.jdbc.table.create.query' = 'CREATE TABLE WEBAPP_REQUEST_SUMMARY ( 
						appName VARCHAR(100),
						appOwnerTenant VARCHAR(100),
						appVersion VARCHAR(100),
						userId VARCHAR(100),
						userTenant VARCHAR(100),
						total_request_count INT, PRIMARY KEY(appName, appOwnerTenant, appVersion, userId, userTenant))' );

insert overwrite table WebappRequestSummaryData select 
						appName,
						appOwnerTenant,
						appVersion,
						userId,
						userTenant,
						sum(requestCount) as total_request_count
							from WebappRequestData
							group by appName, appOwnerTenant, appVersion, userId, userTenant;

CREATE EXTERNAL TABLE IF NOT EXISTS WebappResourceSummaryData
	(appName STRING,
	appOwnerTenant STRING,
	appVersion STRING,
	resource STRING,
	total_request_count INT) STORED BY
	'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES (
        'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
	'hive.jdbc.update.on.duplicate' = 'true',
	'hive.jdbc.primary.key.fields'='appName,appOwnerTenant,appVersion,resource',
	'hive.jdbc.table.create.query' = 'CREATE TABLE WEBAPP_RESOURCE_SUMMARY (
						appName VARCHAR(100),
						appOwnerTenant VARCHAR(100),
						appVersion VARCHAR(100),
						resource VARCHAR(255),
						total_request_count INT, PRIMARY KEY(appName,appOwnerTenant,appVersion,resource))' );

insert overwrite table WebappResourceSummaryData select
						appName,
						appOwnerTenant,
						appVersion,
						resource,
						sum(requestCount) as total_request_count
							from WebappRequestData group by appName,appOwnerTenant,appVersion,resource;

CREATE EXTERNAL TABLE IF NOT EXISTS WebappVersionUsageSummaryData ( 
        appName STRING,
        appVersion STRING,
        total_request_count INT) STORED BY 
        'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
        'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
	'hive.jdbc.update.on.duplicate' = 'true',
	'hive.jdbc.primary.key.fields'='appName,appVersion',
	'hive.jdbc.table.create.query' = 'CREATE TABLE WEBAPP_VERSION_USAGE_SUMMARY ( 
                                                appName VARCHAR(100),
                                                appVersion VARCHAR(100),
                                                total_request_count INT, PRIMARY KEY(appName,appVersion))' );
		
insert overwrite table WebappVersionUsageSummaryData select 
                                                    appName,
                                                    appVersion,
                                                    sum(requestCount) as total_request_count 
                                                    	from WebappRequestData group by appName,appVersion;

                                    
